<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:noNamespaceSchemaLocation="../../../../../../vendor/magento/magento2-functional-testing-framework/src/Magento/FunctionalTestingFramework/Test/etc/testSchema.xsd">
    <cest name="AdminPageBuilderTabsCest">
        <annotations>
            <features value="PageBuilder CMS"/>
            <stories value="PageBuilder Tabs Configuration"/>
            <group value="bluefoot"/>
            <env value="chrome"/>
            <env value="firefox"/>
            <env value="phantomjs"/>
        </annotations>
        <before>
            <loginAsAdmin stepKey="loginAsAdmin"/>
            <actionGroup ref="navigateToAPageWithBlueFoot" stepKey="navigateToAPageWithBlueFoot"/>
            <actionGroup ref="switchToBlueFootStage" stepKey="switchToBlueFootStage"/>
        </before>
        <after>
            <amOnPage url="admin/admin/auth/logout" stepKey="amOnLogoutPage"/>
            <waitForPageLoad stepKey="waitForAdminLoginPageLoad"/>
        </after>
        <test name="CanAddTabs">
            <annotations>
                <title value="Add Tabs onto stage"/>
                <description value="A user should be able to add Tabs into a row."/>
                <severity value="CRITICAL"/>
                <testCaseId value="MAGETWO-84922"/>
                <group value="bluefoot"/>
            </annotations>
            <actionGroup ref="addBlueFootPageTitle" stepKey="enterPageTitle">
                <argument name="contentBlockType" value="PageBuilderTabsContentBlock"/>
            </actionGroup>
            <click selector="{{BlueFootActionsSection.interactiveGroup}}" stepKey="clickInteractiveGroup"/>
            <actionGroup ref="dragContentBlockToStage" stepKey="dragTabsIntoStage">
                <argument name="contentBlockType" value="PageBuilderTabsContentBlock"/>
            </actionGroup>
            <actionGroup ref="openBlueFootEditPanel" stepKey="openEditMenuOnStage">
                <argument name="contentBlockType" value="PageBuilderTabsContentBlock"/>
            </actionGroup>
            <waitForLoadingMaskToDisappear stepKey="waitForEditPanelSpinner"/>
            <waitForElementVisible selector="{{PageBuilderTabsEditPanel.addNewTabButton}}" stepKey="waitForAddTabButton"/>
            <click selector="{{PageBuilderTabsEditPanel.addNewTabButton}}" stepKey="clickAddTabButton1"/>
            <fillField selector="{{PageBuilderTabsEditPanel.tabTitle('0')}}" userInput="Tab 1" stepKey="fillTabRow1TitleField"/>
            <fillField selector="{{PageBuilderTabsEditPanel.tabContent('0')}}" userInput="Tab 1 Content" stepKey="fillTabRow1ContentField"/>
            <click selector="{{PageBuilderTabsEditPanel.addNewTabButton}}" stepKey="clickAddTabButton2"/>
            <fillField selector="{{PageBuilderTabsEditPanel.tabTitle('1')}}" userInput="Tab 2" stepKey="fillTabRow2TitleField"/>
            <fillField selector="{{PageBuilderTabsEditPanel.tabContent('1')}}" userInput="Tab 2 Content" stepKey="fillTabRow2ContentField"/>
            <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings"/>
            <actionGroup ref="openBlueFootEditPanel" stepKey="reopenEditMenuOnStage">
                <argument name="contentBlockType" value="PageBuilderTabsContentBlock"/>
            </actionGroup>
            <seeInField selector="{{PageBuilderTabsEditPanel.tabTitle('0')}}" userInput="Tab 1" stepKey="seeTab1InEditGrid"/>
            <seeInField selector="{{PageBuilderTabsEditPanel.tabContent('0')}}" userInput="Tab 1 Content" stepKey="seeTab1ContentInEditGrid"/>
            <seeInField selector="{{PageBuilderTabsEditPanel.tabTitle('1')}}" userInput="Tab 2" stepKey="seeTab2InEditGrid"/>
            <seeInField selector="{{PageBuilderTabsEditPanel.tabContent('1')}}" userInput="Tab 2 Content" stepKey="seeTab2ContentInEditGrid"/>
            <actionGroup ref="closeEditPanelSettings" stepKey="closeEditPanelSettings"/>
            <seeElement selector="//li[@role='tab'][contains(@class, 'ui-tabs-active')]/a[@title='Tab 1']/span[contains(text(), 'Tab 1')]" stepKey="seeTab1TitleOnStage"/>
            <seeElement selector="//li[@role='tab']/a[@title='Tab 2']/span[contains(text(), 'Tab 2')]" stepKey="seeTab2TitleOnStage"/>
            <see selector="div.ui-tabs" userInput="Tab 1 Content" stepKey="seeTab1ContentOnStage"/>
            <dontSee selector="div.ui-tabs" userInput="Tab 2 Content" stepKey="dontSeeTab2ContentOnStage"/>
            <actionGroup ref="saveAndContinueEditCmsPage" stepKey="saveAndContinueEditCmsPage"/>
            <amOnPage url="{{PageBuilderTabsContentBlock.name}}{{BlueFootPageTitle.pageName}}" stepKey="amOnBlueFootPage"/>
            <see selector="div[data-role='tabs'] div[role='tab'] a" userInput="Tab 1" stepKey="seeTab1TitleOnStorefront"/>
            <see selector="div[data-role='tabs'] div[role='tab'] a" userInput="Tab 2" stepKey="seeTab2TitleOnStorefront"/>
            <see selector="div[data-role='tabs'] div.content" userInput="Tab 1 Content" stepKey="seeTab1ContentOnStorefront"/>
            <dontSee selector="div[data-role='tabs'] div.content" userInput="Tab 2 Content" stepKey="dontSeeTab2ContentOnStorefront"/>
            <click selector="a[href='#pagebuilder_tab1']" stepKey="clickTab2OnStorefront"/>
            <dontSee selector="div[data-role='tabs'] div.content" userInput="Tab 1 Content" stepKey="dontSeeTab1ContentOnStorefront"/>
            <see selector="div[data-role='tabs'] div.content" userInput="Tab 2 Content" stepKey="seeTab2ContentOnStorefront"/>
        </test>
        <test name="CanRemoveTabs">
            <annotations>
                <title value="Remove tabs content block from stage"/>
                <description value="A user should be able to remove tabs block from a row."/>
                <severity value="CRITICAL"/>
                <testCaseId value="MAGETWO-84895"/>
                <group value="bluefoot"/>
            </annotations>
            <fillField selector="{{BlueFootActionsSection.searchPanel}}" userInput="tabs" stepKey="fillSearch"/>
            <see userInput="Tabs" selector="{{BlueFootActionsSection.searchResults}}" stepKey="validateSearchResults"/>
            <actionGroup ref="dragContentBlockToStage" stepKey="dragContentBlockToStage">
                <argument name="contentBlockType" value="PageBuilderTabsContentBlock"/>
            </actionGroup>
            <seeElement selector='{{BlueFootActionsSection.contentBlockPreviewInStage(PageBuilderTabsContentBlock.role)}}' stepKey="seePreviewInStage"/>
            <actionGroup ref="removeContentBlockFromStage" stepKey="removeContentBlockFromStage">
                <argument name="contentBlockType" value="PageBuilderTabsContentBlock"/>
            </actionGroup>
            <dontSeeElement selector="{{BlueFootActionsSection.contentBlockInStage(PageBuilderTabsContentBlock.role)}}" stepKey="dontSeeContentBlockInStage"/>
        </test>
        <test name="TabsHasAdvancedFormSection">
            <annotations>
                <title value="Tabs has Advanced form section"/>
                <description value="A user should be able to configure advanced settings for tabs"/>
                <severity value="CRITICAL"/>
                <group value="bluefoot"/>
            </annotations>
            <click selector="{{BlueFootActionsSection.interactiveGroup}}" stepKey="clickInteractiveGroup"/>
            <actionGroup ref="dragContentBlockToStage" stepKey="dragTabsIntoStage">
                <argument name="contentBlockType" value="PageBuilderTabsContentBlock"/>
            </actionGroup>
            <actionGroup ref="openBlueFootEditPanel" stepKey="openEditMenuOnStage">
                <argument name="contentBlockType" value="PageBuilderTabsContentBlock"/>
            </actionGroup>
            <waitForElementVisible time="2" selector="{{AdvancedForm.advancedSectionName}}" stepKey="waitForAdvancedForm"/>
            <seeElement selector="{{AdvancedForm.advancedSectionName}}" stepKey="seeAdvancedFormSection"/>
            <click selector="{{AdvancedForm.advancedSectionName}}" stepKey="clickAdvancedFormSection"/>
            <actionGroup ref="validateSlideOutPanelField" stepKey="seeAdvancedCssClassesProperty">
                <argument name="property" value="PageBuilderAdvancedCssClassesProperty"/>
            </actionGroup>
            <actionGroup ref="validateSlideOutPanelField" stepKey="seeAdvancedCssClassesProperty">
                <argument name="property" value="PageBuilderAdvancedCssClassesProperty"/>
            </actionGroup>
            <actionGroup ref="validateSlideOutPanelField" stepKey="seeAdvancedAlignmentProperty">
                <argument name="property" value="PageBuilderAdvancedAlignmentProperty"/>
            </actionGroup>
            <actionGroup ref="validateSlideOutPanelField" stepKey="seeAdvancedMarginsAndPaddingProperty">
                <argument name="property" value="PageBuilderAdvancedMarginsAndPaddingProperty"/>
            </actionGroup>
        </test>
    </cest>
</config>
