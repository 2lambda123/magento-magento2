<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="../../../../../../vendor/magento/magento2-functional-testing-framework/src/Magento/FunctionalTestingFramework/Test/etc/testSchema.xsd">
    <test name="EmptySliderAdminPreview">
        <annotations>
            <features value="PageBuilder Slider MAGETWO-83835"/>
            <stories value="Empty Slider Admin Preview MAGETWO-87085"/>
            <title value="Verify Empty Slider default state on admin preview and storefront"/>
            <description value="As a Content Manager I want to see empty content blocks preview on the stage so that I see their position and can access their settings"/>
            <severity value="CRITICAL"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-slider"/>
        </annotations>
        <before>
            <amOnPage url="admin/admin/auth/logout" stepKey="amOnLogoutPage"/>
            <waitForPageLoad stepKey="waitForAdminLoginPageLoad"/>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="EnabledWYSIWYG" stepKey="enableWYSIWYG"/>
            <actionGroup ref="enablePageBuilderSetting" stepKey="enablePageBuilder"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="DisabledWYSIWYG" stepKey="disableWYSIWYG"/>
            <actionGroup ref="disablePageBuilderSetting" stepKey="disablePageBuilderSetting"/>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle">
            <argument name="contentBlockType" value="PageBuilderSliderContentBlock"/>
        </actionGroup>
        <click selector="{{PageBuilderActionsSection.mediaGroup}}" stepKey="clickMediaGroup"/>

        <comment userInput="User sees Slide configuration first slide open by default with a delay after rendering Slider on the stage" stepKey="AC0"/>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragSliderOntoStage">
            <argument name="contentBlockType" value="PageBuilderSliderContentBlock"/>
        </actionGroup>
        <!-- Adding Slider opens first slide by default-->
        <waitForElementVisible stepKey="wait1" selector="{{PageBuilderActionsSection.editFormTitle}}" time="10"/>
        <see userInput="Edit Slide" selector="{{PageBuilderActionsSection.editFormTitle}}" stepKey="editSlideOpensOnAddingSlider"/>

        <comment userInput="User sees Slider preview that shows Empty slide" stepKey="AC1"/>
        <actionGroup ref="closeEditPanelSettings" stepKey="closeEditPanelSettings"/>
        <!-- Verify Empty Slider with Empty Slide on Admin Preview -->
        <waitForElementVisible stepKey="wait2" selector="{{SlideInAdmin.emptySlide}}" time="10"/>
        <grabTextFrom selector="{{SlideInAdmin.emptySlide}}" stepKey="grabTitleFromEmptySlide"/>
        <assertEquals stepKey="assertEditSlideOnEmptyPreview" message="Empty slide says Edit slide text on admin preview">
            <expectedResult type="string">Edit slide text</expectedResult>
            <actualResult type="variable">grabTitleFromEmptySlide</actualResult>
        </assertEquals>

        <comment userInput="User sees Slider preview that contains first slide (poster)" stepKey="AC2"/>
        <assertElementContainsAttribute selector="{{SliderInAdmin.posterOverlay}}" attribute="style" expectedValue="background-color: transparent;" stepKey="verifyEmptySlideTransparentAdmin"/>

        <comment userInput="User sees dot that indicates first slide present and Add Slide button" stepKey="AC3"/>
        <moveMouseOver selector="{{SliderInAdmin.sliderContainer}}" stepKey="onMouseOverSliderStage"/>
        <seeElement selector="{{SliderInAdmin.slideNavigationDot('1')}}" stepKey="seeDotForFirstSlide"/>
        <moveMouseOver selector="{{SliderInAdmin.slideNavigationDot('1')}}" stepKey="moveMouseOverSlideNavigationDot1"/>
        <seeElement selector="{{SliderInAdmin.addNewSlide}}" stepKey="seeAddSlideButton"/>

        <comment userInput="User sees slider preview with min height is 300 px" stepKey="AC4"/>
        <assertElementContainsAttribute selector="{{SliderInAdmin.posterOverlay}}" attribute="style" expectedValue="min-height: 300px;" stepKey="verifyMinHeight300OnAdmin"/>

        <comment userInput="User sees empty slide with margin to be 0 px and and paddings to be 40 px by default" stepKey="AC5"/>
        <assertElementContainsAttribute selector="{{SliderInAdmin.slideWrapper}}" attribute="style" expectedValue="margin: 0px;" stepKey="verifyMargin0px"/>
        <assertElementContainsAttribute selector="{{SliderInAdmin.posterOverlay}}" attribute="style" expectedValue="padding: 40px;" stepKey="verifyPadding40px"/>

        <comment userInput="User sees no slide border by default" stepKey="AC6"/>
        <assertElementContainsAttribute selector="{{SliderInAdmin.slideWrapper}}" attribute="style" expectedValue="border: none;" stepKey="verifyBorderNone"/>
        <assertElementContainsAttribute selector="{{SliderInAdmin.slideWrapper}}" attribute="style" expectedValue="border-radius: 0px;" stepKey="verifyBorderRadius0"/>

        <comment userInput="User sees Slide order number in slide option panel" stepKey="AC7"/>
        <waitForElementVisible time="10" selector="{{PageBuilderActionsSection.contentBlockInStage(PageBuilderSliderContentBlock.role)}}" stepKey="waitForContentBlockInStageVisible" />
        <moveMouseOver selector="{{PageBuilderActionsSection.contentBlockInStage(PageBuilderSliderContentBlock.role)}}" x="10" y="0" stepKey="onMouseOverContentBlockStage"/>
        <waitForElementVisible time="10" selector="{{PageBuilderActionsSection.contentBlockOptionsMenu(PageBuilderSliderContentBlock.role)}}" stepKey="waitForOptions" />
        <seeElement selector="{{PageBuilderActionsSection.contentBlockOptionsMenu(PageBuilderSliderContentBlock.role)}}" stepKey="seeContentBlockOptionsMenu"/>
        <grabTextFrom selector="{{SlideInAdmin.optionTitle}}" stepKey="grabSlide1OptionTitle"/>
        <assertEquals expected="Slide 1" expectedType="string" actual="{$grabSlide1OptionTitle}" actualType="string" message="Slide order number in option panel" stepKey="assertSlideOrderInOption"/>

        <comment userInput="Verify slide defaults on admin: Background Color defaults to empty" stepKey="adminDefaultColor"/>
        <assertElementContainsAttribute selector="{{SliderInAdmin.posterOverlay}}" attribute="style" expectedValue="background-color: transparent" stepKey="verifyAdminTransparent"/>

        <comment userInput="Verify slide defaults on admin: Background Position defaults to Top Aligned" stepKey="adminDefaultPosition"/>
        <assertElementContainsAttribute selector="{{SliderInAdmin.slideWrapper}}" attribute="style" expectedValue="background-position: left top" stepKey="verifyAdminTopAligned"/>

        <comment userInput="Verify slide defaults on admin: Background Size defaults to Cover" stepKey="adminDefaultSize"/>
        <assertElementContainsAttribute selector="{{SliderInAdmin.slideWrapper}}" attribute="style" expectedValue="background-size: cover" stepKey="verifyAdminSizeCover"/>

        <comment userInput="Verify slide defaults on admin: Background Attachment defaults to Scroll" stepKey="adminDefaultAttachment"/>
        <assertElementContainsAttribute selector="{{SliderInAdmin.slideWrapper}}" attribute="style" expectedValue="background-attachment: scroll" stepKey="verifyAdminScrollAttachment"/>

        <!-- Verify Empty Slider with Empty Slide on Storefront -->
        <actionGroup ref="saveAndContinueEditCmsPage" stepKey="saveAndContinueEditCmsPage"/>
        <amOnPage url="slider{{PageBuilderPageTitle.pageName}}" stepKey="amOnPageBuilderPage"/>
        <waitForPageLoad stepKey="waitForStoreFrontPageLoad"/>
        <waitForElementVisible time="10" selector="{{SliderOnFrontend.SliderDisplay}}" stepKey="seeSliderOnPageBuilderPage"/>
        <comment userInput="Verify slide defaults on storefront: margin 0 px by default" stepKey="storefrontDefaultMargin"/>
        <assertElementContainsAttribute selector="{{SlideOnFrontend.slide1}}" attribute="style" expectedValue="margin: 0px;" stepKey="verifyMargin0pxStorefront"/>

        <comment userInput="Verify slide defaults on storefront: paddings 40 px by default" stepKey="storefrontDefaultPadding"/>
        <assertElementContainsAttribute selector="{{SlideOnFrontend.slideDefaultOverlay}}" attribute="style" expectedValue="padding: 40px;" stepKey="verifyPadding40pxStorefront"/>

        <comment userInput="Verify slide defaults on storefront: User sees no slide border by default" stepKey="storefrontDefaultBorder"/>
        <assertElementContainsAttribute selector="{{SlideOnFrontend.slide1}}" attribute="data-border" expectedValue="none" stepKey="verifyBorderNoneStorefront"/>
        <assertElementContainsAttribute selector="{{SlideOnFrontend.slide1}}" attribute="style" expectedValue="border-radius: 0px;" stepKey="verifyBorderRadius0Storefront"/>

        <comment userInput="Verify slide defaults on storefront: Appearance defaults to Poster" stepKey="storefrontDefaultAppearance" />
        <assertElementContainsAttribute selector="{{SlideOnFrontend.slide1}}" attribute="data-appearance" expectedValue="poster" stepKey="slideStorefrontPoster"/>

        <comment userInput="Verify slide defaults on storefront: Minimum Height defaults to 300" stepKey="storefrontDefaultMinHeight"/>
        <assertElementContainsAttribute selector="{{SlideOnFrontend.slideDefaultImage}}" attribute="style" expectedValue="min-height: 300px;" stepKey="slideStorefrontMinHeight"/>

        <comment userInput="Verify slide background defaults on storefront: Background Color defaults to empty" stepKey="storefrontDefaultColor" />
        <assertElementContainsAttribute selector="{{SlideOnFrontend.slideDefaultOverlay}}" attribute="style" expectedValue="background-color: transparent;" stepKey="slideStorefrontBackgroundColor"/>

        <comment userInput="Verify slide background defaults on storefront: Background Image defaults to empty" stepKey="storefrontDefaultImage"/>
        <assertElementContainsAttribute selector="{{SlideOnFrontend.slideDefaultImage}}" attribute="style" expectedValue="background-image: none;" stepKey="slideStorefrontBackgroundImage"/>

        <comment userInput="Verify slide background defaults on storefront: Background Position defaults to Top Aligned" stepKey="storefrontDefaultPosition"/>
        <assertElementContainsAttribute selector="{{SlideOnFrontend.slide1}}" attribute="style" expectedValue="background-position: left top;" stepKey="slideStorefrontPosition"/>

        <comment userInput="Verify slide background defaults on storefront: Background Size defaults to Cover" stepKey="storefrontDefaultSize"/>
        <assertElementContainsAttribute selector="{{SlideOnFrontend.slide1}}" attribute="style" expectedValue="background-size: cover;" stepKey="slideStorefrontSize"/>

        <comment userInput="Verify slide background defaults on storefront: Background Repeat defaults to No" stepKey="storefrontDefaultRepeat"/>
        <assertElementContainsAttribute selector="{{SlideOnFrontend.slide1}}" attribute="style" expectedValue="background-repeat: no-repeat;" stepKey="slideStorefrontRepeat"/>

        <comment userInput="Verify slide background defaults on storefront: Background Attachment defaults to Scroll" stepKey="storefrontDefaultAttachment"/>
        <assertElementContainsAttribute selector="{{SlideOnFrontend.slide1}}" attribute="style" expectedValue="background-attachment: scroll;" stepKey="slideStorefrontScroll"/>

        <comment userInput="Slide Content WYSIWYG defaults to empty" stepKey="storefrontDefaultContent" />
        <dontSeeInPageSource userInput="Edit slide text" stepKey="dontSeeInPageSource1"/>

        <comment userInput="Verify slide content defaults on storefront: Show Button defaults to Never Show" stepKey="storefrontDefaultShowButton"/>
        <assertElementContainsAttribute selector="{{SlideOnFrontend.slide1}}" attribute="data-show-button" expectedValue="never_show" stepKey="slideStorefrontShowButton"/>

        <comment userInput="Verify slide content defaults on storefront: Button Type defaults to Primary" stepKey="storefrontDefaultButtonType"/>
        <assertElementContainsAttribute selector="{{SlideOnFrontend.slide1}}" attribute="data-button-type" expectedValue="pagebuilder-button-primary" stepKey="slideStorefrontButtonType"/>

        <comment userInput="Verify slide content defaults on storefront: Show Overlay defaults to Never Show" stepKey="storefrontDefaultOverlay"/>
        <assertElementContainsAttribute selector="{{SlideOnFrontend.slide1}}" attribute="data-show-overlay" expectedValue="never_show" stepKey="slideStorefrontShowOverlay"/>
    </test>
    <test name="SlideAppearanceSectionDefaults">
        <annotations>
            <features value="PageBuilder Slider MAGETWO-83835"/>
            <stories value="Bluefoot Slide Configuration MAGETWO-75774"/>
            <title value="Slide Configuration Settings: Appearance section defaults"/>
            <description value="New slide has default values on Appearance section"/>
            <severity value="CRITICAL"/>
            <testCaseId value="MAGETWO-88737"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-slider"/>
        </annotations>
        <before>
            <amOnPage url="admin/admin/auth/logout" stepKey="amOnLogoutPage"/>
            <waitForPageLoad stepKey="waitForAdminLoginPageLoad"/>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="EnabledWYSIWYG" stepKey="enableWYSIWYG"/>
            <actionGroup ref="enablePageBuilderSetting" stepKey="enablePageBuilder"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="DisabledWYSIWYG" stepKey="disableWYSIWYG"/>
            <actionGroup ref="disablePageBuilderSetting" stepKey="disablePageBuilderSetting"/>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle">
            <argument name="contentBlockType" value="PageBuilderSliderContentBlock"/>
        </actionGroup>
        <click selector="{{PageBuilderActionsSection.mediaGroup}}" stepKey="clickMediaGroup"/>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragSliderOntoStage">
            <argument name="contentBlockType" value="PageBuilderSliderContentBlock"/>
        </actionGroup>
        <waitForElementVisible stepKey="waitForPageBuilder" selector="{{PageBuilderColumnSection.panelFieldControl(PageBuilderSlideAppearanceDefaultProperty.section, PageBuilderSlideAppearanceDefaultProperty.fieldName)}}" time="10"/>
        <waitForPageLoad stepKey="waitForPageBuilderPageLoad"/>
        <!--Verify default values on Appearance section of Add Slide form-->
        <comment userInput="Appearance defaults to Poster" stepKey="AC0" />
        <seeInField selector="{{PageBuilderColumnSection.panelFieldControl(PageBuilderSlideAppearanceDefaultProperty.section, PageBuilderSlideAppearanceDefaultProperty.fieldName)}}" userInput="Poster" stepKey="seePosterAppearanceDefault"/>

        <comment userInput="User sees 4 appearances displayed: Poster, Collage Left, Collage Center, Collage Right." stepKey="AC1" />
        <grabMultiple selector="{{PageBuilderColumnSection.panelFieldOptions(PageBuilderSlideAppearanceDefaultProperty.section, PageBuilderSlideAppearanceDefaultProperty.fieldName)}}" userInput="innerText" stepKey="grabAppearanceDropdownValues"/>
        <assertEquals stepKey="assertAppearanceDropdown" message="Verify 4 appearances displayed">
            <expectedResult type="array">[Poster, Collage Left, Collage Center, Collage Right]</expectedResult>
            <actualResult type="variable">grabAppearanceDropdownValues</actualResult>
        </assertEquals>

        <comment userInput="User doesn't see Advanced Content appearance" stepKey="AC2"/>
        <assertNotContains stepKey="assertNotContains" message="Advanced Content appearance not present">
            <expectedResult type="string">Advanced Content</expectedResult>
            <actualResult type="variable">grabAppearanceDropdownValues</actualResult>
        </assertNotContains>

        <comment userInput="User sees Title: input defaults to empty" stepKey="AC3"/>
        <grabValueFrom selector="{{PageBuilderActionsSection.panelFieldControl(PageBuilderSlideItemTitle1.section, PageBuilderSlideItemTitle1.fieldName)}}" stepKey="grabTitleDefaultValue"/>
        <assertEmpty stepKey="assertEmptyTitle" message="Title has text: $grabTitleDefaultValue">
            <actualResult type="variable">grabTitleDefaultValue</actualResult>
        </assertEmpty>

        <comment userInput="Minimum Height: input defaults to 300" stepKey="AC4"/>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="seeMinHeightDefault300">
            <argument name="property" value="PageBuilderSlideMinHeight"/>
        </actionGroup>
    </test>
    <test name="SlideBackgroundSectionDefaults">
        <annotations>
            <features value="PageBuilder Slider MAGETWO-83835"/>
            <stories value="Bluefoot Slide Configuration MAGETWO-75774"/>
            <title value="Slide Configuration Settings: Background section defaults"/>
            <description value="New slide has default values on Background section"/>
            <severity value="CRITICAL"/>
            <testCaseId value="MAGETWO-88731"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-slider"/>
        </annotations>
        <before>
            <amOnPage url="admin/admin/auth/logout" stepKey="amOnLogoutPage"/>
            <waitForPageLoad stepKey="waitForAdminLoginPageLoad"/>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="EnabledWYSIWYG" stepKey="enableWYSIWYG"/>
            <actionGroup ref="enablePageBuilderSetting" stepKey="enablePageBuilder"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="DisabledWYSIWYG" stepKey="disableWYSIWYG"/>
            <actionGroup ref="disablePageBuilderSetting" stepKey="disablePageBuilderSetting"/>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle">
            <argument name="contentBlockType" value="PageBuilderSliderContentBlock"/>
        </actionGroup>
        <click selector="{{PageBuilderActionsSection.mediaGroup}}" stepKey="clickMediaGroup"/>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragSliderOntoStage">
            <argument name="contentBlockType" value="PageBuilderSliderContentBlock"/>
        </actionGroup>
        <waitForElementVisible stepKey="wait1" selector="{{PageBuilderActionsSection.panelFieldControl(PageBuilderSlideBackgroundColorDefault.section, PageBuilderSlideBackgroundColorDefault.fieldName)}}" time="10"/>
        <waitForPageLoad stepKey="waitForPageBuilderPageLoad"/>
        <!--Verify default values on background section of Add Slide form-->
        <comment userInput="Background Color: input defaults to empty" stepKey="AC0" />
        <grabValueFrom selector="{{PageBuilderActionsSection.panelFieldControl(PageBuilderSlideBackgroundColorDefault.section, PageBuilderSlideBackgroundColorDefault.fieldName)}}" stepKey="grabColorDefaultValue"/>
        <assertEmpty stepKey="assertEmptyBackgroundColor" message="Background Color has text: $grabColorDefaultValue">
            <actualResult type="variable">grabColorDefaultValue</actualResult>
        </assertEmpty>

        <comment userInput="Background Image: mediaUpload defaults to empty" stepKey="AC1"/>
        <seeElement selector="{{UploadImageSection.PlaceholderContent('Background Image')}}" stepKey="seeImagePlaceHolderOnImage1"/>

        <comment userInput="Background Position: dropdown defaults to Top Aligned" stepKey="AC2"/>
        <seeInField selector="{{PageBuilderColumnSection.panelFieldControl(PageBuilderBackgroundPositionDefault.section, PageBuilderBackgroundPositionDefault.fieldName)}}" userInput="{{PageBuilderBackgroundPositionDefault.value}}" stepKey="seeTopAlignedPositionDefault"/>

        <comment userInput="Background Position: available values Top Aligned, Centered, Bottom Aligned" stepKey="AC3"/>
        <grabMultiple selector="{{PageBuilderColumnSection.panelFieldOptions(PageBuilderBackgroundPositionDefault.section, PageBuilderBackgroundPositionDefault.fieldName)}}" userInput="innerText" stepKey="grabBackgroundPositionDropdownValues"/>
        <assertEquals stepKey="assertPositionDropdown" message="Background Position in dropdown">
            <expectedResult type="array">[Top Aligned, Centered, Bottom Aligned]</expectedResult>
            <actualResult type="variable">grabBackgroundPositionDropdownValues</actualResult>
        </assertEquals>

        <comment userInput="Background Size: dropdown defaults to Cover" stepKey="AC4"/>
        <seeInField selector="{{PageBuilderColumnSection.panelFieldControl(PageBuilderSlideBackgroundSizeDefault.section, PageBuilderSlideBackgroundSizeDefault.fieldName)}}" userInput="{{PageBuilderSlideBackgroundSizeDefault.value}}" stepKey="seeBackgroundSizeDefault"/>
        <comment userInput="Background Size: available values Auto, Cover, Contain" stepKey="AC5"/>
        <grabMultiple selector="{{PageBuilderColumnSection.panelFieldOptions(PageBuilderSlideBackgroundSizeDefault.section, PageBuilderSlideBackgroundSizeDefault.fieldName)}}" userInput="innerText" stepKey="grabBackgroundSizeDropdownValues"/>
        <assertEquals stepKey="assertBackgroundSizeDropdown" message="Background sizes in dropdown">
            <expectedResult type="array">[Auto, Cover, Contain]</expectedResult>
            <actualResult type="variable">grabBackgroundSizeDropdownValues</actualResult>
        </assertEquals>

        <comment userInput="Background Repeat: switch defaults to No" stepKey="AC6"/>
        <actionGroup ref="seeOptionIsNotCheckedSlideOutProperty" stepKey="seeBackgroundRepeatPropertyDefaultNo">
            <argument name="property" value="PageBuilderBackgroundRepeatOff"/>
        </actionGroup>

        <comment userInput="Background Attachment: dropdown defaults to Scroll" stepKey="AC7"/>
        <seeInField selector="{{PageBuilderColumnSection.panelFieldControl(PageBuilderSlideBackgroundAttachmentDefault.section, PageBuilderSlideBackgroundAttachmentDefault.fieldName)}}" userInput="Scroll" stepKey="seeBackgroundAttachmentDefault"/>

        <comment userInput="Background Attachment: available values Scroll, Fixed" stepKey="AC8"/>
        <grabMultiple selector="{{PageBuilderColumnSection.panelFieldOptions(PageBuilderSlideBackgroundAttachmentDefault.section, PageBuilderSlideBackgroundAttachmentDefault.fieldName)}}" userInput="innerText" stepKey="grabBackgroundAttachmentDropdownValues"/>
        <assertEquals stepKey="assertBackgroundAttachmentDropdown" message="Background sizes in dropdown">
            <expectedResult type="array">[Scroll, Fixed]</expectedResult>
            <actualResult type="variable">grabBackgroundAttachmentDropdownValues</actualResult>
        </assertEquals>
    </test>
    <test name="SlideContentSectionDefaults">
        <annotations>
            <features value="PageBuilder Slider MAGETWO-83835"/>
            <stories value="Bluefoot Slide Configuration MAGETWO-75774"/>
            <title value="Slide Configuration Settings: Content section defaults"/>
            <description value="New slide has default values on Content section"/>
            <severity value="CRITICAL"/>
            <testCaseId value="MAGETWO-88737"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-slider"/>
        </annotations>
        <before>
            <amOnPage url="admin/admin/auth/logout" stepKey="amOnLogoutPage"/>
            <waitForPageLoad stepKey="waitForAdminLoginPageLoad"/>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="EnabledWYSIWYG" stepKey="enableWYSIWYG"/>
            <actionGroup ref="enablePageBuilderSetting" stepKey="enablePageBuilder"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="DisabledWYSIWYG" stepKey="disableWYSIWYG"/>
            <actionGroup ref="disablePageBuilderSetting" stepKey="disablePageBuilderSetting"/>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle">
            <argument name="contentBlockType" value="PageBuilderSliderContentBlock"/>
        </actionGroup>
        <click selector="{{PageBuilderActionsSection.mediaGroup}}" stepKey="clickMediaGroup"/>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragSliderOntoStage">
            <argument name="contentBlockType" value="PageBuilderSliderContentBlock"/>
        </actionGroup>
        <waitForElementVisible stepKey="wait1" selector="{{PageBuilderActionsSection.editFormTitle}}" time="10"/>
        <waitForPageLoad stepKey="waitForPageBuilderPageLoad"/>
        <!--Verify default values on content section of Add Slide form-->
        <comment userInput="Slide Content: WYSIWYG defaults to empty" stepKey="AC0" />
        <!-- unable to get content to variable MQE-818 -->

        <comment userInput="Show Button: dropdown defaults to Never Show " stepKey="AC1"/>
        <seeInField selector="{{PageBuilderColumnSection.panelFieldControl(PageBuilderSlideShowButtonDefaultProperty.section, PageBuilderSlideShowButtonDefaultProperty.fieldName)}}" userInput="Never Show" stepKey="seeShowButtonDefault"/>

        <comment userInput="Show Button: available values Always, On Hover, Never Show" stepKey="AC2"/>
        <grabMultiple selector="{{PageBuilderColumnSection.panelFieldOptions(PageBuilderSlideShowButtonDefaultProperty.section, PageBuilderSlideShowButtonDefaultProperty.fieldName)}}" userInput="innerText" stepKey="grabShowButtonDropdownValues"/>
        <assertEquals stepKey="assertShowButtonDropdown" message="Button Types in dropdown">
            <expectedResult type="array">[Always, On Hover, Never Show]</expectedResult>
            <actualResult type="variable">grabShowButtonDropdownValues</actualResult>
        </assertEquals>

        <comment userInput="Button Text: input defaults to empty." stepKey="AC3"/>
        <grabValueFrom selector="{{PageBuilderActionsSection.panelFieldControl(PageBuilderSlideItemButtonTextDefault.section, PageBuilderSlideItemButtonTextDefault.section)}}" stepKey="grabButtonTextValue"/>
        <assertEmpty stepKey="assertEmptyButtonText" message="Button text has text: $grabButtonTextValue">
            <actualResult type="variable">grabButtonTextValue</actualResult>
        </assertEmpty>

        <comment userInput="Button Text: Field is disabled by default due to Never show default on Show Button" stepKey="AC4"/>
        <actionGroup ref="validateSlideOutPanelFieldIsDisabled" stepKey="validateButtonTextAttributeDisabled">
            <argument name="property" value="PageBuilderSlideButtonTextDefaultProperty"/>
        </actionGroup>

        <comment userInput="Button Type: dropdown defaults to Primary" stepKey="AC5"/>
        <seeInField selector="{{PageBuilderColumnSection.panelFieldControl(PageBuilderSlideButtonTypeDefaultProperty.section, PageBuilderSlideButtonTypeDefaultProperty.fieldName)}}" userInput="{{PageBuilderSlideButtonTypeDefaultProperty.value}}" stepKey="seeButtonTypeDefault"/>

        <comment userInput="Button Type: available values Primary, Secondary, Link. " stepKey="AC6"/>
        <grabMultiple selector="{{PageBuilderColumnSection.panelFieldOptions(PageBuilderSlideButtonTypeDefaultProperty.section, PageBuilderSlideButtonTypeDefaultProperty.fieldName)}}" userInput="innerText" stepKey="grabButtonTypeDropdownValues"/>
        <assertEquals stepKey="assertButtonTypeDropdown" message="Button Types in dropdown">
            <expectedResult type="array">[Primary, Secondary, Link]</expectedResult>
            <actualResult type="variable">grabButtonTypeDropdownValues</actualResult>
        </assertEquals>

        <comment userInput="Button Type: Field is disabled by default due to Never show default on Show Button" stepKey="AC7"/>
        <actionGroup ref="validateSlideOutPanelFieldIsDisabled" stepKey="validateButtonTypeDisabled">
            <argument name="property" value="PageBuilderSlideButtonTypeDefaultProperty"/>
        </actionGroup>

        <comment userInput="Show Overlay: dropdown defaults to Never Show " stepKey="AC8"/>
        <seeInField selector="{{PageBuilderColumnSection.panelFieldControl(PageBuilderSlideShowOverlayDefaultProperty.section, PageBuilderSlideShowOverlayDefaultProperty.fieldName)}}" userInput="{{PageBuilderSlideShowOverlayDefaultProperty.value}}" stepKey="seeShowOverlayDefault"/>

        <comment userInput="Show Overlay: available values Always, On hover, Never show" stepKey="AC9"/>
        <grabMultiple selector="{{PageBuilderColumnSection.panelFieldOptions(PageBuilderSlideShowOverlayDefaultProperty.section, PageBuilderSlideShowOverlayDefaultProperty.fieldName)}}" userInput="innerText" stepKey="grabShowOverlayDropdownValues"/>
        <assertEquals stepKey="assertShowOverlayDropdown" message="Show Overlay in dropdown">
            <expectedResult type="array">[Always, On Hover, Never Show]</expectedResult>
            <actualResult type="variable">grabShowOverlayDropdownValues</actualResult>
        </assertEquals>

        <comment userInput="Overlay Color: input defaults to white." stepKey="AC10"/>
        <grabValueFrom selector="{{PageBuilderActionsSection.panelFieldControl(PageBuilderSlideOverlayColorDefaultProperty.section, PageBuilderSlideOverlayColorDefaultProperty.fieldName)}}" stepKey="grabOverlayColorValue"/>
        <assertEquals stepKey="assertOverlayColorValue" message="Overlay Color has text: $grabOverlayColorValue">
            <expectedResult type="string">#FFFFFF</expectedResult>
            <actualResult type="variable">grabOverlayColorValue</actualResult>
        </assertEquals>

        <comment userInput="Overlay Color: Field is disabled by default due to Never Show default on Show Overlay." stepKey="AC11"/>
        <actionGroup ref="validateSlideOutPanelFieldIsDisabled" stepKey="validateOverlayColorDisabled">
            <argument name="property" value="PageBuilderSlideOverlayColorDefaultProperty"/>
        </actionGroup>
    </test>
</tests>