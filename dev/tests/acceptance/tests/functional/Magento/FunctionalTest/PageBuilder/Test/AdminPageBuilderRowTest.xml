<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:noNamespaceSchemaLocation="../../../../../../vendor/magento/magento2-functional-testing-framework/src/Magento/FunctionalTestingFramework/Test/etc/testSchema.xsd">
    <test name="InitializeWithRow">
        <annotations>
            <title value="Row exists on initialise"/>
            <description value="The stage should contain a row on initialise."/>
            <severity value="CRITICAL"/>
            <testCaseId value="MAGETWO-82841"/>
            <group value="pagebuilder"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="EnabledWYSIWYG" stepKey="enableWYSIWYG"/>
            <actionGroup ref="enablePageBuilderSetting" stepKey="enablePageBuilderSetting"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="DisabledWYSIWYG" stepKey="disableWYSIWYG"/>
            <amOnPage url="admin/admin/auth/logout" stepKey="amOnLogoutPage"/>
            <waitForPageLoad stepKey="waitForAdminLoginPageLoad"/>
        </after>
        <wait time="1" stepKey="wait"/>
        <seeElement selector="{{PageBuilderRowSection.row}}" stepKey="seeElementRow"/>
    </test>
    <test name="CanAddAdditionalRow">
        <annotations>
            <title value="Can add an additional row"/>
            <description value="The user should be able to add additional rows."/>
            <severity value="CRITICAL"/>
            <testCaseId value="MAGETWO-82857"/>
            <group value="pagebuilder"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="EnabledWYSIWYG" stepKey="enableWYSIWYG"/>
            <actionGroup ref="enablePageBuilderSetting" stepKey="enablePageBuilderSetting"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="DisabledWYSIWYG" stepKey="disableWYSIWYG"/>
            <amOnPage url="admin/admin/auth/logout" stepKey="amOnLogoutPage"/>
            <waitForPageLoad stepKey="waitForAdminLoginPageLoad"/>
        </after>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragRowIntoStage">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <seeNumberOfElements selector="{{PageBuilderRowSection.allRows}}" userInput="2" stepKey="seeElementRow"/>
    </test>
    <test name="CanRemoveRow">
        <annotations>
            <title value="Can remove a row"/>
            <description value="A user should be able to remove a row from the stage"/>
            <severity value="CRITICAL"/>
            <group value="pagebuilder"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="EnabledWYSIWYG" stepKey="enableWYSIWYG"/>
            <actionGroup ref="enablePageBuilderSetting" stepKey="enablePageBuilderSetting"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="DisabledWYSIWYG" stepKey="disableWYSIWYG"/>
            <amOnPage url="admin/admin/auth/logout" stepKey="amOnLogoutPage"/>
            <waitForPageLoad stepKey="waitForAdminLoginPageLoad"/>
        </after>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragRowIntoStage">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <seeNumberOfElements selector="{{PageBuilderRowSection.allRows}}" userInput="2" stepKey="seeTwoRows"/>
        <actionGroup ref="removePageBuilderRow" stepKey="removeRow"/>
        <seeNumberOfElements selector="{{PageBuilderRowSection.allRows}}" userInput="1" stepKey="seeOneRow"/>
    </test>
    <test name="CantRemoveLastRow">
        <annotations>
            <title value="Can't remove last row"/>
            <description value="A user shouldn't be able to remove the final row from the stage"/>
            <severity value="CRITICAL"/>
            <testCaseId value="MAGETWO-82859"/>
            <group value="pagebuilder"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="EnabledWYSIWYG" stepKey="enableWYSIWYG"/>
            <actionGroup ref="enablePageBuilderSetting" stepKey="enablePageBuilderSetting"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="DisabledWYSIWYG" stepKey="disableWYSIWYG"/>
            <amOnPage url="admin/admin/auth/logout" stepKey="amOnLogoutPage"/>
            <waitForPageLoad stepKey="waitForAdminLoginPageLoad"/>
        </after>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragRowIntoStage">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <seeNumberOfElements selector="{{PageBuilderRowSection.allRows}}" userInput="2" stepKey="seeTwoRows"/>
        <actionGroup ref="removePageBuilderRow" stepKey="removeRow"/>
        <seeNumberOfElements selector="{{PageBuilderRowSection.allRows}}" userInput="1" stepKey="seeOneRow"/>
        <moveMouseOver selector="{{PageBuilderRowSection.row}}" stepKey="onMouseOverRow"/>
        <seeElement selector="{{PageBuilderRowSection.rowOptionsMenu}}" stepKey="seeRowOptionsMenu"/>
        <click selector="{{PageBuilderActionsSection.contentBlockDelete}}" stepKey="clickRemoveBlockButton"/>
        <seeElement selector="{{PageBuilderActionsSection.contentBlockDeleteDisabled}}" stepKey="seeDisabledRemoveBlockButton" />
        <wait time="1" stepKey="wait2"/>
        <seeNumberOfElements selector="{{PageBuilderRowSection.allRows}}" userInput="1" stepKey="seeOneRow1"/>
    </test>
    <test name="RowHasAdvancedFormSection">
        <annotations>
            <title value="Row has Advanced form section"/>
            <description value="A user should be able to configure advanced settings for rows"/>
            <severity value="CRITICAL"/>
            <group value="pagebuilder"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="EnabledWYSIWYG" stepKey="enableWYSIWYG"/>
            <actionGroup ref="enablePageBuilderSetting" stepKey="enablePageBuilderSetting"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="DisabledWYSIWYG" stepKey="disableWYSIWYG"/>
            <amOnPage url="admin/admin/auth/logout" stepKey="amOnLogoutPage"/>
            <waitForPageLoad stepKey="waitForAdminLoginPageLoad"/>
        </after>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <waitForElementVisible time="3" selector="{{AdvancedForm.advancedSectionName}}" stepKey="waitForAdvancedForm"/>
        <seeElement selector="{{AdvancedForm.advancedSectionName}}" stepKey="seeAdvancedFormSection"/>
        <click selector="{{AdvancedForm.advancedSectionName}}" stepKey="clickAdvancedFormSection"/>
        <actionGroup ref="validateSlideOutPanelField" stepKey="seeAdvancedCssClassesProperty">
            <argument name="property" value="PageBuilderAdvancedCssClassesProperty"/>
        </actionGroup>
        <actionGroup ref="validateSlideOutPanelField" stepKey="seeAdvancedAlignmentProperty">
            <argument name="property" value="PageBuilderAdvancedAlignmentProperty"/>
        </actionGroup>
        <actionGroup ref="validateSlideOutPanelField" stepKey="seeAdvancedMarginsAndPaddingProperty">
            <argument name="property" value="PageBuilderAdvancedMarginsAndPaddingProperty"/>
        </actionGroup>
    </test>
    <test name="RowHasBackgroundFormSection">
        <annotations>
            <title value="Add background tab"/>
            <description value="See that the background tab in row form works"/>
            <severity value="CRITICAL"/>
            <group value="pagebuilder"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="EnabledWYSIWYG" stepKey="enableWYSIWYG"/>
            <actionGroup ref="enablePageBuilderSetting" stepKey="enablePageBuilderSetting"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="DisabledWYSIWYG" stepKey="disableWYSIWYG"/>
            <amOnPage url="admin/admin/auth/logout" stepKey="amOnLogoutPage"/>
            <waitForPageLoad stepKey="waitForAdminLoginPageLoad"/>
        </after>
        <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle1">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragRowIntoStage">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <waitForElementVisible time="2" selector="{{RowOnBackend.backgroundSectionName}}" stepKey="waitForBackgroundForm"/>
        <seeElement selector="{{RowOnBackend.backgroundSectionName}}" stepKey="seeBackgroundFormSection"/>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterIdentifierProperty">
            <argument name="property" value="PageBuilderBackgroundColorProperty"/>
        </actionGroup>
        <actionGroup ref="attachFileSlideOutProperty" stepKey="attachPageBuilderFile">
            <argument name="property" value="PageBuilderBackgroundImageProperty"/>
        </actionGroup>
        <actionGroup ref="selectSlideOutPanelField" stepKey="enterBackgroundPositionProperty">
            <argument name="property" value="PageBuilderBackgroundPositionProperty"/>
        </actionGroup>
        <actionGroup ref="selectSlideOutPanelField" stepKey="enterSizeProperty">
            <argument name="property" value="PageBuilderBackgroundSizeProperty"/>
        </actionGroup>
        <click selector="{{PageBuilderColumnSection.backgroundRepeatSwitch}}" stepKey="clickBackgroundProperty"/>
        <actionGroup ref="selectSlideOutPanelField" stepKey="enterAttachmentProperty">
            <argument name="property" value="PageBuilderBackgroundAttachmentProperty"/>
        </actionGroup>
        <click selector="{{AdvancedForm.advancedSectionName}}" stepKey="clickAdvancedFormSection"/>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings"/>
        <actionGroup ref="saveAndContinueEditCmsPage" stepKey="saveAndContinueEditCmsPage"/>
        <see userInput="{{PageBuilderPageTitle.pageName}}" selector="{{CmsPageSection.cmsPageTitle}}" stepKey="assertTitleSavedCmsPage"/>
        <click selector="{{CmsNewPagePageContentSection.header}}" stepKey="clickExpandContent"/>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openSavedEditMenuOnStage">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <waitForElementVisible time="2" selector="{{RowOnBackend.backgroundSectionName}}" stepKey="waitForBackgroundFormAgain"/>
        <click selector="{{RowOnBackend.backgroundSectionName}}" stepKey="clickBackgroundFormSectionAgain"/>
        <seeInField userInput="{{PageBuilderBackgroundColorProperty.value}}" selector="{{RowOnBackend.colorInput}}" stepKey="assertBackgroundColorSavedInRow"/>
        <seeOptionIsSelected userInput="{{PageBuilderBackgroundSizeProperty.value}}" selector="{{RowOnBackend.sizeInput}}" stepKey="assertBackgroundSizeSavedInRow"/>
        <seeOptionIsSelected userInput="{{PageBuilderBackgroundAttachmentProperty.value}}" selector="{{RowOnBackend.attachmentInput}}" stepKey="assertBackgroundAttachmentSavedInRow"/>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings"/>
        <actionGroup ref="saveAndContinueEditCmsPage" stepKey="saveAndContinueEditCmsPage"/>
        <see userInput="{{PageBuilderPageTitle.pageName}}" selector="{{CmsPageSection.cmsPageTitle}}" stepKey="assertTitleSavedCmsPage"/>
        <amOnPage url="Row{{PageBuilderPageTitle.pageName}}" stepKey="amOnPageBuilderPage"/>
        <seeElementInDOM selector="{{RowOnFrontend.backgroundColor}}" stepKey="seeBackgroundColorSet"/>
        <seeElementInDOM selector="{{RowOnFrontend.backgroundImage}}" stepKey="seeBackgroundImageSet"/>
        <seeElementInDOM selector="{{RowOnFrontend.backgroundPosition}}" stepKey="seeBackgroundPositionSet"/>
        <seeElementInDOM selector="{{RowOnFrontend.backgroundSize}}" stepKey="seeBackgroundSizeSet"/>
        <seeElementInDOM selector="{{RowOnFrontend.backgroundRepeat}}" stepKey="seeBackgroundRepeatSet"/>
        <seeElementInDOM selector="{{RowOnFrontend.backgroundAttachment}}" stepKey="seeBackgroundAttachmentSet"/>
    </test>
    <test name="CanAddParallaxBackground">
        <annotations>
            <title value="Add parallax to background image"/>
            <description value="A user should be able to apply parallax to a background image"/>
            <severity value="CRITICAL"/>
            <group value="pagebuilder"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="EnabledWYSIWYG" stepKey="enableWYSIWYG"/>
            <actionGroup ref="enablePageBuilderSetting" stepKey="enablePageBuilderSetting"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="DisabledWYSIWYG" stepKey="disableWYSIWYG"/>
            <amOnPage url="admin/admin/auth/logout" stepKey="amOnLogoutPage"/>
            <waitForPageLoad stepKey="waitForAdminLoginPageLoad"/>
        </after>
        <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle1">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragRowIntoStage">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <waitForElementVisible time="2" selector="{{RowOnBackend.parallaxSectionName}}" stepKey="waitForParallaxForm"/>
        <seeElement selector="{{RowOnBackend.parallaxSectionName}}" stepKey="seeParallaxFormSection"/>
        <click selector="{{RowOnBackend.parallaxSectionName}}" stepKey="clickParallaxFormSection"/>
        <actionGroup ref="validateSlideOutPanelField" stepKey="seeParallaxEnabledProperty">
            <argument name="property" value="PageBuilderParallaxEnabledProperty"/>
        </actionGroup>
        <actionGroup ref="validateSlideOutPanelField" stepKey="seeParallaxSpeedProperty">
            <argument name="property" value="PageBuilderParallaxSpeedProperty"/>
        </actionGroup>
        <actionGroup ref="validateSlideOutPanelFieldIsRequired" stepKey="seeParallaxEnabledPropertyIsRequired">
            <argument name="property" value="PageBuilderParallaxEnabledProperty"/>
        </actionGroup>
        <actionGroup ref="validateSlideOutPanelFieldIsRequired" stepKey="seeParallaxSpeedPropertyIsRequired">
            <argument name="property" value="PageBuilderParallaxSpeedProperty"/>
        </actionGroup>
        <actionGroup ref="clickSlideOutPanelFieldGeneral" stepKey="enterParallaxEnabled">
            <argument name="property" value="PageBuilderParallaxEnabledProperty"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterParallaxSpeedProperty">
            <argument name="property" value="PageBuilderParallaxSpeedProperty"/>
        </actionGroup>
        <click selector="{{AdvancedForm.advancedSectionName}}" stepKey="clickAdvancedFormSection"/>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings"/>
        <actionGroup ref="saveAndContinueEditCmsPage" stepKey="saveAndContinueEditCmsPage"/>
        <see userInput="{{PageBuilderPageTitle.pageName}}" selector="{{CmsPageSection.cmsPageTitle}}" stepKey="assertTitleSavedCmsPage"/>
        <amOnPage url="Row{{PageBuilderPageTitle.pageName}}" stepKey="amOnPageBuilderPage"/>
        <waitForPageLoad stepKey="waitForParallaxLibraryLoad"/>
        <seeElementInDOM selector="{{RowOnFrontend.parallaxClass}}" stepKey="seeParallaxBackgroundSet"/>
        <seeElementInDOM selector="{{RowOnFrontend.parallaxSpeed(PageBuilderParallaxSpeedProperty.value)}}" stepKey="seeParallaxSpeedSet"/>
    </test>
    <test name="RowHasAdvancedFormSectionRequiredFields">
        <annotations>
            <title value="Add advanced tab"/>
            <description value="See all the required fields in row content type advanced section"/>
            <severity value="CRITICAL"/>
            <testCaseId value="MAGETWO-84661"/>
            <group value="pagebuilder"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="EnabledWYSIWYG" stepKey="enableWYSIWYG"/>
            <actionGroup ref="enablePageBuilderSetting" stepKey="enablePageBuilderSetting"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="DisabledWYSIWYG" stepKey="disableWYSIWYG"/>
            <amOnPage url="admin/admin/auth/logout" stepKey="amOnLogoutPage"/>
            <waitForPageLoad stepKey="waitForAdminLoginPageLoad"/>
        </after>
        <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle1">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragRowIntoStage">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <waitForElementVisible time="3" selector="{{AdvancedForm.advancedSectionName}}" stepKey="waitForAdvancedForm"/>
        <seeElement selector="{{AdvancedForm.advancedSectionName}}" stepKey="seeAdvancedFormSection"/>
        <click selector="{{AdvancedForm.advancedSectionName}}" stepKey="clickAdvancedFormSection"/>
        <actionGroup ref="validateSlideOutPanelField" stepKey="seeAdvancedTextColorProperty">
            <argument name="property" value="PageBuilderAdvancedTextColorProperty"/>
        </actionGroup>
        <actionGroup ref="validateSlideOutPanelField" stepKey="seeAdvancedBorderProperty">
            <argument name="property" value="PageBuilderAdvancedBorderProperty"/>
        </actionGroup>
        <actionGroup ref="validateSlideOutPanelField" stepKey="seeAdvancedBorderColorProperty">
            <argument name="property" value="PageBuilderAdvancedBorderColorProperty"/>
        </actionGroup>
        <actionGroup ref="validateSlideOutPanelField" stepKey="seeAdvancedBorderSizeProperty">
            <argument name="property" value="PageBuilderAdvancedBorderSizeProperty"/>
        </actionGroup>
        <actionGroup ref="validateSlideOutPanelField" stepKey="seeAdvancedBorderRadiusProperty">
            <argument name="property" value="PageBuilderAdvancedBorderRadiusProperty"/>
        </actionGroup>
        <actionGroup ref="validateSlideOutPanelField" stepKey="seeAdvancedCssClassesProperty">
            <argument name="property" value="PageBuilderAdvancedCssClassesProperty"/>
        </actionGroup>
        <actionGroup ref="validateSlideOutPanelField" stepKey="seeAdvancedAlignmentProperty">
            <argument name="property" value="PageBuilderAdvancedAlignmentProperty"/>
        </actionGroup>
        <actionGroup ref="validateSlideOutPanelField" stepKey="seeAdvancedMarginsAndPaddingProperty">
            <argument name="property" value="PageBuilderAdvancedMarginsAndPaddingProperty"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelField" stepKey="enterAdvancedTextColorProperty">
            <argument name="property" value="PageBuilderAdvancedTextColorProperty_ffffff"/>
        </actionGroup>
        <actionGroup ref="selectSlideOutPanelField" stepKey="enterAdvancedBorderProperty">
            <argument name="property" value="PageBuilderAdvancedBorderPropertyDotted"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelField" stepKey="enterAdvancedBorderColorProperty">
            <argument name="property" value="PageBuilderAdvancedBorderColorProperty_ffffff"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelField" stepKey="enterAdvancedBorderSizeProperty">
            <argument name="property" value="PageBuilderAdvancedBorderSizeProperty10"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelField" stepKey="enterAdvancedBorderRadiusProperty">
            <argument name="property" value="PageBuilderAdvancedBorderRadiusProperty12"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelField" stepKey="enterAdvancedCssClassesProperty">
            <argument name="property" value="PageBuilderAdvancedCssClassesProperty"/>
        </actionGroup>
        <actionGroup ref="selectSlideOutPanelField" stepKey="enterAdvancedAlignmentProperty">
            <argument name="property" value="PageBuilderAdvancedAlignmentProperty"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldMarginsAndPadding" stepKey="enterAdvancedMarginsAndPaddingProperty">
            <argument name="property" value="PageBuilderAdvancedMarginsAndPaddingProperty"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveRowEditPanelSettings"/>
        <actionGroup ref="saveAndContinueEditCmsPage" stepKey="saveAndContinueEditCmsPage"/>
        <see userInput="{{PageBuilderPageTitle.pageName}}" selector="{{CmsPageSection.cmsPageTitle}}" stepKey="assertTitleSavedCmsPage"/>
        <click selector="{{CmsNewPagePageContentSection.header}}" stepKey="clickExpandContent"/>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openSavedEditMenuOnStage">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <waitForElementVisible time="2" selector="{{AdvancedForm.advancedSectionName}}" stepKey="waitForSavedAdvancedForm"/>
        <seeElement selector="{{AdvancedForm.advancedSectionName}}" stepKey="seeSavedAdvancedFormSection"/>
        <click selector="{{AdvancedForm.advancedSectionName}}" stepKey="clickSavedAdvancedFormSection"/>
        <seeOptionIsSelected userInput="{{PageBuilderAdvancedAlignmentProperty.value}}" selector="{{AdvancedForm.advancedAlignment}}" stepKey="assertAlignmentSavedInRow"/>
        <seeOptionIsSelected userInput="{{PageBuilderAdvancedBorderPropertyDotted.value}}" selector="{{AdvancedForm.advancedBorder}}" stepKey="assertBorderSavedInRow"/>
        <seeInField userInput="{{PageBuilderAdvancedBorderColorProperty_ffffff.value}}" selector="{{AdvancedForm.advancedBorderColor}}" stepKey="assertBorderColorSavedInRow"/>
        <seeInField userInput="{{PageBuilderAdvancedBorderSizeProperty10.value}}" selector="{{AdvancedForm.advancedBorderSize}}" stepKey="assertBorderSizeSavedInRow"/>
        <seeInField userInput="{{PageBuilderAdvancedBorderRadiusProperty12.value}}" selector="{{AdvancedForm.advancedBorderRadius}}" stepKey="assertBorderRadiusSavedInRow"/>
        <seeInField userInput="{{PageBuilderAdvancedTextColorProperty_ffffff.value}}" selector="{{AdvancedForm.advancedTextColor}}" stepKey="assertTextColorSavedInRow"/>
        <seeInField userInput="{{PageBuilderAdvancedCssClassesProperty.value}}" selector="{{AdvancedForm.advancedCssClasses}}" stepKey="assertCSSClassesSavedInRow"/>
        <seeInField userInput="{{PageBuilderAdvancedMarginsAndPaddingProperty.marginTop}}" selector="{{AdvancedForm.advancedMarginTop}}" stepKey="assertMarginTopSavedInRow"/>
        <seeInField userInput="{{PageBuilderAdvancedMarginsAndPaddingProperty.marginRight}}" selector="{{AdvancedForm.advancedMarginRight}}" stepKey="assertMarginRightSavedInRow"/>
        <seeInField userInput="{{PageBuilderAdvancedMarginsAndPaddingProperty.marginLeft}}" selector="{{AdvancedForm.advancedMarginLeft}}" stepKey="assertMarginLefSavedInRow"/>
        <seeInField userInput="{{PageBuilderAdvancedMarginsAndPaddingProperty.marginBottom}}" selector="{{AdvancedForm.advancedMarginBottom}}" stepKey="assertMarginBottomSavedInRow"/>
        <seeInField userInput="{{PageBuilderAdvancedMarginsAndPaddingProperty.paddingTop}}" selector="{{AdvancedForm.advancedPaddingTop}}" stepKey="assertPaddingTopSavedInRow"/>
        <seeInField userInput="{{PageBuilderAdvancedMarginsAndPaddingProperty.paddingRight}}" selector="{{AdvancedForm.advancedPaddingRight}}" stepKey="assertPaddingRightSavedInRow"/>
        <seeInField userInput="{{PageBuilderAdvancedMarginsAndPaddingProperty.paddingLeft}}" selector="{{AdvancedForm.advancedPaddingLeft}}" stepKey="assertPaddingLefSavedInRow"/>
        <seeInField userInput="{{PageBuilderAdvancedMarginsAndPaddingProperty.paddingBottom}}" selector="{{AdvancedForm.advancedPaddingBottom}}" stepKey="assertPaddingBottomSavedInRow"/>
        <amOnPage url="row{{PageBuilderPageTitle.pageName}}" stepKey="amOnPageBuilderPage"/>
        <waitForElementVisible time="2" selector="{{RowsOnFrontend.rowDisplay}}" stepKey="waitForFrontEndRow"/>
        <seeElement selector="{{RowsOnFrontend.rowColor}}" stepKey="seeRowColorStyle"/>
        <seeElement selector="{{RowsOnFrontend.rowTextAlign}}" stepKey="seeRowTextAlignStyle"/>
        <seeElement selector="{{RowsOnFrontend.rowBorder}}" stepKey="seeRowBorderStyle"/>
        <seeElement selector="{{RowsOnFrontend.rowBorderRadius}}" stepKey="seeRowBorderRadiusStyle"/>
        <seeElement selector="{{RowsOnFrontend.rowMargin}}" stepKey="seeRowMarginStyle"/>
        <seeElement selector="{{RowsOnFrontend.rowPadding}}" stepKey="seeRowPaddingStyle"/>
        <seeElement selector="{{RowsOnFrontend.rowClass}}" stepKey="seeRowClass"/>
    </test>
    <test name="CanAddUnlimitedRows">
        <annotations>
            <title value="Can add unlimited rows"/>
            <description value="The user should be able to unlimited rows. For testing we use 20 rows"/>
            <severity value="CRITICAL"/>
            <testCaseId value="MAGETWO-85692"/>
            <group value="pagebuilder"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="EnabledWYSIWYG" stepKey="enableWYSIWYG"/>
            <actionGroup ref="enablePageBuilderSetting" stepKey="enablePageBuilderSetting"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="DisabledWYSIWYG" stepKey="disableWYSIWYG"/>
            <amOnPage url="admin/admin/auth/logout" stepKey="amOnLogoutPage"/>
            <waitForPageLoad stepKey="waitForAdminLoginPageLoad"/>
        </after>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragRowIntoStage1">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragRowIntoStage2">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragRowIntoStage3">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragRowIntoStage4">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragRowIntoStage5">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragRowIntoStage6">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragRowIntoStage7">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragRowIntoStage8">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragRowIntoStage9">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragRowIntoStage10">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragRowIntoStage11">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragRowIntoStage12">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragRowIntoStage13">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragRowIntoStage14">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragRowIntoStage15">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragRowIntoStage16">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragRowIntoStage17">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragRowIntoStage18">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragRowIntoStage19">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragRowIntoStage20">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <seeNumberOfElements selector="{{PageBuilderRowSection.allRows}}" userInput="21" stepKey="seeElementRow"/>
    </test>

    <test name="CanAddImageToRow">
        <annotations>
            <title value="Add an image content block into stage"/>
            <description value="A user should be able to add an image into a row."/>
            <severity value="CRITICAL"/>
            <testCaseId value="MAGETWO-84259"/>
            <group value="kieu"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="enablePageBuilder1" stepKey="enablePageBuilder"/>
            <createData entity="_defaultBlock" stepKey="createPreReqBlock" />
        </before>
        <after>
            <deleteData createDataKey="createPreReqBlock" stepKey="deletePreReqBlock" />
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <actionGroup ref="navigateToCreatedCMSBlockPage" stepKey="navigateToCreatedCMSBlockPage1">
            <argument name="CMSBlockPage" value="$$createPreReqBlock$$"/>
        </actionGroup>
        <!--<actionGroup ref="dragContentBlockToStage" stepKey="dragRowIntoStage1">-->
            <!--<argument name="contentBlockType" value="PageBuilderRowContentBlock"/>-->
        <!--</actionGroup>-->
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>

        <waitForElementVisible selector="{{PageBuilderActionsSection.mediaGroup}}" stepKey="waitForPageBuilder" />
        <click selector="{{PageBuilderActionsSection.mediaGroup}}" stepKey="clickMediaGroup"/>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragImageIntoStage">
            <argument name="contentBlockType" value="PageBuilderImageContentBlock"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage">
            <argument name="contentBlockType" value="PageBuilderImageContentBlock"/>
        </actionGroup>

        <seeElement selector="{{UploadImageSection.SelectFromGalleryBtn('Image')}}" stepKey="seeSelectFromGalleryBtnOnImage"/>
        <seeElement selector="{{UploadImageSection.PlaceholderContent('Image')}}" stepKey="seeImagePlaceHolderOnImage1"/>

        <!--Upload image from local machine using image placeholder button-->
        <actionGroup ref="attachFileSlideOutPropertyGeneral" stepKey="attachImageFile">
            <argument name="property" value="PageBuilderImagePropertyJpg"/>
        </actionGroup>

        <waitForLoadingMaskToDisappear stepKey="waitForLoading1" />
        <waitForElementVisible  selector="{{ImageOnPreview.imageName(PageBuilderImagePropertyJpg.value)}}" stepKey="waitForUploadImage1" />
        <seeElement selector="{{ImageOnPreview.imageName(PageBuilderImagePropertyJpg.value)}}" stepKey="seeImgeNameOnPreview1"/>
        <seeElement selector="{{ImageOnPreview.imagePreview}}" stepKey="seeImageDisplayed1"/>

        <!--Remove uploaded image-->
        <click selector="{{ImageOnPreview.trashBinIcon}}" stepKey="removeUploadedImage"/>
        <seeElement selector="{{UploadImageSection.PlaceholderContent('Image')}}" stepKey="seeImagePlaceHolderOnImage2"/>

        <!--Upload another image from local machine using image placeholder button-->
        <attachFile selector="{{CategoryContentSection.Upload}}" userInput="{{ImageUpload.file}}" stepKey="uploadImage2"/>
        <waitForLoadingMaskToDisappear stepKey="waitForLoading2" />
        <waitForElementVisible  selector="{{ImageOnPreview.imageName(ImageUpload.name)}}" stepKey="waitForUploadImage2" />
        <seeElement selector="{{ImageOnPreview.imageName(ImageUpload.name)}}" stepKey="seeImgeNameOnPreview12"/>
        <seeElement selector="{{ImageOnPreview.imagePreview}}" stepKey="seeImageDisplayed2"/>

        <!--Overwrite uploaded image by selecting image from Media Gallery Storage-->
        <click selector="{{CategoryContentSection.SelectFromGalleryBtn}}" stepKey="clickSelectFromGalleryBtn"/>
        <waitForPageLoad stepKey="waitForPageLoad1" />

        <!--See Uploaded Image On Storage-->
        <!--<see userInput="{{ImageUpload.file}}" stepKey="seeUploadedImageOnStorage"/>-->

        <actionGroup ref="CreateImageFolder" stepKey="createImageFolder">
            <argument name="ImageFolder" value="ImageFolder"/>
        </actionGroup>
        <actionGroup ref="attachImage" stepKey="SelectImageFromMediaStorare">
            <argument name="Image" value="ImageUpload1"/>
        </actionGroup>
        <actionGroup ref="saveImage" stepKey="saveImage"/>
        <seeElement selector="{{ImageOnPreview.imageName(ImageUpload1.file)}}" stepKey="seeImgeNameOnPreview3"/>
        <seeElement selector="{{ImageOnPreview.imageSource(ImageFolder.name,ImageUpload1.file)}}" stepKey="seeMainImageSource3"/>
        <seeElement selector="{{ImageOnPreview.trashBinIcon}}" stepKey="seeTrashBinBtn"/>

        <seeElement selector="{{UploadImageSection.SelectFromGalleryBtn('Mobile Image')}}" stepKey="seeSelectFromGalleryBtnOnMobileImage"/>
        <seeElement selector="{{UploadImageSection.PlaceholderContent('Mobile Image')}}" stepKey="seeImagePlaceHolderOnMobileImage1"/>

        <actionGroup ref="attachFileSlideOutPropertyGeneral" stepKey="attachMobileImageFile">
            <argument name="property" value="PageBuilderMobileImagePropertyGif"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterAltTextProperty">
            <argument name="property" value="PageBuilderImageAltTextProperty"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterTitleTagProperty">
            <argument name="property" value="PageBuilderImageTitleTagProperty"/>
        </actionGroup>
        <actionGroup ref="selectSlideOutPanelFieldGeneral" stepKey="enterHasLightbox">
            <argument name="property" value="PageBuilderImageLightboxProperty"/>
        </actionGroup>
        <actionGroup ref="selectSlideOutPanelFieldGeneral" stepKey="enterShowCaption">
            <argument name="property" value="PageBuilderImageShowCaptionProperty"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings"/>

        <actionGroup ref="saveAndContinueEditCmsPage" stepKey="saveAndContinueEditCmsPage"/>
        <see userInput="{{PageBuilderPageTitle.pageName}}" selector="{{CmsPageSection.cmsPageTitle}}" stepKey="assertTitleSavedCmsPage"/>
        <amOnPage url="image{{PageBuilderPageTitle.pageName}}" stepKey="amOnPageBuilderPage"/>
        <seeElement selector="{{ImageOnFrontend.imageDisplay}}" stepKey="seeMainImageDisplayed"/>
        <seeElement selector="{{ImageOnFrontend.imageSource(PageBuilderImagePropertyJpg.path,PageBuilderImagePropertyJpg.fileType)}}" stepKey="seeMainImageSource"/>
        <seeElementInDOM selector="{{ImageOnFrontend.imageHasLightbox}}" stepKey="seeImageLightboxLink"/>
        <seeElementInDOM selector="{{ImageOnFrontend.imageHasAltText(PageBuilderImageAltTextProperty.value)}}" stepKey="seeImageAltText"/>
        <seeElementInDOM selector="{{ImageOnFrontend.imageHasTitleTag(PageBuilderImageTitleTagProperty.value)}}" stepKey="seeImageAltText"/>
        <seeElementInDOM selector="{{ImageOnFrontend.mobileImageSource(PageBuilderMobileImagePropertyGif.path,PageBuilderMobileImagePropertyGif.fileType)}}" stepKey="seeMobileImageInDom"/>
        <see userInput="{{PageBuilderImageTitleTagProperty.value}}" selector="{{ImageOnFrontend.imageHasCaption}}" stepKey="seeTitleTagDisplayedAsCaption"/>
        <click selector="{{ImageOnFrontend.imageHasLightbox}}" stepKey="clickMainImage"/>
        <waitForElementVisible time="1" selector="{{ImageOnFrontend.fancyboxOpen}}" stepKey="waitForLightbox" />
        <seeElement selector="{{ImageOnFrontend.lightboxPopupDisplay(PageBuilderImagePropertyJpg.path,PageBuilderImagePropertyJpg.fileType)}}" stepKey="seeLightBoxDisplayed"/>
    </test>
</tests>
