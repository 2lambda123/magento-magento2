<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<actionGroups xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:noNamespaceSchemaLocation="../../../../../../vendor/magento/magento2-functional-testing-framework/src/Magento/FunctionalTestingFramework/Test/etc/actionGroupSchema.xsd">
    <actionGroup name="validateGroupsAndContentTypes">
        <see userInput="General" selector="{{PageBuilderActionsSection.generalGroup}}" stepKey="seeGeneralGroup"/>
        <see userInput="Row" selector="{{PageBuilderActionsSection.generalGroupBlock}}" stepKey="seeGeneralGroupRow"/>
        <see userInput="Column" selector="{{PageBuilderActionsSection.generalGroupBlock}}" stepKey="seeGeneralGroupColumn"/>
        <see userInput="Text" selector="{{PageBuilderActionsSection.generalGroupBlock}}" stepKey="seeGeneralGroupText"/>
        <see userInput="Heading" selector="{{PageBuilderActionsSection.generalGroupBlock}}" stepKey="seeGeneralGroupHeading"/>
        <see userInput="Buttons" selector="{{PageBuilderActionsSection.generalGroupBlock}}" stepKey="seeGeneralGroupButtons"/>
        <see userInput="Divider" selector="{{PageBuilderActionsSection.generalGroupBlock}}" stepKey="seeGeneralGroupDivider"/>
        <click selector="{{PageBuilderActionsSection.mediaGroup}}" stepKey="clickMediaGroup"/>
        <see userInput="Media" selector="{{PageBuilderActionsSection.mediaGroup}}" stepKey="seeMediaGroup"/>
        <see userInput="Image" selector="{{PageBuilderActionsSection.mediaGroupBlock}}" stepKey="seeMediaGroupImage"/>
        <see userInput="Banner" selector="{{PageBuilderActionsSection.mediaGroupBlock}}" stepKey="seeMediaGroupBanner"/>
        <see userInput="Video" selector="{{PageBuilderActionsSection.mediaGroupBlock}}" stepKey="seeMediaGroupVideo"/>
        <see userInput="Slider" selector="{{PageBuilderActionsSection.mediaGroupBlock}}" stepKey="seeMediaGroupSlider"/>
        <click selector="{{PageBuilderActionsSection.interactiveGroup}}" stepKey="clickInteractiveGroup"/>
        <see userInput="Interactive" selector="{{PageBuilderActionsSection.interactiveGroup}}" stepKey="seeInteractiveGroup"/>
        <see userInput="Tabs" selector="{{PageBuilderActionsSection.interactiveGroupBlock}}" stepKey="seeInteractiveGroupTabs"/>
        <see userInput="Accordion" selector="{{PageBuilderActionsSection.interactiveGroupBlock}}" stepKey="seeInteractiveGroupAccordion"/>
        <see userInput="Map" selector="{{PageBuilderActionsSection.interactiveGroupBlock}}" stepKey="seeInteractiveGroupMap"/>
        <see userInput="Newsletter" selector="{{PageBuilderActionsSection.interactiveGroupBlock}}" stepKey="seeInteractiveGroupNewsletter"/>
        <click selector="{{PageBuilderActionsSection.magentoGroup}}" stepKey="clickMagentoGroup"/>
        <see userInput="Magento" selector="{{PageBuilderActionsSection.magentoGroup}}" stepKey="seeMagentoGroup"/>
        <see userInput="Block" selector="{{PageBuilderActionsSection.magentoGroupBlock}}" stepKey="seeMagentoGroupBlock"/>
        <see userInput="Product" selector="{{PageBuilderActionsSection.magentoGroupBlock}}" stepKey="seeMagentoGroupProduct"/>
        <click selector="{{PageBuilderActionsSection.otherGroup}}" stepKey="clickOtherGroup"/>
        <see userInput="Anchor" selector="{{PageBuilderActionsSection.otherGroupBlock}}" stepKey="seeOtherGroupAnchor"/>
        <dontSee userInput="Code" selector="{{PageBuilderActionsSection.otherGroupBlock}}" stepKey="dontSeeOtherGroupCode"/>
        <see userInput="Html" selector="{{PageBuilderActionsSection.otherGroupBlock}}" stepKey="seeOtherGroupHtml"/>
        <dontSee userInput="Search" selector="{{PageBuilderActionsSection.otherGroupBlock}}" stepKey="dontSeeOtherGroupSearch"/>
    </actionGroup>
    <actionGroup name="enablePageBuilder">
        <amOnPage url="{{CmsPagesPage.url}}" stepKey="amOnPagePagesGrid"/>
        <waitForPageLoad stepKey="waitForPageLoad1"/>
        <click selector="{{CmsPagesPageActionsSection.addNewPageButton}}" stepKey="clickAddNewPage"/>
        <click selector="{{CmsNewPagePageContentSection.header}}" stepKey="clickExpandContent"/>
        <click selector="{{PageBuilderActionsSection.openPageBuilder}}" stepKey="clickEnableAdvancedCMS"/>
        <wait time="1" stepKey="wait1"/>
    </actionGroup>
    <actionGroup name="navigateToAPageWithPageBuilder">
        <waitForPageLoad stepKey="waitForDashboardPageLoad"/>
        <amOnPage url="{{PageBuilderCmsPage.url}}" stepKey="amOnPageBuilderPage"/>
        <waitForPageLoad stepKey="waitForPageLoad"/>
    </actionGroup>
    <actionGroup name="switchToPageBuilderStage">
        <waitForElement time="5" selector="{{CmsNewPagePageContentSection.header}}" stepKey="waitForElement" />
        <waitForElementVisible time="5" selector="{{CmsNewPagePageContentSection.header}}" stepKey="waitForElementVisible" />
        <click selector="{{CmsNewPagePageContentSection.header}}" stepKey="clickExpandContent"/>
        <!-- Wait for the first row to be added into the stage for it to be "ready" -->
        <waitForElementVisible time="5" selector="{{PageBuilderRowSection.row}}" stepKey="waitForPageBuilderRow" />
    </actionGroup>
    <actionGroup name="dragPageBuilderColumnIntoStage">
        <dragAndDrop selector1="{{PageBuilderColumnSection.draggableColumnInPanel}}" selector2="{{PageBuilderColumnSection.dropAreaInDefaultStage}}" stepKey="dropColumnIntoStage"/>
        <waitForElementVisible time="1" selector="{{PageBuilderColumnSection.column}}" stepKey="waitForColumn" />
        <seeElement selector="{{PageBuilderColumnSection.column}}" stepKey="seeElementColumn"/>
    </actionGroup>
    <actionGroup name="expandConfigurationSection">
        <arguments>
            <argument name="section" defaultValue="AdvancedForm"/>
        </arguments>
        <waitForElementVisible time="3" selector="{{section.sectionName}}" stepKey="waitForSectionVisible"/>
        <click selector="{{section.sectionName}}" stepKey="clickSection"/>
        <waitForElementVisible time="3" selector="{{section.sectionExpanded}}" stepKey="waitForSectionExpanded"/>
    </actionGroup>
    <actionGroup name="addPageBuilderPageTitle">
        <arguments>
            <argument name="contentBlockType" defaultValue=""/>
        </arguments>
        <fillField selector="{{CmsNewPagePageActionsSection.pageTitle}}" userInput="{{contentBlockType.name}}{{PageBuilderPageTitle.pageName}}" stepKey="enterPageTitle"/>
    </actionGroup>
    <actionGroup name="dragContentBlockToStage">
        <arguments>
            <argument name="contentBlockType" defaultValue=""/>
        </arguments>
        <dragAndDrop selector1="{{PageBuilderActionsSection.draggableContentBlockInPanel(contentBlockType.name)}}" selector2="{{PageBuilderActionsSection.dropAreaInStage}}" stepKey="dropContentBlockIntoStage"/>
        <waitForElementVisible time="10" selector="{{PageBuilderActionsSection.contentBlockInStage(contentBlockType.role)}}" stepKey="waitForContentBlockInStage" />
        <seeElement selector="{{PageBuilderActionsSection.contentBlockInStage(contentBlockType.role)}}" stepKey="seeContentBlockInStage"/>
    </actionGroup>
    <actionGroup name="dragContentBlockToStageAndExpectEditPanel">
        <arguments>
            <argument name="contentBlockType" defaultValue=""/>
        </arguments>
        <dragAndDrop selector1="{{PageBuilderActionsSection.draggableContentBlockInPanel(contentBlockType.name)}}" selector2="{{PageBuilderActionsSection.dropAreaInStage}}" stepKey="dropContentBlockIntoStage"/>
        <waitForElementVisible time="10" selector="{{PageBuilderActionsSection.contentBlockInStage(contentBlockType.role)}}" stepKey="waitForContentBlockInStage" />
        <seeElement selector="{{PageBuilderActionsSection.contentBlockInStage(contentBlockType.role)}}" stepKey="seeContentBlockInStage"/>
        <waitForLoadingMaskToDisappear stepKey="waitForAnimation" />
        <see userInput="Edit {{contentBlockType.name}}" selector="{{PageBuilderActionsSection.editFormTitle}}" stepKey="seeContentBlockNameInEditFormTitle"/>
    </actionGroup>
    <actionGroup name="dragContentBlockToContainer">
        <arguments>
            <argument name="contentBlockType" defaultValue=""/>
            <argument name="containerBlockType" defaultValue=""/>
            <argument name="containerTarget" defaultValue="1" />
        </arguments>
        <dragAndDrop selector1="{{PageBuilderActionsSection.draggableContentBlockInPanel(contentBlockType.name)}}" selector2="{{PageBuilderActionsSection.contentBlockContainer(containerBlockType.role, containerTarget.index)}}" stepKey="dropContentBlockIntoStage"/>
        <waitForElementVisible time="1" selector="{{PageBuilderActionsSection.contentBlockInStage(contentBlockType.role)}}" stepKey="waitForContentBlockInStage" />
        <seeElement selector="{{PageBuilderActionsSection.contentBlockInStage(contentBlockType.role)}}" stepKey="seeContentBlockInStage"/>
    </actionGroup>
    <actionGroup name="openPageBuilderEditPanel">
        <arguments>
            <argument name="contentBlockType" defaultValue=""/>
        </arguments>
        <waitForElementVisible time="10" selector="{{PageBuilderActionsSection.contentBlockInStage(contentBlockType.role)}}" stepKey="waitForContentBlockInStageVisible" />
        <moveMouseOver selector="{{PageBuilderActionsSection.contentBlockInStage(contentBlockType.role)}}" x="10" y="0" stepKey="onMouseOverContentBlockStage"/>
        <waitForElementVisible time="10" selector="{{PageBuilderActionsSection.contentBlockOptionsMenu(contentBlockType.role)}}" stepKey="waitForOptions" />
        <seeElement selector="{{PageBuilderActionsSection.contentBlockOptionsMenu(contentBlockType.role)}}" stepKey="seeContentBlockOptionsMenu"/>
        <click selector="{{PageBuilderActionsSection.contentBlockEdit(contentBlockType.role)}}" stepKey="clickEditContentBlock"/>
        <waitForElementVisible time="5" selector="{{PageBuilderActionsSection.editForm}}" stepKey="waitForEditForm" />
        <!-- Required time wait due to animation -->
        <wait time="0.5" stepKey="waitForAnimation" />
        <see userInput="Edit {{contentBlockType.name}}" selector="{{PageBuilderActionsSection.editFormTitle}}" stepKey="seeContentBlockNameInEditFormTitle"/>
    </actionGroup>
    <actionGroup name="openPageBuilderEditPanelSmall">
        <arguments>
            <argument name="contentBlockType" defaultValue=""/>
        </arguments>
        <waitForElementVisible time="10" selector="{{PageBuilderActionsSection.contentBlockInStage(contentBlockType.role)}}" stepKey="waitForContentBlockInStageVisible" />
        <moveMouseOver selector="{{PageBuilderActionsSection.contentBlockInStage(contentBlockType.role)}}" x="10" y="10" stepKey="onMouseOverContentBlockStage"/>
        <waitForElementVisible time="10" selector="{{PageBuilderActionsSection.contentBlockOptionsMenu(contentBlockType.role)}}" stepKey="waitForOptions" />
        <seeElement selector="{{PageBuilderActionsSection.contentBlockOptionsMenu(contentBlockType.role)}}" stepKey="seeContentBlockOptionsMenu"/>
        <click selector="{{PageBuilderActionsSection.contentBlockEdit(contentBlockType.role)}}" stepKey="clickEditContentBlock"/>
        <waitForElementVisible time="5" selector="{{PageBuilderActionsSection.editForm}}" stepKey="waitForEditForm" />
        <!-- Required time wait due to animation -->
        <wait time="0.5" stepKey="waitForAnimation" />
        <see userInput="Edit {{contentBlockType.name}}" selector="{{PageBuilderActionsSection.editFormTitle}}" stepKey="seeContentBlockNameInEditFormTitle"/>
    </actionGroup>
    <actionGroup name="openPageBuilderEditPanelByIndex">
        <arguments>
            <argument name="contentBlockType" defaultValue=""/>
            <argument name="contentBlockIndex" defaultValue="1"/>
            <argument name="contentBlockXCoordinate" defaultValue="10"/>
            <argument name="contentBlockYCoordinate" defaultValue="0"/>
        </arguments>
        <waitForElementVisible time="20" selector="{{PageBuilderActionsSection.contentBlockInStageByIndex(contentBlockType.role, contentBlockIndex.index)}}" stepKey="waitForContentBlockInStageVisible" />
        <moveMouseOver selector="{{PageBuilderActionsSection.contentBlockInStageByIndex(contentBlockType.role, contentBlockIndex.index)}}" x="10" y="0" stepKey="onMouseOverContentBlockStage"/>
        <waitForElementVisible time="10" selector="{{PageBuilderActionsSection.contentBlockOptionsMenuByIndex(contentBlockType.role, contentBlockIndex.index)}}" stepKey="waitForOptions" />
        <waitForElementVisible selector="{{PageBuilderActionsSection.contentBlockEditByIndex(contentBlockType.role, contentBlockIndex.index)}}" stepKey="waitForEditButton"/>
        <click selector="{{PageBuilderActionsSection.contentBlockEditByIndex(contentBlockType.role, contentBlockIndex.index)}}" stepKey="clickEditContentBlock"/>
        <waitForElementVisible time="5" selector="{{PageBuilderActionsSection.editForm}}" stepKey="waitForEditForm" />
        <waitForLoadingMaskToDisappear stepKey="waitForAnimation" />
        <see userInput="Edit {{contentBlockType.name}}" selector="{{PageBuilderActionsSection.editFormTitle}}" stepKey="seeContentBlockNameInEditFormTitle"/>
    </actionGroup>
    <actionGroup name="duplicateContentBlock">
        <arguments>
            <argument name="contentBlockType" defaultValue=""/>
            <argument name="contentBlockNumber" defaultValue="1"/>
        </arguments>
        <waitForElementVisible time="10" selector="{{PageBuilderActionsSection.contentBlockInStageByIndex(contentBlockType.role, '1')}}" stepKey="waitForContentBlockInStageVisible"/>
        <moveMouseOver selector="{{PageBuilderActionsSection.contentBlockInStageByIndex(contentBlockType.role, '1')}}" stepKey="onMouseOverContentBlockStage"/>
        <waitForElementVisible time="10" selector="{{PageBuilderActionsSection.contentBlockOptionsMenuByIndex(contentBlockType.role, '1')}}" stepKey="waitForOptionsMenu"/>
        <click selector="{{PageBuilderActionsSection.contentBlockDuplicate(contentBlockType.role, '1')}}" stepKey="clickDuplicateContentBlock"/>
        <waitForElementVisible selector="{{PageBuilderActionsSection.contentBlockInStageByIndex(contentBlockType.role, '2')}}" stepKey="waitForDuplicateContentBlock"/>
    </actionGroup>
    <actionGroup name="removeContentBlockFromStage">
        <arguments>
            <argument name="contentBlockType" defaultValue=""/>
        </arguments>
        <waitForElementVisible time="10" selector="{{PageBuilderActionsSection.contentBlockInStage(contentBlockType.role)}}" stepKey="waitForContentBlockInStageVisible" />
        <moveMouseOver selector="{{PageBuilderActionsSection.contentBlockInStage(contentBlockType.role)}}" x="10" y="0" stepKey="onMouseOverContentBlockStage"/>
        <waitForElementVisible time="10" selector="{{PageBuilderActionsSection.contentBlockOptionsMenu(contentBlockType.role)}}" stepKey="waitForOptions" />
        <click selector="{{PageBuilderActionsSection.contentBlockRemove(contentBlockType.role)}}" stepKey="clickRemoveContentBlock"/>
        <waitForElementVisible time="1" selector="{{PageBuilderActionsSection.modal}}" stepKey="waitForModal" />
        <waitForElementVisible time="1" selector="{{PageBuilderActionsSection.modalOk}}" stepKey="waitForModalOk" />
        <click selector="{{PageBuilderActionsSection.modalOk}}" stepKey="confirmRemoveModal"/>
        <waitForElementNotVisible time="1" selector="{{PageBuilderActionsSection.modalOk}}" stepKey="waitForModalHide" />
        <waitForElementVisible time="5" selector="{{PageBuilderRowSection.row}}" stepKey="waitForPageBuilderRow" />
    </actionGroup>
    <actionGroup name="removePageBuilderRow">
        <moveMouseOver selector="{{PageBuilderRowSection.row}}" stepKey="onMouseOverRow"/>
        <seeElement selector="{{PageBuilderRowSection.rowOptionsMenu}}" stepKey="seeRowOptionsMenu"/>
        <click selector="{{PageBuilderRowSection.removeRow}}" stepKey="clickRemoveRow"/>
        <wait time="1" stepKey="wait1"/>
        <seeElement selector="{{PageBuilderActionsSection.modal}}" stepKey="seeRemovalModal"/>
        <wait time="1" stepKey="waitForModalEventBinding" />
        <click selector="{{PageBuilderActionsSection.modalOk}}" stepKey="confirmRemoveModal"/>
        <wait time="1" stepKey="wait2"/>
    </actionGroup>
    <actionGroup name="removePageBuilderColumn">
        <moveMouseOver selector="{{PageBuilderColumnSection.column}}" stepKey="onMouseOverRow"/>
        <seeElement selector="{{PageBuilderColumnSection.columnOptionsMenu}}" stepKey="seeColumnOptionsMenu"/>
        <click selector="{{PageBuilderColumnSection.removeColumn}}" stepKey="clickRemoveColumn"/>
        <waitForElementVisible time="1" selector="{{PageBuilderActionsSection.modal}}" stepKey="waitForModal" />
        <seeElement selector="{{PageBuilderActionsSection.modal}}" stepKey="seeRemovalModal"/>
        <waitForElementVisible time="1" selector="{{PageBuilderActionsSection.modalOk}}" stepKey="waitForModalOk" />
        <wait time="1" stepKey="waitForModalEventBinding" />
        <click selector="{{PageBuilderActionsSection.modalOk}}" stepKey="confirmRemoveModal"/>
        <waitForElementNotVisible time="1" selector="{{PageBuilderActionsSection.modalOk}}" stepKey="waitForModalHide" />
    </actionGroup>
    <actionGroup name="validateSlideOutPanelField">
        <arguments>
            <argument name="property" defaultValue=""/>
        </arguments>
        <waitForElement time="2" selector="{{PageBuilderColumnSection.panelFieldControl(property.section, property.fieldName)}}" stepKey="waitForElementVisible" />
        <see userInput="{{property.name}}" selector="{{PageBuilderColumnSection.panelFieldLabel(property.section, property.fieldName, property.section, property.name)}}" stepKey="seePropertyLabel"/>
        <seeElementInDOM selector="{{PageBuilderColumnSection.panelFieldControl(property.section, property.fieldName)}}" stepKey="seePropertyControl"/>
    </actionGroup>
    <actionGroup name="validateSlideOutPanelFieldIsDisabled">
        <arguments>
            <argument name="property" defaultValue=""/>
        </arguments>
        <waitForElement time="2" selector="{{PageBuilderColumnSection.panelFieldControl(property.section, property.fieldName)}}" stepKey="waitForElementVisible" />
        <seeElement selector="{{PageBuilderColumnSection.panelFieldDisabled(property.section, property.fieldName)}}" stepKey="seePropertyControl"/>
    </actionGroup>
    <actionGroup name="validateSlideOutPanelFieldIsNotDisabled">
        <arguments>
            <argument name="property" defaultValue=""/>
        </arguments>
        <waitForElement time="2" selector="{{PageBuilderColumnSection.panelFieldControl(property.section, property.fieldName)}}" stepKey="waitForElementVisible" />
        <seeElement selector="{{PageBuilderColumnSection.panelFieldNotDisabled(property.section, property.fieldName)}}" stepKey="seePropertyControl"/>
    </actionGroup>
    <actionGroup name="validateSlideOutPanelFieldIsRequired">
        <arguments>
            <argument name="property" defaultValue=""/>
        </arguments>
        <waitForElement time="2" selector="{{PageBuilderColumnSection.panelFieldControl(property.section, property.fieldName)}}" stepKey="waitForElementVisible" />
        <seeElement selector='{{PageBuilderColumnSection.panelFieldRequired(property.section, property.fieldName)}}' stepKey="seePropertyIsRequired"/>
    </actionGroup>
    <actionGroup name="validateSlideOutPanelFieldIsNotRequired">
        <arguments>
            <argument name="property" defaultValue=""/>
        </arguments>
        <waitForElement time="2" selector="{{PageBuilderColumnSection.panelFieldControl(property.section, property.fieldName)}}" stepKey="waitForElementVisible" />
        <dontSeeElement selector='{{PageBuilderColumnSection.panelFieldRequired(property.section, property.fieldName)}}' stepKey="seePropertyIsNotRequired"/>
    </actionGroup>
    <actionGroup name="validateSlideOutPanelFieldPlaceholderText">
        <arguments>
            <argument name="property" defaultValue=""/>
        </arguments>
        <waitForElement time="2" selector="{{PageBuilderColumnSection.panelFieldPlaceholderText(property.section, property.fieldName, property.placeholderText)}}" stepKey="waitForElementVisible" />
    </actionGroup>
    <actionGroup name="fillSlideOutPanelField">
        <arguments>
            <argument name="property" defaultValue=""/>
        </arguments>
        <waitForLoadingMaskToDisappear stepKey="waitForSpinner"/>
        <waitForElement time="2" selector="{{PageBuilderColumnSection.panelFieldControl(property.section, property.fieldName)}}" stepKey="waitForElementVisible" />
        <see userInput="{{property.name}}" selector="{{PageBuilderColumnSection.panelFieldLabel(property.section, property.fieldName, property.section, property.name)}}" stepKey="seePropertyLabel"/>
        <fillField selector="{{PageBuilderColumnSection.panelFieldControl(property.section, property.fieldName)}}" userInput="{{property.value}}" stepKey="fillPropertyField"/>
        <click selector="{{PageBuilderColumnSection.panelFieldLabel(property.section, property.fieldName, property.section, property.name)}}" stepKey="clickOnFieldLabel"/>
        <waitForElementVisible time="2" selector="{{PageBuilderColumnSection.panelSectionChangedIcon(property.section)}}" stepKey="waitForSectionChangedIcon" />
    </actionGroup>
    <actionGroup name="fillSlideOutPanelFieldGeneral">
        <arguments>
            <argument name="property" defaultValue=""/>
        </arguments>
        <waitForLoadingMaskToDisappear stepKey="waitForSpinner"/>
        <waitForElement time="2" selector="{{PageBuilderActionsSection.panelFieldControl(property.section, property.fieldName)}}" stepKey="waitForElementVisible" />
        <see userInput="{{property.name}}" selector="{{PageBuilderActionsSection.panelFieldLabel(property.section, property.fieldName)}}" stepKey="seePropertyLabel"/>
        <fillField selector="{{PageBuilderActionsSection.panelFieldControl(property.section, property.fieldName)}}" userInput="{{property.value}}" stepKey="fillPropertyField"/>
        <click selector="{{PageBuilderActionsSection.panelFieldLabel(property.section, property.fieldName)}}" stepKey="clickOnFieldLabel"/>
    </actionGroup>
    <actionGroup name="clearSlideOutPanelFieldGeneral">
        <arguments>
            <argument name="property" defaultValue=""/>
        </arguments>
        <waitForLoadingMaskToDisappear stepKey="waitForSpinner"/>
        <waitForElement time="2" selector="{{PageBuilderActionsSection.panelFieldControl(property.section, property.fieldName)}}" stepKey="waitForElementVisible" />
        <see userInput="{{property.name}}" selector="{{PageBuilderActionsSection.panelFieldLabel(property.section, property.fieldName)}}" stepKey="seePropertyLabel"/>
        <clearField selector="{{PageBuilderActionsSection.panelFieldControl(property.section, property.fieldName)}}" stepKey="clearPropertyField"/>
        <click selector="{{PageBuilderActionsSection.panelFieldLabel(property.section, property.fieldName)}}" stepKey="clickOnFieldLabel"/>
    </actionGroup>
    <actionGroup name="fillSlideOutPanelFieldMarginsAndPadding">
        <arguments>
            <argument name="property" defaultValue=""/>
        </arguments>
        <waitForLoadingMaskToDisappear stepKey="waitForSpinner"/>
        <waitForElement time="2" selector="{{PageBuilderActionsSection.panelFieldControl(property.section, property.fieldName)}}" stepKey="waitForElementVisible" />
        <see userInput="{{property.name}}" selector="{{PageBuilderActionsSection.panelFieldLabel(property.section, property.fieldName)}}" stepKey="seePropertyLabel"/>
        <fillField selector="{{AdvancedForm.advancedMarginTop}}" userInput="{{property.marginTop}}" stepKey="fillMarginTopField"/>
        <fillField selector="{{AdvancedForm.advancedMarginRight}}" userInput="{{property.marginRight}}" stepKey="fillMarginRightField"/>
        <fillField selector="{{AdvancedForm.advancedMarginLeft}}" userInput="{{property.marginLeft}}" stepKey="fillMarginLeftField"/>
        <fillField selector="{{AdvancedForm.advancedMarginBottom}}" userInput="{{property.marginBottom}}" stepKey="fillMarginBottomField"/>
        <fillField selector="{{AdvancedForm.advancedPaddingTop}}" userInput="{{property.paddingTop}}" stepKey="fillPaddingTopField"/>
        <fillField selector="{{AdvancedForm.advancedPaddingRight}}" userInput="{{property.paddingRight}}" stepKey="fillPaddingRightField"/>
        <fillField selector="{{AdvancedForm.advancedPaddingLeft}}" userInput="{{property.paddingLeft}}" stepKey="fillPaddingLeftField"/>
        <fillField selector="{{AdvancedForm.advancedPaddingBottom}}" userInput="{{property.paddingBottom}}" stepKey="fillPaddingBottomField"/>
        <click selector="{{PageBuilderActionsSection.panelFieldLabel(property.section, property.fieldName)}}" stepKey="clickOnFieldLabel"/>
    </actionGroup>
    <actionGroup name="clearSlideOutPanelFieldMarginsAndPadding">
        <arguments>
            <argument name="property" defaultValue=""/>
        </arguments>
        <waitForLoadingMaskToDisappear stepKey="waitForSpinner"/>
        <waitForElement time="2" selector="{{PageBuilderActionsSection.panelFieldControl(property.section, property.fieldName)}}" stepKey="waitForElementVisible" />
        <see userInput="{{property.name}}" selector="{{PageBuilderActionsSection.panelFieldLabel(property.section, property.fieldName)}}" stepKey="seePropertyLabel"/>
        <clearField selector="{{AdvancedForm.advancedMarginTop}}" stepKey="clearMarginTopField"/>
        <clearField selector="{{AdvancedForm.advancedMarginRight}}" stepKey="clearMarginRightField"/>
        <clearField selector="{{AdvancedForm.advancedMarginLeft}}" stepKey="clearMarginLeftField"/>
        <clearField selector="{{AdvancedForm.advancedMarginBottom}}" stepKey="clearMarginBottomField"/>
        <clearField selector="{{AdvancedForm.advancedPaddingTop}}" stepKey="clearPaddingTopField"/>
        <clearField selector="{{AdvancedForm.advancedPaddingRight}}" stepKey="clearPaddingRightField"/>
        <clearField selector="{{AdvancedForm.advancedPaddingLeft}}" stepKey="clearPaddingLeftField"/>
        <clearField selector="{{AdvancedForm.advancedPaddingBottom}}" stepKey="clearPaddingBottomField"/>
        <click selector="{{PageBuilderActionsSection.panelFieldLabel(property.section, property.fieldName)}}" stepKey="clickOnFieldLabel"/>
    </actionGroup>
    <actionGroup name="fillSlideOutPanelFieldGeneralWysiwyg">
        <arguments>
            <argument name="property" defaultValue=""/>
        </arguments>
        <waitForLoadingMaskToDisappear stepKey="waitForSpinner"/>
        <waitForElement time="2" selector="{{PageBuilderActionsSection.panelFieldControlWysiwyg(property.section, property.fieldName)}}" stepKey="waitForElementVisibleWysiwyg" />
        <fillField selector="{{PageBuilderActionsSection.panelFieldControlWysiwyg(property.section, property.fieldName)}}" userInput="{{property.value}}" stepKey="fillPropertyFieldWysiwyg"/>
    </actionGroup>
    <actionGroup name="selectSlideOutPanelFieldGeneral">
        <arguments>
            <argument name="property" defaultValue=""/>
        </arguments>
        <waitForElement time="2" selector="{{PageBuilderActionsSection.panelFieldControl(property.section, property.fieldName)}}" stepKey="waitForElementVisible" />
        <see userInput="{{property.name}}" selector="{{PageBuilderActionsSection.panelFieldLabel(property.section, property.fieldName)}}" stepKey="seePropertyLabel"/>
        <selectOption selector="{{PageBuilderActionsSection.panelFieldControl(property.section, property.fieldName)}}" userInput="{{property.value}}" stepKey="selectPropertyField"/>
        <click selector="{{PageBuilderActionsSection.panelFieldLabel(property.section, property.fieldName)}}" stepKey="clickOnFieldLabel"/>
    </actionGroup>
    <actionGroup name="attachFileSlideOutPropertyGeneral">
        <arguments>
            <argument name="property" defaultValue=""/>
        </arguments>
        <attachFile userInput="{{property.value}}" selector='{{PageBuilderActionsSection.panelFieldControl(property.section, property.fieldName)}}' stepKey="attachImageFile"/>
        <!-- <waitForElementVisible time="10" selector="{{PageBuilderActionsSection.panelFieldUploadSummary(property.value)}}" stepKey="waitForImageUploadSummary" /> -->
    </actionGroup>
    <actionGroup name="clickSlideOutPanelFieldGeneral">
        <arguments>
            <argument name="property" defaultValue=""/>
        </arguments>
        <waitForElement time="2" selector="{{PageBuilderActionsSection.panelFieldControl(property.section, property.fieldName)}}" stepKey="waitForElementVisible" />
        <click selector="{{PageBuilderActionsSection.panelFieldControlSwitch(property.fieldName)}}" stepKey="clickProperty"/>
        <wait time="1" stepKey="waitForClick"/>
        <seeElement selector="{{PageBuilderActionsSection.panelSectionChangedIcon(property.section)}}" stepKey="verifySectionUpdated"/>
    </actionGroup>
    <actionGroup name="selectSlideOutPanelField">
        <arguments>
            <argument name="property" defaultValue=""/>
        </arguments>
        <waitForElement time="2" selector="{{PageBuilderColumnSection.panelFieldControl(property.section, property.fieldName)}}" stepKey="waitForElementVisible" />
        <selectOption selector="{{PageBuilderColumnSection.panelFieldControl(property.section, property.fieldName)}}" userInput="{{property.value}}" stepKey="selectPropertyField"/>
        <click selector="{{PageBuilderColumnSection.panelFieldLabel(property.section, property.fieldName, property.section, property.name)}}" stepKey="clickOnFieldLabel"/>
        <waitForElementVisible time="2" selector="{{PageBuilderColumnSection.panelSectionChangedIcon(property.section)}}" stepKey="waitForSectionChangedIcon" />
        <seeElement selector="{{PageBuilderColumnSection.panelSectionChangedIcon(property.section)}}" stepKey="verifySectionUpdated"/>
    </actionGroup>
    <actionGroup name="clickSlideOutPanelField">
        <arguments>
            <argument name="property" defaultValue=""/>
        </arguments>
        <waitForElement time="2" selector="{{PageBuilderColumnSection.panelFieldControl(property.section, property.fieldName)}}" stepKey="waitForElementVisible" />
        <click selector="{{PageBuilderColumnSection.panelFieldControl(property.section, property.fieldName)}}" stepKey="clickProperty"/>
        <wait time="1" stepKey="waitForClick"/>
        <click selector="{{PageBuilderColumnSection.panelFieldLabel(property.section, property.fieldName, property.section, property.name)}}" stepKey="clickOnFieldLabel"/>
        <waitForElementVisible time="2" selector="{{PageBuilderColumnSection.panelSectionChangedIcon(property.section)}}" stepKey="waitForSectionChangedIcon" />
        <seeElement selector="{{PageBuilderColumnSection.panelSectionChangedIcon(property.section)}}" stepKey="verifySectionUpdated"/>
    </actionGroup>
    <actionGroup name="seeInFieldSlideOutProperty">
        <arguments>
            <argument name="property" defaultValue=""/>
        </arguments>
        <waitForElement time="2" selector="{{PageBuilderColumnSection.panelFieldControl(property.section, property.fieldName)}}" stepKey="waitForElementVisible" />
        <seeInField selector="{{PageBuilderColumnSection.panelFieldControl(property.section, property.fieldName)}}" userInput="{{property.value}}" stepKey="seeInFieldProperty"/>
    </actionGroup>
    <actionGroup name="seeInFieldSlideOutIsZeroProperty">
        <!-- must have this instead of using seeInFieldSlideOutProperty w/ argument of 0 because of MFTF bug -->
        <arguments>
            <argument name="property" defaultValue=""/>
        </arguments>
        <waitForElement time="2" selector="{{PageBuilderColumnSection.panelFieldControl(property.section, property.fieldName)}}" stepKey="waitForElementVisible" />
        <seeInField selector="{{PageBuilderColumnSection.panelFieldControl(property.section, property.fieldName)}}" userInput="0" stepKey="seeInFieldProperty"/>
    </actionGroup>
    <actionGroup name="seeOptionIsSelectedSlideOutProperty">
        <arguments>
            <argument name="property" defaultValue=""/>
        </arguments>
        <waitForElement time="2" selector="{{PageBuilderColumnSection.panelFieldControl(property.section, property.fieldName)}}" stepKey="waitForElementVisible" />
        <seeInField selector="{{PageBuilderColumnSection.panelFieldControl(property.section, property.fieldName)}}" userInput="{{property.value}}" stepKey="seeOptionIsSelectedProperty"/>
    </actionGroup>
    <actionGroup name="seeOptionIsCheckedSlideOutProperty">
        <arguments>
            <argument name="property" defaultValue=""/>
        </arguments>
        <waitForElement time="2" selector="{{PageBuilderColumnSection.panelFieldControl(property.section, property.fieldName)}}" stepKey="waitForElementVisible" />
        <seeCheckboxIsChecked selector="{{PageBuilderColumnSection.panelFieldControl(property.section, property.fieldName)}}" stepKey="seeOptionIsCheckedProperty"/>
    </actionGroup>
    <actionGroup name="seeOptionIsNotCheckedSlideOutProperty">
        <arguments>
            <argument name="property" defaultValue=""/>
        </arguments>
        <waitForElement time="2" selector="{{PageBuilderColumnSection.panelFieldControl(property.section, property.fieldName)}}" stepKey="waitForElementVisible" />
        <dontSeeCheckboxIsChecked selector="{{PageBuilderColumnSection.panelFieldControl(property.section, property.fieldName)}}" stepKey="dontSeeOptionIsCheckedProperty"/>
    </actionGroup>
    <actionGroup name="seeInMarginsAndPaddingFieldSlideOutPanel">
        <arguments>
            <argument name="property" defaultValue=""/>
        </arguments>
        <waitForElement time="2" selector="{{PageBuilderActionsSection.panelFieldControl(property.section, property.fieldName)}}" stepKey="waitForElementVisible" />
        <seeInField selector="{{AdvancedForm.advancedMarginTop}}" userInput="{{property.marginTop}}" stepKey="fillMarginTopField"/>
        <seeInField selector="{{AdvancedForm.advancedMarginRight}}" userInput="{{property.marginRight}}" stepKey="fillMarginRightField"/>
        <seeInField selector="{{AdvancedForm.advancedMarginLeft}}" userInput="{{property.marginLeft}}" stepKey="fillMarginLeftField"/>
        <seeInField selector="{{AdvancedForm.advancedMarginBottom}}" userInput="{{property.marginBottom}}" stepKey="fillMarginBottomField"/>
        <seeInField selector="{{AdvancedForm.advancedPaddingTop}}" userInput="{{property.paddingTop}}" stepKey="fillPaddingTopField"/>
        <seeInField selector="{{AdvancedForm.advancedPaddingRight}}" userInput="{{property.paddingRight}}" stepKey="fillPaddingRightField"/>
        <seeInField selector="{{AdvancedForm.advancedPaddingLeft}}" userInput="{{property.paddingLeft}}" stepKey="fillPaddingLeftField"/>
        <seeInField selector="{{AdvancedForm.advancedPaddingBottom}}" userInput="{{property.paddingBottom}}" stepKey="fillPaddingBottomField"/>
    </actionGroup>
    <actionGroup name="validateMarginsAndPaddingPlaceholderTextSlideOutPanel">
        <arguments>
            <argument name="property" defaultValue="PageBuilderAdvancedMarginsAndPaddingDefaultProperty"/>
        </arguments>
        <waitForElement time="2" selector="{{PageBuilderActionsSection.panelFieldControl(property.section, property.fieldName)}}" stepKey="waitForElementVisible"/>
        <seeElement selector="{{AdvancedForm.advancedMarginAndPaddingPlaceholderText('paddingTop', property.placeholderPaddingTop)}}" stepKey="seePaddingTopPlaceholder"/>
        <seeElement selector="{{AdvancedForm.advancedMarginAndPaddingPlaceholderText('paddingRight', property.placeholderPaddingRight)}}" stepKey="seePaddingRightPlaceholder"/>
        <seeElement selector="{{AdvancedForm.advancedMarginAndPaddingPlaceholderText('paddingBottom', property.placeholderPaddingBottom)}}" stepKey="seePaddingBottomPlaceholder"/>
        <seeElement selector="{{AdvancedForm.advancedMarginAndPaddingPlaceholderText('paddingLeft', property.placeholderPaddingLeft)}}" stepKey="seePaddingLeftPlaceholder"/>
        <seeElement selector="{{AdvancedForm.advancedMarginAndPaddingPlaceholderText('marginTop', property.placeholderMarginTop)}}" stepKey="seeMarginTopPlaceholder"/>
        <seeElement selector="{{AdvancedForm.advancedMarginAndPaddingPlaceholderText('marginRight', property.placeholderMarginRight)}}" stepKey="seeMarginRightPlaceholder"/>
        <seeElement selector="{{AdvancedForm.advancedMarginAndPaddingPlaceholderText('marginBottom', property.placeholderMarginBottom)}}" stepKey="seeMarginBottomPlaceholder"/>
        <seeElement selector="{{AdvancedForm.advancedMarginAndPaddingPlaceholderText('marginLeft', property.placeholderMarginLeft)}}" stepKey="seeMarginLeftPlaceholder"/>
    </actionGroup>
    <actionGroup name="attachFileSlideOutProperty">
        <arguments>
            <argument name="property" defaultValue=""/>
        </arguments>
        <attachFile userInput="{{property.value}}" selector='{{PageBuilderColumnSection.panelFieldControl(property.section, property.fieldName)}}' stepKey="attachBackgroundImageFile"/>
        <!-- <waitForElementVisible time="10" selector="{{PageBuilderColumnSection.panelFieldUploadSummary(property.value)}}" stepKey="waitForImageUploadSummary" /> -->
    </actionGroup>
    <actionGroup name="saveEditPanelSettings">
        <waitForLoadingMaskToDisappear stepKey="waitForLoadingMask"/>
        <waitForElementVisible time="5" selector="{{PageBuilderActionsSection.editFormSave}}" stepKey="waitForColumnSaveButton" />
        <click selector="{{PageBuilderActionsSection.editFormSave}}" stepKey="clickSaveColumn"/>
        <waitForElementNotVisible time="5" selector="{{PageBuilderActionsSection.editForm}}" stepKey="waitForEditFormNotVisible" />
        <waitForElementVisible time="5" selector="{{CmsNewPagePageActionsSection.saveAndContinueEdit}}" stepKey="waitForCmsPageSaveButton" />
    </actionGroup>
    <actionGroup name="closeEditPanelSettings">
        <waitForLoadingMaskToDisappear stepKey="waitForLoadingMask"/>
        <waitForElementVisible time="1" selector="{{PageBuilderActionsSection.editFormClose}}" stepKey="waitForCloseButton" />
        <click selector="{{PageBuilderActionsSection.editFormClose}}" stepKey="clickCloseButton"/>
        <waitForElementNotVisible time="5" selector="{{PageBuilderActionsSection.editForm}}" stepKey="waitForEditFormNotVisible" />
        <waitForElementVisible time="1" selector="{{CmsNewPagePageActionsSection.saveAndContinueEdit}}" stepKey="waitForCmsPageSaveButton" />
    </actionGroup>
    <actionGroup name="saveAndContinueEditCmsPage">
        <waitForElementVisible time="10" selector="{{CmsNewPagePageActionsSection.saveAndContinueEdit}}" stepKey="waitForSaveAndContinueVisibility"/>
        <click selector="{{CmsNewPagePageActionsSection.saveAndContinueEdit}}" stepKey="clickSaveAndContinueEditCmsPage"/>
        <waitForPageLoad stepKey="waitForCmsPageLoad"/>
        <waitForElementVisible time="1" selector="{{CmsNewPagePageActionsSection.cmsPageTitle}}" stepKey="waitForCmsPageSaveButton" />
        <waitForLoadingMaskToDisappear stepKey="waitForLoadingMask"/>
    </actionGroup>
    <actionGroup name="saveCmsPage">
        <click selector="{{CmsNewPagePageActionsSection.expandSplitButton}}" stepKey="expandSplitButton"/>
        <click selector="{{CmsNewPagePageActionsSection.savePage}}" stepKey="clickSaveCmsPage"/>
        <waitForElementVisible time="1" selector="{{CmsPagesPageActionsSection.addNewPageButton}}" stepKey="waitForCmsPageSaveButton" />
        <see userInput="You saved the page." selector="{{CmsPagesPageActionsSection.savePageSuccessMessage}}" stepKey="assertSavePageSuccessMessage"/>
    </actionGroup>
    <actionGroup name="searchAndViewCmsPage">
        <arguments>
            <argument name="contentBlockType" defaultValue=""/>
        </arguments>
        <amOnPage url="{{CmsPagesPage.url}}" stepKey="onCmsPagesPageActionsSection"/>
        <waitForPageLoad stepKey="waitForCmsPagesGridLoad"/>
        <click selector="{{CmsPagesPageActionsSection.filterButton}}" stepKey="clickFiltersBtn" />
        <fillField selector="{{CmsPagesPageActionsSection.URLKey}}" userInput="{{contentBlockType.name}}{{PageBuilderPageTitle.pageName}}" stepKey="fillOutURLKey" />
        <click selector="{{CmsPagesPageActionsSection.ApplyFiltersBtn}}" stepKey="clickApplyBtn" />
        <waitForPageLoad stepKey="waitForSearchResults" />
        <waitForElementVisible selector="{{CmsPagesPageActionsSection.firstItemSelectButton}}" stepKey="waitForFirstItemButton" />
        <click selector="{{CmsPagesPageActionsSection.firstItemSelectButton}}" stepKey="clickSelectButtonOnFirstItem"/>
        <waitForElementVisible selector="{{CmsPagesPageActionsSection.firstItemEditButton}}" stepKey="waitForFirstItemEditButton" />
        <click selector="{{CmsPagesPageActionsSection.firstItemEditButton}}" stepKey="clickSelectEditOnFirstItem"/>
        <waitForPageLoad stepKey="waitForEditCmsPage" />
    </actionGroup>
    <actionGroup name="enablePageBuilderSetting">
        <amOnPage url="{{AdminContentManagementPage.url}}" stepKey="navigateToConfigurationPage" />
        <waitForPageLoad stepKey="wait1"/>
        <conditionalClick stepKey="expandWYSIWYGOptions" selector="{{ContentManagementSection.PageBuilderOptions}}" dependentSelector="{{ContentManagementSection.CheckIfPageBuilderTabExpanded}}" visible="true" />
        <waitForElementVisible selector="{{ContentManagementSection.EnablePageBuilder}}" stepKey="waitForEnablePageBuilder" />
        <selectOption selector="{{ContentManagementSection.EnablePageBuilder}}" userInput="Yes" stepKey="selectOption1"/>
        <click selector="{{ContentManagementSection.PageBuilderOptions}}" stepKey="collapsePageBuilderOptions" />
        <click selector="{{ContentManagementSection.Save}}" stepKey="saveConfig" />
        <waitForPageLoad stepKey="wait2"/>
    </actionGroup>
    <actionGroup name="disablePageBuilderSetting">
        <!-- Enable first since it's dependent on disable Disclaimer modal showing -->
        <amOnPage url="{{AdminContentManagementPage.url}}" stepKey="navigateToConfigurationPage" />
        <waitForPageLoad stepKey="wait1"/>
        <conditionalClick stepKey="expandWYSIWYGOptions" selector="{{ContentManagementSection.PageBuilderOptions}}" dependentSelector="{{ContentManagementSection.CheckIfPageBuilderTabExpanded}}" visible="true" />
        <waitForElementVisible selector="{{ContentManagementSection.EnablePageBuilder}}" stepKey="waitForEnablePageBuilder" />
        <selectOption selector="{{ContentManagementSection.EnablePageBuilder}}" userInput="Yes" stepKey="selectOption1"/>
        <click selector="{{ContentManagementSection.PageBuilderOptions}}" stepKey="collapsePageBuilderOptions" />
        <click selector="{{ContentManagementSection.Save}}" stepKey="saveConfig" />
        <waitForPageLoad stepKey="wait2"/>
        <!-- NOW disable -->
        <amOnPage url="{{AdminContentManagementPage.url}}" stepKey="navigateToConfigurationPage" />
        <waitForPageLoad stepKey="waitForPageLoad"/>
        <conditionalClick stepKey="expandPageBuilderTab" selector="{{PageBuilderCollapsibleSection.AdvancedContentToolsTab}}" dependentSelector="{{PageBuilderCollapsibleSection.CheckIfTabOpen}}" visible="true" />
        <waitForElementVisible selector="{{PageBuilderCollapsibleSection.EnablePageBuilderDrp}}" stepKey="waitForEnablePageBuilderVisible" />
        <selectOption selector="{{PageBuilderCollapsibleSection.EnablePageBuilderDrp}}" userInput="No" stepKey="selectNo"/>
        <waitForElementVisible selector="{{PageBuilderCollapsibleSection.DisclaimerMessage}}" stepKey="waitForPopUpMsg2"/>
        <waitForElementVisible selector="{{PageBuilderCollapsibleSection.TurnOffBtn}}" stepKey="waitForTurnOffButton"/>
        <click selector="{{PageBuilderCollapsibleSection.TurnOffBtn}}" stepKey="selectTurnOff" />
        <wait time="3" stepKey="waitForModal"/>
        <dontSee selector="{{PageBuilderCollapsibleSection.DisclaimerMessage}}" stepKey="popupClose2"/>
        <wait time="3" stepKey="wait" />
        <click selector="{{PageBuilderCollapsibleSection.AdvancedContentToolsTab}}" stepKey="collapseAdvancedContentToolsTab" />
        <click selector="{{ContentManagementSection.Save}}" stepKey="saveConfig2" />
        <waitForPageLoad stepKey="waitForPageLoad2"/>
    </actionGroup>
    <actionGroup name="verifyPageBuilderVisibleOnPage">
        <wait time="3" stepKey="waitForPageBuiderVisible"/>
        <dontSee userInput="Enable Advanced CMS" stepKey="dontSeeEnableAdvancedCMSBtn"/>
        <seeElement selector="{{PageBuilderActionsSection.identifyPageBuilder}}" stepKey="seePageBuilderVisible" />
    </actionGroup>
    <actionGroup name="verifyPageBuilderNotVisibleOnPage">
        <dontSee userInput="Enable Advanced CMS" stepKey="dontSeeEnableAdvancedCMSBtn"/>
        <dontSee selector="{{PageBuilderActionsSection.identifyPageBuilder}}" stepKey="seePageBuilderVisible" />
    </actionGroup>
    <actionGroup name="fillDynamicBlockName">
        <arguments>
            <argument name="Banner" defaultValue=""/>
        </arguments>
        <fillField selector="{{AdminBannerBasicActionSection.Name}}" userInput="{{Banner.Name}}" stepKey="fillBannerName" />
        <conditionalClick selector="{{AdminBannerBasicActionSection.ContentTab}}" dependentSelector="{{BannerContentSection.checkIfContentTabOpen}}" stepKey="clickIfContentTabCloses" visible="true"/>
    </actionGroup>
    <actionGroup name="navigateToCreatedDynamicBlock">
        <arguments>
            <argument name="Banner"/>
        </arguments>
        <amOnPage url="{{AdminBannerGridPage.url}}" stepKey="navigateToDynamicBlocksGrid"/>
        <waitForPageLoad stepKey="waitForPageLoad1"/>
        <conditionalClick selector="//div[contains(@data-role, 'grid-wrapper')]/table/thead/tr/th/span[contains(text(), 'ID')]" dependentSelector="//span[contains(text(), 'ID')]/parent::th[not(contains(@class, '_descend'))]/parent::tr/parent::thead/parent::table/parent::div[contains(@data-role, 'grid-wrapper')]" stepKey="clickToAttemptSortByIdDescending" visible="true"/>
        <waitForLoadingMaskToDisappear stepKey="waitForFirstIdSortDescendingToFinish" />
        <!-- Conditional Click again in case it goes from default state to ascending on first click -->
        <conditionalClick selector="//div[contains(@data-role, 'grid-wrapper')]/table/thead/tr/th/span[contains(text(), 'ID')]" dependentSelector="//span[contains(text(), 'ID')]/parent::th[not(contains(@class, '_descend'))]/parent::tr/parent::thead/parent::table/parent::div[contains(@data-role, 'grid-wrapper')]" stepKey="secondClickToAttemptSortByIdDescending" visible="true"/>
        <waitForLoadingMaskToDisappear stepKey="waitForSecondIdSortDescendingToFinish" />
        <click selector="{{AdminBannerGridSection.title(Banner.Name)}}" stepKey="clickSelectCreatedDynamicBlock" />
        <waitForPageLoad stepKey="waitForPageLoad2"/>
    </actionGroup>
    <actionGroup name="expandPageBuilderPanelGroup">
        <arguments>
            <argument name="group" defaultValue="PageBuilderPanelGroupGeneral"/>
        </arguments>
        <waitForElementVisible selector="{{PageBuilderActionsSection.panelGroup(group.name)}}" stepKey="waitForGroupVisible"/>
        <conditionalClick selector="{{PageBuilderActionsSection.panelGroup(group.name)}}" dependentSelector="{{PageBuilderActionsSection.panelGroupActive(group.name)}}" visible="false" stepKey="expandGroup"/>
        <waitForElementVisible selector="{{PageBuilderActionsSection.panelGroupActive(group.name)}}" stepKey="waitForGroupExpanded"/>
    </actionGroup>
    <actionGroup name="navigateToStoreFront">
        <arguments>
            <argument name="prefix" defaultValue="" type="string"/>
        </arguments>
        <amOnPage url="{{prefix}}{{PageBuilderPageTitle.pageName}}" stepKey="amOnStoreFrontPage"/>
        <waitForPageLoad stepKey="waitForPageLoad"/>
    </actionGroup>
    <actionGroup name="validateOnHoverOptionMenu">
        <arguments>
            <argument name="contentBlock" defaultValue=""/>
        </arguments>
        <waitForElementVisible selector="{{PageBuilderActionsSection.contentBlockInStage(contentBlock.role)}}" stepKey="waitForContentBlockInStageVisible" />
        <moveMouseOver selector="{{PageBuilderActionsSection.contentBlockInStage(contentBlock.role)}}" stepKey="onMouseOverStage"/>
        <waitForElementVisible selector="{{PageBuilderActionsSection.contentBlockOptionsMenu(contentBlock.role)}}" stepKey="waitForOptionsMenu" />
        <waitForElementVisible selector="{{PageBuilderActionsSection.contentBlockMove(contentBlock.role)}}" stepKey="seeOptionsMove"/>
        <waitForElementVisible selector="{{PageBuilderActionsSection.contentBlockEdit(contentBlock.role)}}" stepKey="seeOptionsEdit"/>
        <waitForElementVisible selector="{{PageBuilderActionsSection.contentBlockDuplicate(contentBlock.role, '1')}}" stepKey="seeOptionsDuplicate"/>
        <waitForElementVisible selector="{{PageBuilderActionsSection.contentBlockRemove(contentBlock.role)}}" stepKey="seeOptionsRemove"/>
        <see selector="{{PageBuilderActionsSection.contentBlockOptionsMenu(contentBlock.role)}}" userInput="{{contentBlock.name}}" stepKey="seeOptionMenuTitle"/>
    </actionGroup>
</actionGroups>
