<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:noNamespaceSchemaLocation="../../../../../../vendor/magento/magento2-functional-testing-framework/src/Magento/FunctionalTestingFramework/Test/etc/testSchema.xsd">
    <test name="AddButtonsContentBlockToCMSPage">
        <annotations>
            <features value="Pagebuilder: Buttons"/>
            <stories value="MAGETWO-83922: Buttons"/>
            <title value="Add Buttons in PageBuilder for new CMS page and view on Storefront"/>
            <description value="A user should be able to add a button into a row."/>
            <severity value="CRITICAL"/>
            <testCaseId value="MAGETWO-84273"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-buttons"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="EnabledWYSIWYG" stepKey="enableWYSIWYG"/>
            <actionGroup ref="enablePageBuilderSetting" stepKey="enablePageBuilderSetting"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <amOnPage url="{{CmsPagesPage.url}}" stepKey="amOnEditPage"/>
            <waitForPageLoad stepKey="waitForPageLoad"/>
            <conditionalClick selector="{{CmsPagesPageActionsSection.clearAllButton}}" dependentSelector="{{CmsPagesPageActionsSection.activeFilters}}" stepKey="clickToResetFilter" visible="true"/>
            <waitForPageLoad stepKey="waitForGridReload"/>
            <actionGroup ref="DisabledWYSIWYG" stepKey="disableWYSIWYG"/>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <!-- Add button -->
        <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle1">
            <argument name="contentBlockType" value="PageBuilderButtonsContentBlock"/>
        </actionGroup>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragButtonsOntoStage">
            <argument name="contentBlockType" value="PageBuilderButtonsContentBlock"/>
        </actionGroup>
        <actionGroup ref="saveAndContinueEditCmsPage" stepKey="saveAndContinueEditCmsPage1"/>
        <see userInput="{{PageBuilderPageTitle.pageName}}" selector="{{CmsNewPagePageActionsSection.cmsPageTitle}}" stepKey="assertTitleSavedCmsPage"/>
        <waitForPageLoad stepKey="waitForCmsPageToSave1"/>
        <see userInput="You saved the page." stepKey="assertPageSaved1"/>
        <waitForLoadingMaskToDisappear stepKey="waitForSpinner2"/>
        <click selector="{{CmsNewPagePageContentSection.header}}" stepKey="clickContentTab1" />
        <waitForElementVisible time="10" selector="{{PageBuilderActionsSection.contentBlockInStage(PageBuilderRowContentBlock.role)}}" stepKey="waitForContentBlockInStageVisible" />
        <moveMouseOver selector="{{CmsNewPagePageActionsSection.savePage}}" stepKey="onMouseOverRowContentBlockStage"/>
        <moveMouseOver selector="{{PageBuilderActionsSection.contentBlockInStage(PageBuilderButtonsContentBlock.role)}}" stepKey="onMouseOverButtonsContentBlockStage1"/>
        <waitForPageLoad stepKey="waitForMouseOverAnimation" />
        <waitForElementVisible time="10" selector="{{PageBuilderActionsSection.contentBlockOptionsMenu(PageBuilderButtonsContentBlock.role)}}" stepKey="waitForOptions" />
        <seeElement selector="{{ButtonsBackendSection.addNewButtonItemOption}}" stepKey="seeAddButton1"/>
        <seeElement selector="{{ButtonsBackendSection.emptyButtonItemElement(PageBuilderButtonItemTypePrimaryProperty.value)}}" stepKey="seeEmptyButton"/>
        <amOnPage url="buttons{{PageBuilderPageTitle.pageName}}" stepKey="amOnPageBuilderPage1"/>
        <seeElementInDOM selector="{{ButtonsFrontendSection.emptyButtonItemElement(PageBuilderButtonItemTypePrimaryProperty.value)}}" stepKey="seeEmptyButtonOnStorefront"/>
        <!-- Edit button -->
        <amOnPage url="{{CmsPagesPage.url}}" stepKey="onCmsPagesPageActionsSection"/>
        <waitForPageLoad stepKey="waitForCmsPagesGridLoad"/>
        <waitForElementNotVisible selector="{{CmsPagesPageActionsSection.spinner}}" stepKey="waitForSpinnerNotVisible1" />
        <conditionalClick selector="{{CmsPagesPageActionsSection.clearAllButton}}" dependentSelector="{{CmsPagesPageActionsSection.activeFilter}}" stepKey="clickClearFilterIfPresent" visible="true"/>
        <waitForElementNotVisible selector="{{CmsPagesPageActionsSection.spinner}}" stepKey="waitForSpinnerNotVisible2" />
        <click selector="{{CmsPagesPageActionsSection.filterButton}}" stepKey="clickFiltersBtn" />
        <fillField selector="{{CmsPagesPageActionsSection.URLKey}}" userInput="buttons{{PageBuilderPageTitle.pageName}}" stepKey="fillOutURLKey" />
        <click selector="{{CmsPagesPageActionsSection.ApplyFiltersBtn}}" stepKey="clickApplyBtn" />
        <waitForPageLoad stepKey="waitForSearchResults" />
        <waitForElementVisible selector="{{CmsPagesPageActionsSection.firstItemSelectButton}}" stepKey="waitForFirstItemButton" />
        <click selector="{{CmsPagesPageActionsSection.firstItemSelectButton}}" stepKey="clickSelectButtonOnFirstItem"/>
        <waitForElementVisible selector="{{CmsPagesPageActionsSection.firstItemEditButton}}" stepKey="waitForFirstItemEditButton" />
        <click selector="{{CmsPagesPageActionsSection.firstItemEditButton}}" stepKey="clickSelectEditOnFirstItem"/>
        <waitForPageLoad stepKey="waitForEditCmsPage" />
        <click selector="{{CmsNewPagePageContentSection.header}}" stepKey="clickContentTab2" />
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage1">
            <argument name="contentBlockType" value="PageBuilderButtonItemContentBlock"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="fillButton1TextField">
            <argument name="property" value="PageBuilderButtonItemTextProperty"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelLinkUrlField" stepKey="fillButton1LinkField">
            <argument name="property" value="PageBuilderButtonItemLinkProperty"/>
            <argument name="selection" value="ExternalLink"/>
        </actionGroup>
        <actionGroup ref="expandConfigurationSection" stepKey="expandConfigurationSection"/>
        <actionGroup ref="selectSlideOutPanelField" stepKey="enterBorder">
            <argument name="property" value="PageBuilderAdvancedBorderPropertyDouble"/>
        </actionGroup>
        <comment userInput="I fill out color using Color Picker" stepKey="comment"/>
        <actionGroup ref="fillOutColorPicker" stepKey="fillOutColor">
            <argument name="colorCode" value="PageBuilderAdvancedBorderColorProperty_green"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="seeHEXInField7">
            <argument name="property" value="PageBuilderAdvancedBorderColorProperty_green"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings2"/>
        <moveMouseOver selector="{{PageBuilderActionsSection.contentBlockInStage(PageBuilderButtonsContentBlock.role)}}" stepKey="onMouseOverButtonsContentBlockStage2"/>
        <waitForPageLoad stepKey="waitForMouseOverAnimation2" />
        <waitForElementVisible time="10" selector="{{PageBuilderActionsSection.contentBlockOptionsMenu(PageBuilderButtonsContentBlock.role)}}" stepKey="waitForOptions2" />
        <seeElement selector="{{ButtonsBackendSection.addNewButtonItemOption}}" stepKey="seeAddButton2"/>
        <click selector="{{ButtonsBackendSection.addNewButtonItemOption}}" stepKey="clickAddButton"/>
        <actionGroup ref="openPageBuilderEditPanelSmallByIndex" stepKey="openEditMenuOnStage2">
            <argument name="contentBlockType" value="PageBuilderButtonItemContentBlock"/>
            <argument name="contentBlockIndex" value="PageBuilderButtonIndex2"/>
        </actionGroup>
        <waitForLoadingMaskToDisappear stepKey="waitForModalToLoad"/>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="fillButton2TextField">
            <argument name="property" value="PageBuilderButtonItemTextProperty"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelLinkUrlField" stepKey="fillButton1Link2Field">
            <argument name="property" value="PageBuilderButtonItemLinkProperty"/>
            <argument name="selection" value="ExternalLink"/>
        </actionGroup>
        <actionGroup ref="selectSlideOutPanelFieldGeneral" stepKey="fillButton2TypeSecondaryProperty">
            <argument name="property" value="PageBuilderButtonItemTypeSecondaryProperty"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings3"/>
        <actionGroup ref="saveAndContinueEditCmsPage" stepKey="saveAndContinueEditCmsPage2"/>
        <waitForPageLoad stepKey="waitForCmsPageToSave2"/>
        <see userInput="You saved the page." stepKey="assertPageSaved2"/>
        <waitForLoadingMaskToDisappear stepKey="waitForSpinner3"/>
        <click selector="{{CmsNewPagePageContentSection.header}}" stepKey="clickContentTab3" />
        <waitForElementVisible selector="{{ButtonsBackendSection.buttonItemElement(PageBuilderButtonItemTypePrimaryProperty.value, PageBuilderButtonItemTextProperty.value)}}" stepKey="waitForButtonToShow"/>
        <click selector="{{ButtonsBackendSection.buttonItemElement(PageBuilderButtonItemTypePrimaryProperty.value, PageBuilderButtonItemTextProperty.value)}}" stepKey="clickButton"/>
        <seeElement selector="{{ButtonsBackendSection.buttonItemElement(PageBuilderButtonItemTypePrimaryProperty.value, PageBuilderButtonItemTextProperty.value)}}" stepKey="seeButton"/>
        <seeElement selector="{{ButtonsBackendSection.buttonItemElement(PageBuilderButtonItemTypeSecondaryProperty.value, PageBuilderButtonItemTextProperty.value)}}" stepKey="seeButton2"/>
        <amOnPage url="buttons{{PageBuilderPageTitle.pageName}}" stepKey="amOnPageBuilderPage2"/>
        <seeElement selector="{{ButtonsFrontendSection.buttonItemElement(PageBuilderButtonItemTypePrimaryProperty.value, PageBuilderButtonItemLinkProperty.value, PageBuilderButtonItemTextProperty.value)}}" stepKey="seePrimaryButtonOnStorefront"/>
        <seeElement selector="{{ButtonsFrontendSection.buttonItemElement(PageBuilderButtonItemTypeSecondaryProperty.value, PageBuilderButtonItemLinkProperty.value, PageBuilderButtonItemTextProperty.value)}}" stepKey="seeSecondaryButtonOnStorefront"/>
        <!-- Check fields and edit advanced section back to default -->
        <amOnPage url="{{CmsPagesPage.url}}" stepKey="onCmsPagesPageActionsSection2"/>
        <waitForPageLoad stepKey="waitForCmsPagesGridLoad2"/>
        <click selector="{{CmsPagesPageActionsSection.filterButton}}" stepKey="clickFiltersBtn2" />
        <fillField selector="{{CmsPagesPageActionsSection.URLKey}}" userInput="buttons{{PageBuilderPageTitle.pageName}}" stepKey="fillOutURLKey2" />
        <click selector="{{CmsPagesPageActionsSection.ApplyFiltersBtn}}" stepKey="clickApplyBtn2" />
        <waitForPageLoad stepKey="waitForSearchResults2" />
        <waitForElementVisible selector="{{CmsPagesPageActionsSection.firstItemSelectButton}}" stepKey="waitForFirstItemButton2" />
        <click selector="{{CmsPagesPageActionsSection.firstItemSelectButton}}" stepKey="clickSelectButtonOnFirstItem2"/>
        <waitForElementVisible selector="{{CmsPagesPageActionsSection.firstItemEditButton}}" stepKey="waitForFirstItemEditButton2" />
        <click selector="{{CmsPagesPageActionsSection.firstItemEditButton}}" stepKey="clickSelectEditOnFirstItem2"/>
        <waitForPageLoad stepKey="waitForEditCmsPage2" />
        <click selector="{{CmsNewPagePageContentSection.header}}" stepKey="clickContentTab4" />
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage3">
            <argument name="contentBlockType" value="PageBuilderButtonItemContentBlock"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="seeButtonItemTextProperty">
            <argument name="property" value="PageBuilderButtonItemTextProperty"/>
        </actionGroup>
        <waitForElement time="2" selector="{{PageBuilderSection.LinkInput('button_link')}}" stepKey="waitForElementVisible" />
        <seeInField selector="{{PageBuilderSection.LinkInput('button_link')}}" userInput="{{PageBuilderButtonItemLinkProperty.value}}"  stepKey="seeInFieldProperty"/>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings4"/>
        <actionGroup ref="saveAndContinueEditCmsPage" stepKey="saveAndContinueEditCmsPage3"/>
        <click selector="{{CmsNewPagePageContentSection.header}}" stepKey="clickContentTab5" />
        <waitForElementVisible selector="{{ButtonsBackendSection.buttonItemElement(PageBuilderButtonItemTypePrimaryProperty.value, PageBuilderButtonItemTextProperty.value)}}" stepKey="waitForButtonToShow2"/>
        <seeElementInDOM selector="{{ButtonsBackendSection.alignmentDefaultStyle}}" stepKey="dontSeeAlignmentSet"/>
        <dontSeeElementInDOM selector="{{ButtonsBackendSection.borderStyle(PageBuilderAdvancedBorderWidthProperty10.value, PageBuilderAdvancedBorderPropertyDotted.value, PageBuilderAdvancedBorderColorProperty_ffffff.rbg)}}" stepKey="dontSeeBorderSet"/>
        <actionGroup ref="openPageBuilderEditPanelSmallByIndex" stepKey="openEditMenuOnStage4">
            <argument name="contentBlockType" value="PageBuilderButtonItemContentBlock"/>
            <argument name="contentBlockIndex" value="PageBuilderButtonIndex1"/>
        </actionGroup>
        <waitForElementVisible selector="{{AdvancedForm.sectionName}}" stepKey="waitForAdvancedForm3"/>
        <seeElement selector="{{AdvancedForm.sectionName}}" stepKey="seeAdvancedFormSection3"/>
        <click selector="{{AdvancedForm.sectionName}}" stepKey="clickAdvancedFormSection3"/>
        <actionGroup ref="validateTextAlignment" stepKey="seeAdvancedAlignmentPropertyDefault">
            <argument name="property" value="PageBuilderAdvancedAlignmentPropertyDefault"/>
        </actionGroup>
        <actionGroup ref="seeOptionIsSelectedSlideOutProperty" stepKey="seeAdvancedBorderPropertyDefault">
            <argument name="property" value="PageBuilderAdvancedBorderPropertyDouble"/>
        </actionGroup>
    </test>
    <test name="ButtonDelete">
        <annotations>
            <features value="Pagebuilder: Buttons"/>
            <stories value="MAGETWO-83922: Buttons"/>
            <title value="Remove button content block from stage"/>
            <description value="A user should be able to remove a button from a row."/>
            <severity value="CRITICAL"/>
            <testCaseId value="MAGETWO-84919"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-buttons"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="EnabledWYSIWYG" stepKey="enableWYSIWYG"/>
            <actionGroup ref="enablePageBuilderSetting" stepKey="enablePageBuilderSetting"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="DisabledWYSIWYG" stepKey="disableWYSIWYG"/>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragContentBlockToStage">
            <argument name="contentBlockType" value="PageBuilderButtonsContentBlock"/>
        </actionGroup>
        <actionGroup ref="removeEmptyContentBlockFromStage" stepKey="removeButtonFromStage">
            <argument name="contentBlockType" value="PageBuilderButtonItemContentBlock"/>
        </actionGroup>
        <dontSeeElement selector="{{PageBuilderActionsSection.contentBlockInStage(PageBuilderButtonItemContentBlock.role)}}" stepKey="dontSeeContentBlockInStage"/>
    </test>
    <test name="ButtonValidateAdvancedConfigurationDefaultValues">
        <annotations>
            <features value="Pagebuilder: Buttons"/>
            <stories value="MAGETWO-83415: Bluefoot Content Blocks and Containers Advanced Configuration settings"/>
            <title value="Button - Validate Advanced Configuration Default Values"/>
            <description value="Validate the default values for every attribute in the Advanced Configuration form and on Stage for Button."/>
            <severity value="CRITICAL"/>
            <testCaseId value="MAGETWO-89419"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-buttons"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="EnabledWYSIWYG" stepKey="enableWYSIWYG"/>
            <actionGroup ref="enablePageBuilderSetting" stepKey="enablePageBuilderSetting"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="DisabledWYSIWYG" stepKey="disableWYSIWYG"/>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragButtonsOntoStage">
            <argument name="contentBlockType" value="PageBuilderButtonsContentBlock"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanelSmallByIndex" stepKey="openEditMenuOnStage">
            <argument name="contentBlockType" value="PageBuilderButtonItemContentBlock"/>
            <argument name="contentBlockIndex" value="PageBuilderButtonIndex1"/>
        </actionGroup>
        <actionGroup ref="expandConfigurationSection" stepKey="expandConfigurationSection"/>
        <!-- Validate Default Values -->
        <comment userInput="Validate Default Values" stepKey="CommentValidateDefaultValues"/>
        <actionGroup ref="seeOptionIsSelectedSlideOutProperty" stepKey="validateAlignment">
            <argument name="property" value="PageBuilderAdvancedAlignmentPropertyDefault"/>
        </actionGroup>
        <actionGroup ref="seeOptionIsSelectedSlideOutProperty" stepKey="validateBorder">
            <argument name="property" value="PageBuilderAdvancedBorderPropertyDefault"/>
        </actionGroup>
        <grabValueFrom selector="{{PageBuilderColumnSection.panelFieldControl(PageBuilderAdvancedBorderColorDefaultProperty.section, PageBuilderAdvancedBorderColorDefaultProperty.fieldName)}}" stepKey="getBorderColor"/>
        <assertEmpty actual="getBorderColor" actualType="variable" message="Text field has text: $getBorderColor" stepKey="assertBorderColor"/>
        <grabValueFrom selector="{{PageBuilderColumnSection.panelFieldControl(PageBuilderAdvancedBorderWidthPropertyDefault.section, PageBuilderAdvancedBorderWidthPropertyDefault.fieldName)}}" stepKey="getBorderWidth"/>
        <assertEmpty actual="getBorderWidth" actualType="variable" message="Text field has text: $getBorderWidth" stepKey="assertBorderWidth"/>
        <grabValueFrom selector="{{PageBuilderColumnSection.panelFieldControl(PageBuilderAdvancedBorderRadiusDefaultProperty.section, PageBuilderAdvancedBorderRadiusDefaultProperty.fieldName)}}" stepKey="getBorderRadius"/>
        <assertEmpty actual="getBorderRadius" actualType="variable" message="Text field has text: $getBorderRadius" stepKey="assertBorderRadius"/>
        <grabValueFrom selector="{{PageBuilderColumnSection.panelFieldControl(PageBuilderAdvancedCssClassesDefaultProperty.section, PageBuilderAdvancedCssClassesDefaultProperty.fieldName)}}" stepKey="getCssClasses"/>
        <assertEmpty actual="getCssClasses" actualType="variable" message="Text field was not empty. Had text: $getCssClasses" stepKey="assertCssClasses"/>
        <!-- Margin -->
        <grabValueFrom selector="{{AdvancedForm.advancedMarginTop}}" stepKey="getMarginTop"/>
        <assertEmpty actual="getMarginTop" actualType="variable" message="Text field has text: $getMarginTop" stepKey="assertMarginTop"/>
        <grabValueFrom selector="{{AdvancedForm.advancedMarginRight}}" stepKey="getMarginRight"/>
        <assertEmpty actual="getMarginRight" actualType="variable" message="Text field has text: $getMarginRight" stepKey="assertMarginRight"/>
        <grabValueFrom selector="{{AdvancedForm.advancedMarginLeft}}" stepKey="getMarginLeft"/>
        <assertEmpty actual="getMarginLeft" actualType="variable" message="Text field has text: $getMarginLeft" stepKey="assertMarginLeft"/>
        <grabValueFrom selector="{{AdvancedForm.advancedMarginBottom}}" stepKey="getMarginBottom"/>
        <assertEmpty actual="getMarginBottom" actualType="variable" message="Text field has text: $getMarginBottom" stepKey="assertMarginBottom"/>
        <!-- Padding -->
        <grabValueFrom selector="{{AdvancedForm.advancedPaddingTop}}" stepKey="getPaddingTop"/>
        <assertEmpty actual="getPaddingTop" actualType="variable" message="Text field has text: $getPaddingTop" stepKey="assertPaddingTop"/>
        <grabValueFrom selector="{{AdvancedForm.advancedPaddingRight}}" stepKey="getPaddingRight"/>
        <assertEmpty actual="getPaddingRight" actualType="variable" message="Text field has text: $getPaddingRight" stepKey="assertPaddingRight"/>
        <grabValueFrom selector="{{AdvancedForm.advancedPaddingLeft}}" stepKey="getPaddingLeft"/>
        <assertEmpty actual="getPaddingLeft" actualType="variable" message="Text field has text: $getPaddingLeft" stepKey="assertPaddingLeft"/>
        <grabValueFrom selector="{{AdvancedForm.advancedPaddingBottom}}" stepKey="getPaddingBottom"/>
        <assertEmpty actual="getPaddingBottom" actualType="variable" message="Text field has text: $getPaddingBottom" stepKey="assertPaddingBottom"/>
        <actionGroup ref="closeEditPanelSettings" stepKey="closeEditPanelSettings"/>
        <!-- Validate Style On Stage -->
        <comment userInput="Validate Style On Stage" stepKey="CommentValidateStage"/>
        <waitForElementVisible selector="{{ButtonBackendSection.default('1')}}" stepKey="waitForStyle"/>
    </test>
    <test name="ButtonsValidateAdvancedConfigurationDefaultValues">
        <annotations>
            <features value="Pagebuilder: Buttons"/>
            <stories value="MAGETWO-83415: Bluefoot Content Blocks and Containers Advanced Configuration settings"/>
            <title value="Buttons - Validate Advanced Configuration Default Values"/>
            <description value="Validate the default values for every attribute in the Advanced Configuration form and on Stage for Buttons."/>
            <severity value="CRITICAL"/>
            <testCaseId value="MAGETWO-89418"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-buttons"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="EnabledWYSIWYG" stepKey="enableWYSIWYG"/>
            <actionGroup ref="enablePageBuilderSetting" stepKey="enablePageBuilderSetting"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="DisabledWYSIWYG" stepKey="disableWYSIWYG"/>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragButtonsOntoStage">
            <argument name="contentBlockType" value="PageBuilderButtonsContentBlock"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage1">
            <argument name="contentBlockType" value="PageBuilderButtonsContentBlock"/>
        </actionGroup>
        <actionGroup ref="expandConfigurationSection" stepKey="expandConfigurationSection"/>
        <!-- Validate Default Values -->
        <comment userInput="Validate Default Values" stepKey="CommentValidateDefaultValues"/>
        <actionGroup ref="seeOptionIsSelectedSlideOutProperty" stepKey="validateAlignment">
            <argument name="property" value="PageBuilderAdvancedAlignmentPropertyDefault"/>
        </actionGroup>
        <actionGroup ref="seeOptionIsSelectedSlideOutProperty" stepKey="validateBorder">
            <argument name="property" value="PageBuilderAdvancedBorderPropertyNone"/>
        </actionGroup>
        <grabValueFrom selector="{{PageBuilderColumnSection.panelFieldControl(PageBuilderAdvancedBorderColorDefaultProperty.section, PageBuilderAdvancedBorderColorDefaultProperty.fieldName)}}" stepKey="getBorderColor"/>
        <assertEmpty actual="getBorderColor" actualType="variable" message="Text field has text: $getBorderColor" stepKey="assertBorderColor"/>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="validateBorderWidth">
            <argument name="property" value="PageBuilderAdvancedBorderWidthPropertyDefault"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="validateBorderRadius">
            <argument name="property" value="PageBuilderAdvancedBorderRadiusDefaultProperty"/>
        </actionGroup>
        <grabValueFrom selector="{{PageBuilderColumnSection.panelFieldControl(PageBuilderAdvancedCssClassesDefaultProperty.section, PageBuilderAdvancedCssClassesDefaultProperty.fieldName)}}" stepKey="getCssClasses"/>
        <assertEmpty actual="getCssClasses" actualType="variable" message="Text field was not empty. Had text: $getCssClasses" stepKey="assertCssClasses"/>
        <actionGroup ref="seeInMarginFieldsSlideOutPanel" stepKey="validateMargins">
            <argument name="property" value="PageBuilderMarginsPropertyDefault"/>
        </actionGroup>
        <actionGroup ref="seeInPaddingFieldsSlideOutPanel" stepKey="validatePadding">
            <argument name="property" value="PageBuilderPaddingPropertyButtons"/>
        </actionGroup>
        <actionGroup ref="closeEditPanelSettings" stepKey="closeEditPanelSettings2"/>
        <!-- Validate Style On Stage -->
        <comment userInput="Validate Style On Stage" stepKey="CommentValidateStage"/>
        <!--commented due bug MAGETWO-91061-->
        <!--<waitForElementVisible selector="{{ButtonsBackendSection.default('1', PageBuilderAdvancedBorderPropertyNone.value, PageBuilderAdvancedBorderRadiusDefaultProperty.value, PageBuilderMarginsPropertyDefault.value, PageBuilderPaddingPropertyButtons.value)}}" stepKey="waitForStyle"/>-->
    </test>
    <test name="ButtonHaveFields">
        <annotations>
            <features value="Pagebuilder: Buttons"/>
            <stories value="MAGETWO-86971: Add new button to Buttons from Stage and Button Configuration"/>
            <title value="Check if buttons and button have the required fields"/>
            <description value="Check if buttons and button have the required fields"/>
            <severity value="CRITICAL"/>
            <testCaseId value="MAGETWO-87235"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-buttons"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="EnabledWYSIWYG" stepKey="enableWYSIWYG"/>
            <actionGroup ref="enablePageBuilderSetting" stepKey="enablePageBuilderSetting"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="DisabledWYSIWYG" stepKey="disableWYSIWYG"/>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle1">
            <argument name="contentBlockType" value="PageBuilderButtonsContentBlock"/>
        </actionGroup>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragButtonsOntoStage">
            <argument name="contentBlockType" value="PageBuilderButtonsContentBlock"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanelSmallByIndex" stepKey="openEditMenuOnStage1">
            <argument name="contentBlockType" value="PageBuilderButtonItemContentBlock"/>
            <argument name="contentBlockIndex" value="PageBuilderButtonIndex1"/>
        </actionGroup>
        <actionGroup ref="validateSlideOutPanelField" stepKey="seeButtonTextProperty">
            <argument name="property" value="PageBuilderButtonItemTextProperty"/>
        </actionGroup>
        <actionGroup ref="validateSlideOutPanelField" stepKey="seeButtonLinkProperty">
            <argument name="property" value="PageBuilderButtonItemLinkProperty"/>
        </actionGroup>
        <actionGroup ref="validateSlideOutPanelField" stepKey="seeButtonTypePrimaryProperty">
            <argument name="property" value="PageBuilderButtonItemTypePrimaryProperty"/>
        </actionGroup>
        <seeElement selector="//label[text()='Open in new tab']" stepKey="seeOpenNewTabCheckBox" />
        <actionGroup ref="saveEditPanelSettings" stepKey="saveButtonEditPanelSettings"/>
    </test>
    <test name="ButtonsCanBeEditedInline">
        <annotations>
            <features value="Pagebuilder: Buttons"/>
            <stories value="MAGETWO-87988: Editing text inputs from the Stage"/>
            <title value="Ability to edit button inline on the stage"/>
            <description value="A user should be able to edit a button inline on the stage"/>
            <severity value="CRITICAL"/>
            <testCaseId value="MAGETWO-89563"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-buttons"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="EnabledWYSIWYG" stepKey="enableWYSIWYG"/>
            <actionGroup ref="enablePageBuilderSetting" stepKey="enablePageBuilderSetting"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="DisabledWYSIWYG" stepKey="disableWYSIWYG"/>
            <amOnPage url="admin/admin/auth/logout" stepKey="amOnLogoutPage"/>
            <waitForPageLoad stepKey="waitForAdminLoginPageLoad"/>
        </after>
        <!-- Add button -->
        <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle1">
            <argument name="contentBlockType" value="PageBuilderButtonsContentBlock"/>
        </actionGroup>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragButtonsOntoStage">
            <argument name="contentBlockType" value="PageBuilderButtonsContentBlock"/>
        </actionGroup>
        <!-- Verify on stage and admin panel -->
        <seeElementInDOM selector="{{ButtonsBackendSection.editableButtonItemElement(PageBuilderButtonItemTypePrimaryProperty.value)}}" stepKey="seeButtonIsEditable"/>
        <pressKey selector="{{ButtonsBackendSection.editableButtonItemElement(PageBuilderButtonItemTypePrimaryProperty.value)}}" userInput="{{PageBuilderButtonItemTextProperty2.value}}" stepKey="enterButtonText"/>
        <actionGroup ref="openPageBuilderEditPanelSmallByIndex" stepKey="openEditMenuOnStage4">
            <argument name="contentBlockType" value="PageBuilderButtonItemContentBlock"/>
            <argument name="contentBlockIndex" value="PageBuilderButtonIndex1"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="seeButtonItemTextProperty">
            <argument name="property" value="PageBuilderButtonItemTextProperty2"/>
        </actionGroup>
        <!-- Verify in storefront -->
        <actionGroup ref="closeEditPanelSettings" stepKey="closeEditPanelSettings2"/>
        <actionGroup ref="saveAndContinueEditCmsPage" stepKey="saveAndContinueEditCmsPage"/>
        <see userInput="{{PageBuilderPageTitle.pageName}}" selector="{{CmsNewPagePageActionsSection.cmsPageTitle}}" stepKey="assertTitleSavedCmsPage2"/>
        <amOnPage url="buttons{{PageBuilderPageTitle.pageName}}" stepKey="amOnPageBuilderPage"/>
        <waitForPageLoad stepKey="waitForStoreFrontPageLoad"/>
        <seeElement selector="{{ButtonsFrontendSection.buttonItemText(PageBuilderButtonItemTypePrimaryProperty.value, PageBuilderButtonItemTextProperty2.value)}}" stepKey="seeButtonTextOnStorefront"/>
    </test>

    <test name="ButtonsNoMoreOldAddButtonButton">
        <annotations>
            <features value="Pagebuilder: Buttons"/>
            <stories value="MAGETWO-83922: Buttons"/>
            <title value="Make sure the old add button button is gone"/>
            <description value="On button group hover the old add button button should be gone"/>
            <severity value="CRITICAL"/>
            <testCaseId value="MAGETWO-90800"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-buttons"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="EnabledWYSIWYG" stepKey="enableWYSIWYG"/>
            <actionGroup ref="enablePageBuilderSetting" stepKey="enablePageBuilderSetting"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <waitForPageLoad stepKey="waitForGridReload"/>
            <actionGroup ref="DisabledWYSIWYG" stepKey="disableWYSIWYG"/>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <!-- Add button -->
        <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle1">
            <argument name="contentBlockType" value="PageBuilderButtonsContentBlock"/>
        </actionGroup>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragButtonsOntoStage">
            <argument name="contentBlockType" value="PageBuilderButtonsContentBlock"/>
        </actionGroup>
        <waitForElementVisible time="10" selector="{{PageBuilderActionsSection.contentBlockInStage(PageBuilderRowContentBlock.role)}}" stepKey="waitForContentBlockInStageVisible" />
        <moveMouseOver selector="{{PageBuilderActionsSection.contentBlockInStage(PageBuilderButtonsContentBlock.role)}}" stepKey="onMouseOverButtonsContentBlockStage1"/>
        <dontSeeElement selector="{{ButtonsBackendSection.oldAddNewButtonItem}}" stepKey="dontSeeOldAddButton"/>
        <seeElement selector="{{ButtonsBackendSection.emptyButtonItemElement(PageBuilderButtonItemTypePrimaryProperty.value)}}" stepKey="seeEmptyButton"/>
    </test>
</tests>
