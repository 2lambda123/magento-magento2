<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:noNamespaceSchemaLocation="../../../../../../vendor/magento/magento2-functional-testing-framework/src/Magento/FunctionalTestingFramework/Test/etc/testSchema.xsd">
    <cest name="AdminPageBuilderBannerCest">
        <annotations>
            <features value="PageBuilder CMS"/>
            <stories value="PageBuilder Banner Configuration"/>
            <group value="pagebuilderBanner"/>
            <env value="chrome"/>
            <env value="firefox"/>
            <env value="phantomjs"/>
        </annotations>
        <before>
            <loginAsAdmin stepKey="loginAsAdmin"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <amOnPage url="admin/admin/auth/logout" stepKey="amOnLogoutPage"/>
            <waitForPageLoad stepKey="waitForAdminLoginPageLoad"/>
        </after>
        <test name="CanAddBanner">
            <annotations>
                <title value="Add an banner content block into stage"/>
                <description value="A user should be able to add an banner with fields filled into a row."/>
                <severity value="CRITICAL"/>
                <testCaseId value="MAGETWO-84673"/>
                <group value="pagebuilder"/>
            </annotations>
            <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle1">
                <argument name="contentBlockType" value="PageBuilderBannerContentBlock"/>
            </actionGroup>
            <click selector="{{PageBuilderActionsSection.mediaGroup}}" stepKey="clickMediaGroup"/>
            <actionGroup ref="dragContentBlockToStage" stepKey="dragBannerIntoStage">
                <argument name="contentBlockType" value="PageBuilderBannerContentBlock"/>
            </actionGroup>
            <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage">
                <argument name="contentBlockType" value="PageBuilderBannerContentBlock"/>
            </actionGroup>
            <actionGroup ref="attachFileSlideOutPropertyGeneral" stepKey="attachImageFile">
                <argument name="property" value="PageBuilderBannerImageProperty"/>
            </actionGroup>
            <actionGroup ref="attachFileSlideOutPropertyGeneral" stepKey="attachMobileImageFile">
                <argument name="property" value="PageBuilderBannerMobileImageProperty"/>
            </actionGroup>
            <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterBannerButtonText">
                <argument name="property" value="PageBuilderBannerButtonTextProperty"/>
            </actionGroup>
            <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterBannerLinkUrl">
                <argument name="property" value="PageBuilderBannerLinkUrlProperty"/>
            </actionGroup>
            <actionGroup ref="clickSlideOutPanelFieldGeneral" stepKey="openLinkInNewWindow">
                <argument name="property" value="PageBuilderBannerNewTabProperty"/>
            </actionGroup>
            <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings"/>
            <actionGroup ref="saveAndContinueEditCmsPage" stepKey="saveAndContinueEditCmsPage"/>
            <see userInput="{{PageBuilderPageTitle.pageName}}" selector="{{CmsPageSection.cmsPageTitle}}" stepKey="assertTitleSavedCmsPage"/>
        </test>
        <test name="CanRemoveBanner">
            <annotations>
                <title value="Remove banner content block from stage"/>
                <description value="A user should be able to remove banner block from a row."/>
                <severity value="CRITICAL"/>
                <testCaseId value="MAGETWO-84895"/>
                <group value="pagebuilder"/>
            </annotations>
            <click selector="{{PageBuilderActionsSection.mediaGroup}}" stepKey="clickMediaGroup"/>
            <actionGroup ref="dragContentBlockToStage" stepKey="dragContentBlockToStage">
                <argument name="contentBlockType" value="PageBuilderBannerContentBlock"/>
            </actionGroup>
            <actionGroup ref="removeContentBlockFromStage" stepKey="removeContentBlockFromStage">
                <argument name="contentBlockType" value="PageBuilderBannerContentBlock"/>
            </actionGroup>
            <dontSeeElement selector="{{PageBuilderActionsSection.contentBlockInStage(PageBuilderBannerContentBlock.role)}}" stepKey="dontSeeContentBlockInStage"/>
        </test>
        <test name="BannerDoesNotNavigate">
            <annotations>
                <title value="Banner does not navigate on click"/>
                <description value="A user should be to click on the banner in preview and not have it navigate to another page."/>
                <severity value="CRITICAL"/>
                <testCaseId value="MAGETWO-86838"/>
                <group value="pagebuilder"/>
            </annotations>
            <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle1">
                <argument name="contentBlockType" value="PageBuilderBannerContentBlock"/>
            </actionGroup>
            <click selector="{{PageBuilderActionsSection.mediaGroup}}" stepKey="clickMediaGroup"/>
            <actionGroup ref="dragContentBlockToStage" stepKey="dragBannerIntoStage">
                <argument name="contentBlockType" value="PageBuilderBannerContentBlock"/>
            </actionGroup>
            <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage">
                <argument name="contentBlockType" value="PageBuilderBannerContentBlock"/>
            </actionGroup>
            <actionGroup ref="attachFileSlideOutPropertyGeneral" stepKey="attachImageFile">
                <argument name="property" value="PageBuilderBannerImageProperty"/>
            </actionGroup>
            <actionGroup ref="attachFileSlideOutPropertyGeneral" stepKey="attachMobileImageFile">
                <argument name="property" value="PageBuilderBannerMobileImageProperty"/>
            </actionGroup>
            <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterBannerButtonText">
                <argument name="property" value="PageBuilderBannerButtonTextProperty"/>
            </actionGroup>
            <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterBannerLinkUrl">
                <argument name="property" value="PageBuilderBannerLinkUrlProperty"/>
            </actionGroup>
            <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings"/>
            <dontSeeElement selector="{{BannerOnBackend.linkUrl(PageBuilderBannerLinkUrlProperty.value)}}" stepKey="dontSeeLinkUrl"/>
        </test>
        <test name="BannerHasAdvancedFormSection">
            <annotations>
                <title value="Banner has Advanced form section"/>
                <description value="A user should be able to configure advanced settings for banner"/>
                <severity value="CRITICAL"/>
                <group value="pagebuilder"/>
            </annotations>
            <click selector="{{PageBuilderActionsSection.mediaGroup}}" stepKey="clickMediaGroup"/>
            <actionGroup ref="dragContentBlockToStage" stepKey="dragBannerIntoStage">
                <argument name="contentBlockType" value="PageBuilderBannerContentBlock"/>
            </actionGroup>
            <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage">
                <argument name="contentBlockType" value="PageBuilderBannerContentBlock"/>
            </actionGroup>
            <waitForElementVisible time="3" selector="{{AdvancedForm.advancedSectionName}}" stepKey="waitForAdvancedForm"/>
            <seeElement selector="{{AdvancedForm.advancedSectionName}}" stepKey="seeAdvancedFormSection"/>
            <click selector="{{AdvancedForm.advancedSectionName}}" stepKey="clickAdvancedFormSection"/>
            <actionGroup ref="validateSlideOutPanelField" stepKey="seeAdvancedCssClassesProperty">
                <argument name="property" value="PageBuilderAdvancedCssClassesProperty"/>
            </actionGroup>
            <actionGroup ref="validateSlideOutPanelField" stepKey="seeAdvancedCssClassesProperty">
                <argument name="property" value="PageBuilderAdvancedCssClassesProperty"/>
            </actionGroup>
            <actionGroup ref="validateSlideOutPanelField" stepKey="seeAdvancedAlignmentProperty">
                <argument name="property" value="PageBuilderAdvancedAlignmentProperty"/>
            </actionGroup>
            <actionGroup ref="validateSlideOutPanelField" stepKey="seeAdvancedMarginsAndPaddingProperty">
                <argument name="property" value="PageBuilderAdvancedMarginsAndPaddingProperty"/>
            </actionGroup>
        </test>
        <test name="BannerHasRequired">
            <annotations>
                <title value="Banner requires all required fields in edit form"/>
                <description value="A user needs to fill all required fields in banner edit form"/>
                <severity value="CRITICAL"/>
                <group value="pagebuilder"/>
            </annotations>
            <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle1">
                <argument name="contentBlockType" value="PageBuilderBannerContentBlock"/>
            </actionGroup>
            <click selector="{{PageBuilderActionsSection.mediaGroup}}" stepKey="clickMediaGroup"/>
            <actionGroup ref="dragContentBlockToStage" stepKey="dragBannerIntoStage">
                <argument name="contentBlockType" value="PageBuilderBannerContentBlock"/>
            </actionGroup>
            <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage">
                <argument name="contentBlockType" value="PageBuilderBannerContentBlock"/>
            </actionGroup>
            <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings"/>

        </test>
        <test name="BannerHasDefaults">
            <annotations>
                <title value="Banner has the correct default values in edit form"/>
                <description value="A user should see the correct default values when edit button is clicked for banner"/>
                <severity value="CRITICAL"/>
                <group value="pagebuilder"/>
            </annotations>
        </test>
        <test name="BannerCanPreviewAdmin">
            <annotations>
                <title value="Banner is previewable in admin"/>
                <description value="A user should be able to preview content in admin for banner"/>
                <severity value="CRITICAL"/>
                <group value="pagebuilder"/>
            </annotations>
            <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle1">
                <argument name="contentBlockType" value="PageBuilderBannerContentBlock"/>
            </actionGroup>
            <click selector="{{PageBuilderActionsSection.mediaGroup}}" stepKey="clickMediaGroup"/>
            <actionGroup ref="dragContentBlockToStage" stepKey="dragBannerIntoStage">
                <argument name="contentBlockType" value="PageBuilderBannerContentBlock"/>
            </actionGroup>
            <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage">
                <argument name="contentBlockType" value="PageBuilderBannerContentBlock"/>
            </actionGroup>
            <actionGroup ref="attachFileSlideOutPropertyGeneral" stepKey="attachImageFile">
                <argument name="property" value="PageBuilderBannerImageProperty"/>
            </actionGroup>
            <actionGroup ref="attachFileSlideOutPropertyGeneral" stepKey="attachMobileImageFile">
                <argument name="property" value="PageBuilderBannerMobileImageProperty"/>
            </actionGroup>
            <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterBannerButtonText">
                <argument name="property" value="PageBuilderBannerButtonTextProperty"/>
            </actionGroup>
            <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterBannerLinkUrl">
                <argument name="property" value="PageBuilderBannerLinkUrlProperty"/>
            </actionGroup>
            <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings"/>
            <actionGroup ref="saveAndContinueEditCmsPage" stepKey="saveAndContinueEditCmsPage"/>
            <see userInput="{{PageBuilderPageTitle.pageName}}" selector="{{CmsPageSection.cmsPageTitle}}" stepKey="assertTitleSavedCmsPage"/>
            <click selector="{{CmsNewPagePageContentSection.header}}" stepKey="clickExpandContent"/>
            <seeElement selector="{{BannerOnBackend.imageDisplay}}" stepKey="seeMainImageDisplayed"/>
            <seeElement selector="{{BannerOnBackend.imageSource(_ENV.MAGENTO_BASE_URL,PageBuilderBannerImageProperty.path,PageBuilderBannerImageProperty.fileType)}}" stepKey="seeMainImageSource"/>
            <seeElementInDOM selector="{{BannerOnBackend.mobileImageSource(_ENV.MAGENTO_BASE_URL,PageBuilderBannerMobileImageProperty.path,PageBuilderBannerMobileImageProperty.fileType)}}" stepKey="seeMobileImageInDom"/>
        </test>
        <test name="BannerCanPreviewFrontend">
            <annotations>
                <title value="Banner is rendered correctly in frontend"/>
                <description value="A user should be able to see content rendered correctly on frontend for banner"/>
                <severity value="CRITICAL"/>
                <group value="pagebuilder"/>
            </annotations>
        <!--<seeElement selector="{{BannerOnFrontend.imageDisplay}}" stepKey="seeMainImageDisplayed"/>-->
        <!--<seeElement selector="{{ImageOnFrontend.imageSource(_ENV.MAGENTO_BASE_URL,PageBuilderImagePropertyJpg.path,PageBuilderImagePropertyJpg.fileType)}}" stepKey="seeMainImageSource"/>-->
        <!--<seeElementInDOM selector="{{ImageOnFrontend.mobileImageSource(_ENV.MAGENTO_BASE_URL,PageBuilderMobileImagePropertyGif.path,PageBuilderMobileImagePropertyGif.fileType)}}" stepKey="seeMobileImageInDom"/>-->
        <!--<see userInput="{{PageBuilderBannerButtonTextProperty.value}}" selector="{{BannerOnFrontend.buttonText}}" stepKey="seeButtonTextDisplayed"/>-->
        <!--<seeElementInDOM selector="{{BannerOnFrontend.linkUrl(PageBuilderBannerLinkUrlProperty.value)}}" stepKey="seeLinkUrlInDom"/>-->
        <!--<seeElementInDOM selector="{{BannerOnFrontend.openInNewTab}}" stepKey="verifyLinkOpensNewTab"/>-->
        </test>
        <test name="BannerHasButtonStyled">
            <annotations>
                <title value="Banner has 'Edit Button Text' button styled correctly (Luna) in admin and frontend (Base)"/>
                <description value="A user should be able to see 'Edit Button Text' button styled correctly for banner"/>
                <severity value="CRITICAL"/>
                <group value="pagebuilder"/>
            </annotations>
            <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle1">
                <argument name="contentBlockType" value="PageBuilderBannerContentBlock"/>
            </actionGroup>
            <click selector="{{PageBuilderActionsSection.mediaGroup}}" stepKey="clickMediaGroup"/>
            <actionGroup ref="dragContentBlockToStage" stepKey="dragBannerIntoStage">
                <argument name="contentBlockType" value="PageBuilderBannerContentBlock"/>
            </actionGroup>
            <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage">
                <argument name="contentBlockType" value="PageBuilderBannerContentBlock"/>
            </actionGroup>
            <actionGroup ref="attachFileSlideOutPropertyGeneral" stepKey="attachImageFile">
                <argument name="property" value="PageBuilderBannerImageProperty"/>
            </actionGroup>
            <actionGroup ref="attachFileSlideOutPropertyGeneral" stepKey="attachMobileImageFile">
                <argument name="property" value="PageBuilderBannerMobileImageProperty"/>
            </actionGroup>
            <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterBannerButtonText">
                <argument name="property" value="PageBuilderBannerButtonTextProperty"/>
            </actionGroup>
            <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterBannerLinkUrl">
                <argument name="property" value="PageBuilderBannerLinkUrlProperty"/>
            </actionGroup>
            <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings"/>
            <seeElement selector="{{BannerOnBackend.editButtonLuma}}" stepKey="buttonStyled"/>
        </test>
        <test name="BannerTextCannotEdit">
            <annotations>
                <title value="Banner has Banner Text that cannot be edit in admin preview and frontend"/>
                <description value="A user should not able to edit Banner Text on admin and frontend for banner"/>
                <severity value="CRITICAL"/>
                <group value="pagebuilder"/>
            </annotations>
        </test>
    </cest>
</config>
