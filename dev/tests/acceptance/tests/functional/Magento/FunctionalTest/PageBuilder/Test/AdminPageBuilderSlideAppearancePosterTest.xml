<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="../../../../../../vendor/magento/magento2-functional-testing-framework/src/Magento/FunctionalTestingFramework/Test/etc/testSchema.xsd">
    <test name="SlideAppearanceSectionDefaults">
        <annotations>
            <features value="Pagebuilder: Slider"/>
            <stories value="MAGETWO-75774: Bluefoot Slide Configuration (without 1 appearance)"/>
            <title value="Slide Configuration Settings: Appearance section defaults"/>
            <description value="New slide has default values on Appearance section"/>
            <severity value="CRITICAL"/>
            <testCaseId value="MAGETWO-88737"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-slider"/>
            <group value="pagebuilder-sliderPoster"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="EnabledWYSIWYG" stepKey="enableWYSIWYG"/>
            <actionGroup ref="enablePageBuilderSetting" stepKey="turnOnPageBuilder" after="enableWYSIWYG"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="DisabledWYSIWYG" stepKey="disableWYSIWYG"/>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle">
            <argument name="contentBlockType" value="PageBuilderSliderContentBlock"/>
        </actionGroup>
        <click selector="{{PageBuilderActionsSection.mediaGroup}}" stepKey="clickMediaGroup"/>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragSliderOntoStage">
            <argument name="contentBlockType" value="PageBuilderSliderContentBlock"/>
        </actionGroup>
        <waitForLoadingMaskToDisappear stepKey="waitForAnimation" />
        <waitForElementVisible stepKey="wait1" selector="{{PageBuilderActionsSection.editFormTitle}}" time="10"/>
        <see userInput="Edit Slide" selector="{{PageBuilderActionsSection.editFormTitle}}" stepKey="editSlideOpensOnAddingSlider"/>
        <waitForPageLoad stepKey="waitForPageBuilderPageLoad"/>
        <!-- Verify default and available values on Appearance section of Add Slide form -->
        <comment userInput="Appearance defaults to Poster" stepKey="AC0" />
        <seeInField selector="{{PageBuilderColumnSection.panelFieldControl(PageBuilderSlideAppearanceDefaultProperty.section, PageBuilderSlideAppearanceDefaultProperty.fieldName)}}" userInput="Poster" stepKey="seePosterAppearanceDefault"/>
        <comment userInput="User sees 4 appearances displayed: Poster, Collage Left, Collage Center, Collage Right." stepKey="AC1" />
        <grabMultiple selector="{{PageBuilderColumnSection.panelFieldOptions(PageBuilderSlideAppearanceDefaultProperty.section, PageBuilderSlideAppearanceDefaultProperty.fieldName)}}" userInput="innerText" stepKey="grabAppearanceDropdownValues"/>
        <assertEquals stepKey="assertAppearanceDropdown" message="Verify 4 appearances displayed">
            <expectedResult type="array">[Poster, Collage Left, Collage Center, Collage Right]</expectedResult>
            <actualResult type="variable">grabAppearanceDropdownValues</actualResult>
        </assertEquals>
        <comment userInput="User doesn't see Advanced Content appearance" stepKey="AC2"/>
        <assertNotContains stepKey="assertNotContains" message="Advanced Content appearance not present">
            <expectedResult type="string">Advanced Content</expectedResult>
            <actualResult type="variable">grabAppearanceDropdownValues</actualResult>
        </assertNotContains>
        <comment userInput="User sees Title: input defaults to empty" stepKey="AC3"/>
        <grabValueFrom selector="{{PageBuilderActionsSection.panelFieldControl(PageBuilderSlideItemTitle1.section, PageBuilderSlideItemTitle1.fieldName)}}" stepKey="grabTitleDefaultValue"/>
        <assertEmpty stepKey="assertEmptyTitle" message="Title has text: $grabTitleDefaultValue">
            <actualResult type="variable">grabTitleDefaultValue</actualResult>
        </assertEmpty>
        <comment userInput="Minimum Height: input defaults to 300" stepKey="AC4"/>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="seeMinHeightDefault300">
            <argument name="property" value="PageBuilderSlideMinHeight"/>
        </actionGroup>
    </test>
    <test name="SlideBackgroundSectionDefaults">
        <annotations>
            <features value="Pagebuilder: Slider"/>
            <stories value="MAGETWO-75774: Bluefoot Slide Configuration (without 1 appearance)"/>
            <title value="Slide Configuration Settings: Background section defaults"/>
            <description value="New slide has default values on Background section"/>
            <severity value="CRITICAL"/>
            <testCaseId value="MAGETWO-88731"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-slider"/>
            <group value="pagebuilder-sliderPoster"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="EnabledWYSIWYG" stepKey="enableWYSIWYG"/>
            <actionGroup ref="enablePageBuilderSetting" stepKey="turnOnPageBuilder" after="enableWYSIWYG"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="DisabledWYSIWYG" stepKey="disableWYSIWYG"/>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle">
            <argument name="contentBlockType" value="PageBuilderSliderContentBlock"/>
        </actionGroup>
        <click selector="{{PageBuilderActionsSection.mediaGroup}}" stepKey="clickMediaGroup"/>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragSliderOntoStage">
            <argument name="contentBlockType" value="PageBuilderSliderContentBlock"/>
        </actionGroup>
        <waitForLoadingMaskToDisappear stepKey="waitForAnimation" />
        <waitForElementVisible stepKey="wait1" selector="{{PageBuilderActionsSection.editFormTitle}}" time="10"/>
        <see userInput="Edit Slide" selector="{{PageBuilderActionsSection.editFormTitle}}" stepKey="editSlideOpensOnAddingSlider"/>
        <waitForPageLoad stepKey="waitForPageBuilderPageLoad"/>
        <!-- Verify default and available values on background section of Add Slide form -->
        <comment userInput="Background Color: input defaults to empty" stepKey="AC0" />
        <grabValueFrom selector="{{PageBuilderActionsSection.panelFieldControl(PageBuilderSlideBackgroundColorDefault.section, PageBuilderSlideBackgroundColorDefault.fieldName)}}" stepKey="grabColorDefaultValue"/>
        <assertEmpty stepKey="assertEmptyBackgroundColor" message="Background Color has text: $grabColorDefaultValue">
            <actualResult type="variable">grabColorDefaultValue</actualResult>
        </assertEmpty>
        <comment userInput="Background Image: mediaUpload defaults to empty" stepKey="AC1"/>
        <seeElement selector="{{ImageOnConfigurationPanel.placeholderContent('Background Image')}}" stepKey="seeImagePlaceHolderOnImage1"/>
        <comment userInput="Background Position: dropdown defaults to Top Aligned" stepKey="AC2"/>
        <seeInField selector="{{PageBuilderColumnSection.panelFieldControl(PageBuilderBackgroundPositionDefault.section, PageBuilderBackgroundPositionDefault.fieldName)}}" userInput="{{PageBuilderBackgroundPositionDefault.value}}" stepKey="seeTopAlignedPositionDefault"/>
        <comment userInput="Background Position: available values Top Aligned, Centered, Bottom Aligned" stepKey="AC3"/>
        <grabMultiple selector="{{PageBuilderColumnSection.panelFieldOptions(PageBuilderBackgroundPositionDefault.section, PageBuilderBackgroundPositionDefault.fieldName)}}" userInput="innerText" stepKey="grabBackgroundPositionDropdownValues"/>
        <assertEquals stepKey="assertPositionDropdown" message="Background Position in dropdown">
            <expectedResult type="array">[Top Aligned, Centered, Bottom Aligned]</expectedResult>
            <actualResult type="variable">grabBackgroundPositionDropdownValues</actualResult>
        </assertEquals>
        <comment userInput="Background Size: dropdown defaults to Cover" stepKey="AC4"/>
        <seeInField selector="{{PageBuilderColumnSection.panelFieldControl(PageBuilderSlideBackgroundSizeDefault.section, PageBuilderSlideBackgroundSizeDefault.fieldName)}}" userInput="{{PageBuilderSlideBackgroundSizeDefault.value}}" stepKey="seeBackgroundSizeDefault"/>
        <comment userInput="Background Size: available values Auto, Cover, Contain" stepKey="AC5"/>
        <grabMultiple selector="{{PageBuilderColumnSection.panelFieldOptions(PageBuilderSlideBackgroundSizeDefault.section, PageBuilderSlideBackgroundSizeDefault.fieldName)}}" userInput="innerText" stepKey="grabBackgroundSizeDropdownValues"/>
        <assertEquals stepKey="assertBackgroundSizeDropdown" message="Background sizes in dropdown">
            <expectedResult type="array">[Auto, Cover, Contain]</expectedResult>
            <actualResult type="variable">grabBackgroundSizeDropdownValues</actualResult>
        </assertEquals>
        <comment userInput="Background Repeat: switch defaults to No" stepKey="AC6"/>
        <actionGroup ref="seeOptionIsNotCheckedSlideOutProperty" stepKey="seeBackgroundRepeatPropertyDefaultNo">
            <argument name="property" value="PageBuilderBackgroundRepeatOff"/>
        </actionGroup>
        <comment userInput="Background Attachment: dropdown defaults to Scroll" stepKey="AC7"/>
        <seeInField selector="{{PageBuilderColumnSection.panelFieldControl(PageBuilderSlideBackgroundAttachmentDefault.section, PageBuilderSlideBackgroundAttachmentDefault.fieldName)}}" userInput="Scroll" stepKey="seeBackgroundAttachmentDefault"/>
        <comment userInput="Background Attachment: available values Scroll, Fixed" stepKey="AC8"/>
        <grabMultiple selector="{{PageBuilderColumnSection.panelFieldOptions(PageBuilderSlideBackgroundAttachmentDefault.section, PageBuilderSlideBackgroundAttachmentDefault.fieldName)}}" userInput="innerText" stepKey="grabBackgroundAttachmentDropdownValues"/>
        <assertEquals stepKey="assertBackgroundAttachmentDropdown" message="Background sizes in dropdown">
            <expectedResult type="array">[Scroll, Fixed]</expectedResult>
            <actualResult type="variable">grabBackgroundAttachmentDropdownValues</actualResult>
        </assertEquals>
    </test>
    <test name="SlideContentSectionDefaults">
        <annotations>
            <features value="Pagebuilder: Slider"/>
            <stories value="MAGETWO-75774: Bluefoot Slide Configuration (without 1 appearance)"/>
            <title value="Slide Configuration Settings: Content section defaults"/>
            <description value="New slide has default values on Content section"/>
            <severity value="CRITICAL"/>
            <testCaseId value="MAGETWO-88737"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-slider"/>
            <group value="pagebuilder-sliderPoster"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="EnabledWYSIWYG" stepKey="enableWYSIWYG"/>
            <actionGroup ref="enablePageBuilderSetting" stepKey="turnOnPageBuilder" after="enableWYSIWYG"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="DisabledWYSIWYG" stepKey="disableWYSIWYG"/>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle">
            <argument name="contentBlockType" value="PageBuilderSliderContentBlock"/>
        </actionGroup>
        <click selector="{{PageBuilderActionsSection.mediaGroup}}" stepKey="clickMediaGroup"/>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragSliderOntoStage">
            <argument name="contentBlockType" value="PageBuilderSliderContentBlock"/>
        </actionGroup>
        <waitForElementVisible stepKey="wait1" selector="{{PageBuilderActionsSection.editFormTitle}}" time="10"/>
        <see userInput="Edit Slide" selector="{{PageBuilderActionsSection.editFormTitle}}" stepKey="editSlideOpensOnAddingSlider"/>
        <waitForPageLoad stepKey="waitForPageBuilderPageLoad"/>
        <!-- Verify default and available values on content section of Add Slide form -->
        <comment userInput="Slide Content: WYSIWYG defaults to empty" stepKey="AC0" />
        <!-- unable to get content of WYSIWYG out to variable MQE-818 -->
        <comment userInput="Show Button: dropdown defaults to Never Show " stepKey="AC1"/>
        <seeInField selector="{{PageBuilderColumnSection.panelFieldControl(PageBuilderSlideShowButtonDefaultProperty.section, PageBuilderSlideShowButtonDefaultProperty.fieldName)}}" userInput="Never Show" stepKey="seeShowButtonDefault"/>
        <comment userInput="Show Button: available values Always, On Hover, Never Show" stepKey="AC2"/>
        <grabMultiple selector="{{PageBuilderColumnSection.panelFieldOptions(PageBuilderSlideShowButtonDefaultProperty.section, PageBuilderSlideShowButtonDefaultProperty.fieldName)}}" userInput="innerText" stepKey="grabShowButtonDropdownValues"/>
        <assertEquals stepKey="assertShowButtonDropdown" message="Verify Button Types dropdown options">
            <expectedResult type="array">[Always, On Hover, Never Show]</expectedResult>
            <actualResult type="variable">grabShowButtonDropdownValues</actualResult>
        </assertEquals>
        <comment userInput="Button Text: input defaults to empty." stepKey="AC3"/>
        <grabValueFrom selector="{{PageBuilderActionsSection.panelFieldControl(PageBuilderSlideItemButtonTextDefault.section, PageBuilderSlideItemButtonTextDefault.fieldName)}}" stepKey="grabButtonTextValue"/>
        <assertEmpty stepKey="assertEmptyButtonText" message="Button text has text: $grabButtonTextValue">
            <actualResult type="variable">grabButtonTextValue</actualResult>
        </assertEmpty>
        <comment userInput="Button Text: Field is disabled by default due to Never show default on Show Button" stepKey="AC4"/>
        <actionGroup ref="validateSlideOutPanelFieldIsDisabled" stepKey="validateButtonTextAttributeDisabled">
            <argument name="property" value="PageBuilderSlideButtonTextDefaultProperty"/>
        </actionGroup>
        <comment userInput="Button Type: dropdown defaults to Primary" stepKey="AC5"/>
        <seeInField selector="{{PageBuilderColumnSection.panelFieldControl(PageBuilderSlideButtonTypeDefaultProperty.section, PageBuilderSlideButtonTypeDefaultProperty.fieldName)}}" userInput="{{PageBuilderSlideButtonTypeDefaultProperty.value}}" stepKey="seeButtonTypeDefault"/>
        <comment userInput="Button Type: available values Primary, Secondary, Link. " stepKey="AC6"/>
        <grabMultiple selector="{{PageBuilderColumnSection.panelFieldOptions(PageBuilderSlideButtonTypeDefaultProperty.section, PageBuilderSlideButtonTypeDefaultProperty.fieldName)}}" userInput="innerText" stepKey="grabButtonTypeDropdownValues"/>
        <assertEquals stepKey="assertButtonTypeDropdown" message="Verify Button Types dropdown options">
            <expectedResult type="array">[Primary, Secondary, Link]</expectedResult>
            <actualResult type="variable">grabButtonTypeDropdownValues</actualResult>
        </assertEquals>
        <comment userInput="Button Type: Field is disabled by default due to Never show default on Show Button" stepKey="AC7"/>
        <actionGroup ref="validateSlideOutPanelFieldIsDisabled" stepKey="validateButtonTypeDisabled">
            <argument name="property" value="PageBuilderSlideButtonTypeDefaultProperty"/>
        </actionGroup>
        <comment userInput="Show Overlay: dropdown defaults to Never Show " stepKey="AC8"/>
        <seeInField selector="{{PageBuilderColumnSection.panelFieldControl(PageBuilderSlideShowOverlayDefaultProperty.section, PageBuilderSlideShowOverlayDefaultProperty.fieldName)}}" userInput="{{PageBuilderSlideShowOverlayDefaultProperty.value}}" stepKey="seeShowOverlayDefault"/>
        <comment userInput="Show Overlay: available values Always, On hover, Never show" stepKey="AC9"/>
        <grabMultiple selector="{{PageBuilderColumnSection.panelFieldOptions(PageBuilderSlideShowOverlayDefaultProperty.section, PageBuilderSlideShowOverlayDefaultProperty.fieldName)}}" userInput="innerText" stepKey="grabShowOverlayDropdownValues"/>
        <assertEquals stepKey="assertShowOverlayDropdown" message="Show Overlay in dropdown">
            <expectedResult type="array">[Always, On Hover, Never Show]</expectedResult>
            <actualResult type="variable">grabShowOverlayDropdownValues</actualResult>
        </assertEquals>
        <comment userInput="Overlay Color: input defaults to white." stepKey="AC10"/>
        <grabValueFrom selector="{{PageBuilderActionsSection.panelFieldControl(PageBuilderSlideOverlayColorDefaultProperty.section, PageBuilderSlideOverlayColorDefaultProperty.fieldName)}}" stepKey="grabOverlayColorValue"/>
        <assertEquals stepKey="assertOverlayColorValue" message="Overlay Color has text: $grabOverlayColorValue">
            <expectedResult type="string">#FFFFFF</expectedResult>
            <actualResult type="variable">grabOverlayColorValue</actualResult>
        </assertEquals>
        <comment userInput="Overlay Color: Field is disabled by default due to Never Show default on Show Overlay." stepKey="AC11"/>
        <actionGroup ref="validateSlideOutPanelFieldIsDisabled" stepKey="validateOverlayColorDisabled">
            <argument name="property" value="PageBuilderSlideOverlayColorDefaultProperty"/>
        </actionGroup>
    </test>
    <test name="SlidePosterButtonNeverShow">
        <annotations>
            <features value="Pagebuilder: Slider"/>
            <stories value="MAGETWO-75774: Bluefoot Slide Configuration (without 1 appearance)"/>
            <title value="Check poster button never show state works"/>
            <description value="Check poster button never show state works"/>
            <severity value="CRITICAL"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-slider"/>
            <group value="pagebuilder-sliderPoster"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="EnabledWYSIWYG" stepKey="enableWYSIWYG"/>
            <actionGroup ref="enablePageBuilderSetting" stepKey="turnOnPageBuilder" after="enableWYSIWYG"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="DisabledWYSIWYG" stepKey="disableWYSIWYG"/>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle1">
            <argument name="contentBlockType" value="PageBuilderSliderContentBlock"/>
        </actionGroup>
        <click selector="{{PageBuilderActionsSection.mediaGroup}}" stepKey="clickMediaGroup"/>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragSliderIntoStage">
            <argument name="contentBlockType" value="PageBuilderSliderContentBlock"/>
        </actionGroup>
        <!--Edit First Slide opens when add Slider to stage-->
        <waitForLoadingMaskToDisappear stepKey="waitForAnimation" />
        <waitForElementVisible stepKey="wait1" selector="{{PageBuilderActionsSection.editFormTitle}}" time="10"/>
        <waitForElementVisible time="3" selector="{{AdvancedForm.sectionName}}" stepKey="waitForAdvancedForm"/>

        <actionGroup ref="attachFileSlideOutProperty" stepKey="attachPageBuilderFile">
            <argument name="property" value="PageBuilderSlideBackgroundImageProperty"/>
        </actionGroup>
        <actionGroup ref="attachFileSlideOutProperty" stepKey="attachPageBuilderMobileFile">
            <argument name="property" value="PageBuilderSlideMobileImageProperty"/>
        </actionGroup>
        <!-- fill button fields -->
        <actionGroup ref="selectSlideOutPanelField" stepKey="selectShowButtonAlwaysProperty">
            <argument name="property" value="PageBuilderSlideShowButtonAlwaysProperty"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterSlideButtonText">
            <argument name="property" value="PageBuilderSlideButtonTextProperty"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterSlideLinkUrl">
            <argument name="property" value="PageBuilderSlideLinkExternalUrlProperty"/>
        </actionGroup>
        <waitForElement time="2" selector="{{PageBuilderActionsSection.panelFieldControl(PageBuilderSlideNewTabProperty.section, PageBuilderSlideNewTabProperty.fieldName)}}" stepKey="waitForElementVisible" />
        <click selector="{{PageBuilderActionsSection.panelFieldControlSwitch(PageBuilderSlideNewTabProperty.fieldName)}}" stepKey="clickProperty"/>
        <wait time="1" stepKey="waitForClick5"/>
        <actionGroup ref="selectSlideOutPanelField" stepKey="selectButtonTypeSecondaryProperty">
            <argument name="property" value="PageBuilderSlideButtonTypeSecondaryProperty"/>
        </actionGroup>
        <!-- disable button fields and check values -->
        <actionGroup ref="selectSlideOutPanelField" stepKey="selectShowButtonDefaultProperty">
            <argument name="property" value="PageBuilderSlideShowButtonDefaultProperty"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="seeButtonTextOnForm">
            <argument name="property" value="PageBuilderSlideButtonTextProperty"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="seeButtonLinkOnForm">
            <argument name="property" value="PageBuilderSlideLinkExternalUrlProperty"/>
        </actionGroup>
        <actionGroup ref="seeOptionIsCheckedSlideOutProperty" stepKey="seeNewTabOnForm">
            <argument name="property" value="PageBuilderSlideNewTabProperty"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="seeSlideButtonTypeProperty">
            <argument name="property" value="PageBuilderSlideButtonTypeSecondaryProperty"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings"/>
        <actionGroup ref="saveAndContinueEditCmsPage" stepKey="saveAndContinueEditCmsPage"/>
        <waitForPageLoad stepKey="waitForCmsPageToSave"/>
        <see userInput="{{PageBuilderPageTitle.pageName}}" selector="{{CmsNewPagePageActionsSection.cmsPageTitle}}" stepKey="assertTitleSavedCmsPage"/>
        <click selector="{{CmsNewPagePageContentSection.header}}" stepKey="clickContentTab" />
        <!-- Validate settings on backend -->
        <waitForElementVisible time="2" selector="{{SlideOnBackend.poster}}" stepKey="waitForPosterInAdmin" />
        <seeElement selector="{{SlideOnBackend.poster}}" stepKey="verifyPosterInAdmin"/>
        <dontSeeElement selector="{{SlideOnBackend.buttonText(PageBuilderSlideButtonTextProperty.value)}}" stepKey="verifyDontSeeButtonTextBackend"/>
        <moveMouseOver selector="{{SlideOnBackend.poster}}" stepKey="moveMouseOverBackendSlide"/>
        <dontSeeElement selector="{{SlideOnBackend.buttonText(PageBuilderSlideButtonTextProperty.value)}}" stepKey="verifyDontSeeOnHoverButtonTextBackend"/>
        <!-- check button fields -->
        <actionGroup ref="openSlideOptions" stepKey="openEditMenuForSlideOnStage"/>
        <dontSeeInField selector="{{PageBuilderColumnSection.panelFieldControl(PageBuilderSlideButtonTextProperty.section, PageBuilderSlideButtonTextProperty.fieldName)}}" userInput="{{PageBuilderSlideButtonTextProperty.value}}" stepKey="dontSeeInFieldProperty"/>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="seeButtonLinkOnForm2">
            <argument name="property" value="PageBuilderSlideLinkExternalUrlProperty"/>
        </actionGroup>
        <actionGroup ref="seeOptionIsCheckedSlideOutProperty" stepKey="seeNewTabOnForm2">
            <argument name="property" value="PageBuilderSlideNewTabProperty"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="seeSlideButtonTypeProperty2">
            <argument name="property" value="PageBuilderSlideButtonTypePrimaryProperty"/>
        </actionGroup>
        <!-- Validate settings on frontend -->
        <comment userInput="Validate slide on frontend" stepKey="goToFrontend"/>
        <amOnPage url="Slider{{PageBuilderPageTitle.pageName}}" stepKey="amOnPageBuilderPage"/>
        <seeElement selector="{{SlideOnFrontend.slide}}" stepKey="verifySlideInFrontend"/>
        <waitForElementVisible time="3" selector="{{SlideOnFrontend.poster}}" stepKey="waitForPosterInFrontend"/>
        <seeElement selector="{{SlideOnFrontend.poster}}" stepKey="verifyPosterInFrontend"/>
        <dontSeeElement selector="{{SlideOnFrontend.posterMobileWithMobileImage}}" stepKey="dontSeePosterInFrontendMobileWithMobileImage"/>
        <dontSeeElement selector="{{SlideOnFrontend.buttonText(PageBuilderSlideButtonTextProperty.value)}}" stepKey="verifyDontSeeOnHoverOverlayOnFrontend"/>
        <moveMouseOver selector="{{SlideOnFrontend.slide}}" stepKey="moveMouseOverFrontendSlide"/>
        <dontSeeElement selector="{{SlideOnFrontend.buttonText(PageBuilderSlideButtonTextProperty.value)}}" stepKey="verifyStillDontSeeOnHoverOverlayOnFrontend"/>
        <!-- Validate settings on frontend mobile -->
        <resizeWindow width="767" height="1000" stepKey="resizeWindowToMobile"/>
        <waitForElementVisible time="3" selector="{{SlideOnFrontend.posterMobileWithMobileImage}}" stepKey="waitForPosterInFrontendMobileWithMobileImage"/>
        <seeElement selector="{{SlideOnFrontend.posterMobileWithMobileImage}}" stepKey="verifyPosterInFrontendMobileWithMobileImage"/>
        <dontSeeElement selector="{{SlideOnFrontend.poster}}" stepKey="dontSeePosterInFrontend"/>
        <reloadPage stepKey="reloadPage"/>
        <dontSeeElement selector="{{SlideOnFrontend.buttonText(PageBuilderSlideButtonTextProperty.value)}}" stepKey="verifyDontSeeOnHoverOverlayOnFrontendMobile"/>
        <moveMouseOver selector="{{SlideOnFrontend.slide}}" stepKey="moveMouseOverFrontendSlideMobile"/>
        <dontSeeElement selector="{{SlideOnFrontend.buttonText(PageBuilderSlideButtonTextProperty.value)}}" stepKey="verifyStillDontSeeOnHoverOverlayOnFrontendMobile"/>
        <resizeWindow width="1000" height="1000" stepKey="resizeWindowToDesktop"/>
        <waitForElementVisible time="3" selector="{{SlideOnFrontend.poster}}" stepKey="waitForPosterInFrontend2"/>
        <seeElement selector="{{SlideOnFrontend.poster}}" stepKey="verifyPosterInFrontend2"/>
        <dontSeeElement selector="{{SlideOnFrontend.posterMobileWithMobileImage}}" stepKey="dontSeePosterInFrontendMobileWithMobileImage2"/>
    </test>
    <test name="SlidePosterButtonOnHover">
        <annotations>
            <features value="Pagebuilder: Slider"/>
            <stories value="MAGETWO-75774: Bluefoot Slide Configuration (without 1 appearance)"/>
            <title value="Check poster button on hover state works"/>
            <description value="Check poster button on hover state works"/>
            <severity value="CRITICAL"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-slider"/>
            <group value="pagebuilder-sliderPoster"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="EnabledWYSIWYG" stepKey="enableWYSIWYG"/>
            <actionGroup ref="enablePageBuilderSetting" stepKey="turnOnPageBuilder" after="enableWYSIWYG"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="DisabledWYSIWYG" stepKey="disableWYSIWYG"/>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle1">
            <argument name="contentBlockType" value="PageBuilderSliderContentBlock"/>
        </actionGroup>
        <click selector="{{PageBuilderActionsSection.mediaGroup}}" stepKey="clickMediaGroup"/>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragSliderIntoStage">
            <argument name="contentBlockType" value="PageBuilderSliderContentBlock"/>
        </actionGroup>
        <!--Edit First Slide opens when add Slider to stage-->
        <waitForLoadingMaskToDisappear stepKey="waitForAnimation" />
        <waitForElementVisible stepKey="wait1" selector="{{PageBuilderActionsSection.editFormTitle}}" time="10"/>
        <waitForElementVisible time="3" selector="{{AdvancedForm.sectionName}}" stepKey="waitForAdvancedForm"/>
        <actionGroup ref="attachFileSlideOutProperty" stepKey="attachPageBuilderFile">
            <argument name="property" value="PageBuilderSlideBackgroundImageProperty"/>
        </actionGroup>
        <actionGroup ref="attachFileSlideOutProperty" stepKey="attachPageBuilderMobileFile">
            <argument name="property" value="PageBuilderSlideMobileImageProperty"/>
        </actionGroup>
        <actionGroup ref="selectSlideOutPanelField" stepKey="selectSlideButtonShowOnHover">
            <argument name="property" value="PageBuilderSlideShowButtonOnHoverProperty"/>
        </actionGroup>
        <actionGroup ref="validateSlideOutPanelFieldIsNotDisabled" stepKey="seeSlideButtonTextPropertyIsDisabled">
            <argument name="property" value="PageBuilderSlideButtonTextProperty"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterSlideButtonText">
            <argument name="property" value="PageBuilderSlideButtonTextProperty"/>
        </actionGroup>
        <actionGroup ref="validateSlideOutPanelFieldIsNotDisabled" stepKey="seeSlideLinkUrlPropertyIsDisabled">
            <argument name="property" value="PageBuilderSlideLinkExternalUrlProperty"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterSlideLinkUrl">
            <argument name="property" value="PageBuilderSlideLinkExternalUrlProperty"/>
        </actionGroup>
        <actionGroup ref="validateSlideOutPanelFieldIsNotDisabled" stepKey="seeSlideNewTabDefaultIsDisabled">
            <argument name="property" value="PageBuilderSlideNewTabDefaultProperty"/>
        </actionGroup>
        <actionGroup ref="validateSlideOutPanelFieldIsNotDisabled" stepKey="seeSlideButtonTypePropertyIsDisabled">
            <argument name="property" value="PageBuilderSlideButtonTypePrimaryProperty"/>
        </actionGroup>
        <actionGroup ref="selectSlideOutPanelField" stepKey="enterSlideShowOverlayAlways">
            <argument name="property" value="PageBuilderSlideShowContentOverlayAlwaysProperty"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterSlideOverlayColor">
            <argument name="property" value="PageBuilderSlideContentOverlayColorProperty"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterSlideOverlayTransparency">
            <argument name="property" value="PageBuilderSlideOverlayTransparencyProperty"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings"/>
        <!-- Validate settings on backend -->
        <waitForElementVisible time="2" selector="{{SlideOnBackend.poster}}" stepKey="waitForPosterInAdmin" />
        <seeElement selector="{{SlideOnBackend.poster}}" stepKey="verifyPosterInAdmin"/>
        <dontSeeElement selector="{{SlideOnBackend.buttonText(PageBuilderSlideButtonTextProperty.value)}}" stepKey="verifyDontSeeOnHoverButtonText"/>
        <seeElement selector="{{SlideOnBackend.posterOverlay}}" stepKey="verifySeeOverlayBackend"/>
        <moveMouseOver selector="{{SlideOnBackend.poster}}" stepKey="moveMouseOverBackendSlide"/>
        <waitForElement time="2" selector="{{SlideOnBackend.buttonText(PageBuilderSlideButtonTextProperty.value)}}" stepKey="waitForOnHoverButtonTextBackend" />
        <seeElement selector="{{SlideOnBackend.buttonText(PageBuilderSlideButtonTextProperty.value)}}" stepKey="verifySeeOnHoverButtonTextBackend"/>
        <actionGroup ref="saveAndContinueEditCmsPage" stepKey="saveAndContinueEditCmsPage"/>
        <!-- Validate settings on frontend -->
        <comment userInput="Validate slide on frontend" stepKey="goToFrontend"/>
        <see userInput="{{PageBuilderPageTitle.pageName}}" selector="{{CmsNewPagePageActionsSection.cmsPageTitle}}" stepKey="assertTitleSavedCmsPage"/>
        <amOnPage url="Slider{{PageBuilderPageTitle.pageName}}" stepKey="amOnPageBuilderPage"/>
        <seeElement selector="{{SlideOnFrontend.slide}}" stepKey="verifySlideInFrontend"/>
        <waitForElementVisible time="3" selector="{{SlideOnFrontend.poster}}" stepKey="waitForPosterInFrontend"/>
        <seeElement selector="{{SlideOnFrontend.poster}}" stepKey="verifyPosterInFrontend"/>
        <dontSeeElement selector="{{SlideOnFrontend.posterMobileWithMobileImage}}" stepKey="dontSeePosterInFrontendMobileWithMobileImage"/>
        <dontSeeElement selector="{{SlideOnFrontend.buttonText(PageBuilderSlideButtonTextProperty.value)}}" stepKey="verifyDontSeeOnHoverButtonTextOnFrontend"/>
        <seeElement selector="{{SlideOnFrontend.posterOverlay}}" stepKey="verifySeeOverlayOnFrontend"/>
        <moveMouseOver selector="{{SlideOnFrontend.slide}}" stepKey="moveMouseOverFrontendSlide"/>
        <waitForElement time="2" selector="{{SlideOnFrontend.buttonText(PageBuilderSlideButtonTextProperty.value)}}" stepKey="waitForOnHoverButtonTextFrontend" />
        <seeElement selector="{{SlideOnFrontend.buttonText(PageBuilderSlideButtonTextProperty.value)}}" stepKey="verifySeeOnHoverButtonTextOnFrontend"/>
        <!-- Validate settings on frontend mobile -->
        <resizeWindow width="767" height="1000" stepKey="resizeWindowToMobile"/>
        <waitForElementVisible time="3" selector="{{SlideOnFrontend.posterMobileWithMobileImage}}" stepKey="waitForPosterInFrontendMobileWithMobileImage"/>
        <seeElement selector="{{SlideOnFrontend.posterMobileWithMobileImage}}" stepKey="verifyPosterInFrontendMobileWithMobileImage"/>
        <dontSeeElement selector="{{SlideOnFrontend.poster}}" stepKey="dontSeePosterInFrontend"/>
        <reloadPage stepKey="reloadPage"/>
        <dontSeeElement selector="{{SlideOnFrontend.buttonText(PageBuilderSlideButtonTextProperty.value)}}" stepKey="verifyDontSeeOnHoverButtonTextOnFrontendMobile"/>
        <moveMouseOver selector="{{SlideOnFrontend.slide}}" stepKey="moveMouseOverFrontendSlideMobile"/>
        <waitForElement time="2" selector="{{SlideOnFrontend.buttonText(PageBuilderSlideButtonTextProperty.value)}}" stepKey="waitForOnHoverButtonTextFrontendMobile" />
        <seeElement selector="{{SlideOnFrontend.buttonText(PageBuilderSlideButtonTextProperty.value)}}" stepKey="verifySeeOnHoverButtonTextOnFrontendMobile"/>
        <resizeWindow width="1000" height="1000" stepKey="resizeWindowToDesktop"/>
        <waitForElementVisible time="3" selector="{{SlideOnFrontend.poster}}" stepKey="waitForPosterInFrontend2"/>
        <seeElement selector="{{SlideOnFrontend.poster}}" stepKey="verifyPosterInFrontend2"/>
        <dontSeeElement selector="{{SlideOnFrontend.posterMobileWithMobileImage}}" stepKey="dontSeePosterInFrontendMobileWithMobileImage2"/>
    </test>
    <test name="SlidePosterOverlayNeverShow">
        <annotations>
            <features value="Pagebuilder: Slider"/>
            <stories value="MAGETWO-75774: Bluefoot Slide Configuration (without 1 appearance)"/>
            <title value="Check poster overlay never show state works"/>
            <description value="Check poster overlay never show state works"/>
            <severity value="CRITICAL"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-slider"/>
            <group value="pagebuilder-sliderPoster"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="EnabledWYSIWYG" stepKey="enableWYSIWYG"/>
            <actionGroup ref="enablePageBuilderSetting" stepKey="turnOnPageBuilder" after="enableWYSIWYG"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="DisabledWYSIWYG" stepKey="disableWYSIWYG"/>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle1">
            <argument name="contentBlockType" value="PageBuilderSliderContentBlock"/>
        </actionGroup>
        <click selector="{{PageBuilderActionsSection.mediaGroup}}" stepKey="clickMediaGroup"/>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragSliderIntoStage">
            <argument name="contentBlockType" value="PageBuilderSliderContentBlock"/>
        </actionGroup>
        <!--Edit First Slide opens when add Slider to stage-->
        <waitForLoadingMaskToDisappear stepKey="waitForAnimation" />
        <waitForElementVisible stepKey="wait1" selector="{{PageBuilderActionsSection.editFormTitle}}" time="10"/>
        <waitForElementVisible time="3" selector="{{AdvancedForm.sectionName}}" stepKey="waitForAdvancedForm"/>
        <actionGroup ref="attachFileSlideOutProperty" stepKey="attachPageBuilderFile">
            <argument name="property" value="PageBuilderSlideBackgroundImageProperty"/>
        </actionGroup>
        <actionGroup ref="attachFileSlideOutProperty" stepKey="attachPageBuilderMobileFile">
            <argument name="property" value="PageBuilderSlideMobileImageProperty"/>
        </actionGroup>
        <actionGroup ref="selectSlideOutPanelField" stepKey="selectShowButtonAlwaysProperty">
            <argument name="property" value="PageBuilderSlideShowButtonAlwaysProperty"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterSlideButtonText">
            <argument name="property" value="PageBuilderSlideButtonTextProperty"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterSlideLinkUrl">
            <argument name="property" value="PageBuilderSlideLinkExternalUrlProperty"/>
        </actionGroup>
        <actionGroup ref="selectSlideOutPanelField" stepKey="enterSlideOverlayNeverShow">
            <argument name="property" value="PageBuilderSlideShowContentOverlayNeverShowProperty"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings"/>
        <!-- Validate settings on backend -->
        <waitForElementVisible time="2" selector="{{SlideOnBackend.poster}}" stepKey="waitForPosterInAdmin" />
        <seeElement selector="{{SlideOnBackend.poster}}" stepKey="verifyPosterInAdmin"/>
        <dontSeeElement selector="{{SlideOnBackend.posterOverlay}}" stepKey="verifyDontSeeOverlayBackend"/>
        <moveMouseOver selector="{{SlideOnBackend.poster}}" stepKey="moveMouseOverBackendSlide"/>
        <dontSeeElement selector="{{SlideOnBackend.posterOverlay}}" stepKey="verifyStillDontSeeOverlayBackend"/>
        <actionGroup ref="saveAndContinueEditCmsPage" stepKey="saveAndContinueEditCmsPage"/>
        <!-- Validate settings on frontend -->
        <comment userInput="Validate slide on frontend" stepKey="goToFrontend"/>
        <see userInput="{{PageBuilderPageTitle.pageName}}" selector="{{CmsNewPagePageActionsSection.cmsPageTitle}}" stepKey="assertTitleSavedCmsPage"/>
        <amOnPage url="Slider{{PageBuilderPageTitle.pageName}}" stepKey="amOnPageBuilderPage"/>
        <seeElement selector="{{SlideOnFrontend.slide}}" stepKey="verifySlideInFrontend"/>
        <waitForElementVisible time="3" selector="{{SlideOnFrontend.poster}}" stepKey="waitForPosterInFrontend5"/>
        <seeElement selector="{{SlideOnFrontend.poster}}" stepKey="verifyPosterInFrontend"/>
        <dontSeeElement selector="{{SlideOnFrontend.posterMobileWithMobileImage}}" stepKey="dontSeePosterInFrontendMobileWithMobileImage"/>
        <dontSeeElement selector="{{SlideOnFrontend.posterOverlay}}" stepKey="verifyDontSeeOnHoverOverlayOnFrontend"/>
        <moveMouseOver selector="{{SlideOnFrontend.slide}}" stepKey="moveMouseOverFrontendSlide"/>
        <dontSeeElement selector="{{SlideOnFrontend.posterOverlay}}" stepKey="verifyStillDontSeeOnHoverOverlayOnFrontend"/>
        <!-- Validate settings on frontend mobile -->
        <resizeWindow width="767" height="1000" stepKey="resizeWindowToMobile"/>
        <waitForElementVisible time="3" selector="{{SlideOnFrontend.posterMobileWithMobileImage}}" stepKey="waitForPosterInFrontendMobileWithMobileImage"/>
        <seeElement selector="{{SlideOnFrontend.posterMobileWithMobileImage}}" stepKey="verifyPosterInFrontendMobileWithMobileImage"/>
        <dontSeeElement selector="{{SlideOnFrontend.poster}}" stepKey="dontSeePosterInFrontend"/>
        <reloadPage stepKey="reloadPage"/>
        <dontSeeElement selector="{{SlideOnFrontend.posterOverlay}}" stepKey="verifyDontSeeOnHoverOverlayOnFrontendMobile"/>
        <moveMouseOver selector="{{SlideOnFrontend.slide}}" stepKey="moveMouseOverFrontendSlideMobile"/>
        <dontSeeElement selector="{{SlideOnFrontend.posterOverlay}}" stepKey="verifyStillDontSeeOnHoverOverlayOnFrontendMobile"/>
        <resizeWindow width="1000" height="1000" stepKey="resizeWindowToDesktop"/>
        <waitForElementVisible time="3" selector="{{SlideOnFrontend.poster}}" stepKey="waitForPosterInFrontend6"/>
        <seeElement selector="{{SlideOnFrontend.poster}}" stepKey="verifyPosterInFrontend2"/>
        <dontSeeElement selector="{{SlideOnFrontend.posterMobileWithMobileImage}}" stepKey="dontSeePosterInFrontendMobileWithMobileImage2"/>
    </test>
    <test name="SlidePosterOverlayOnHover">
        <annotations>
            <features value="Pagebuilder: Slider"/>
            <stories value="MAGETWO-75774: Bluefoot Slide Configuration (without 1 appearance)"/>
            <title value="Check poster overlay on hover state works"/>
            <description value="Check poster overlay on hover state works"/>
            <severity value="CRITICAL"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-slider"/>
            <group value="pagebuilder-sliderPoster"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="EnabledWYSIWYG" stepKey="enableWYSIWYG"/>
            <actionGroup ref="enablePageBuilderSetting" stepKey="turnOnPageBuilder" after="enableWYSIWYG"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="DisabledWYSIWYG" stepKey="disableWYSIWYG"/>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle1">
            <argument name="contentBlockType" value="PageBuilderSliderContentBlock"/>
        </actionGroup>
        <click selector="{{PageBuilderActionsSection.mediaGroup}}" stepKey="clickMediaGroup"/>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragSliderIntoStage">
            <argument name="contentBlockType" value="PageBuilderSliderContentBlock"/>
        </actionGroup>
        <!--Edit First Slide opens when add Slider to stage-->
        <waitForLoadingMaskToDisappear stepKey="waitForAnimation" />
        <waitForElementVisible stepKey="wait1" selector="{{PageBuilderActionsSection.editFormTitle}}" time="10"/>
        <waitForElementVisible time="3" selector="{{AdvancedForm.sectionName}}" stepKey="waitForAdvancedForm"/>
        <actionGroup ref="attachFileSlideOutProperty" stepKey="attachPageBuilderFile">
            <argument name="property" value="PageBuilderSlideBackgroundImageProperty"/>
        </actionGroup>
        <actionGroup ref="attachFileSlideOutProperty" stepKey="attachPageBuilderMobileFile">
            <argument name="property" value="PageBuilderSlideMobileImageProperty"/>
        </actionGroup>
        <actionGroup ref="selectSlideOutPanelField" stepKey="selectShowButtonAlwaysProperty">
            <argument name="property" value="PageBuilderSlideShowButtonAlwaysProperty"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterSlideButtonText">
            <argument name="property" value="PageBuilderSlideButtonTextProperty"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterSlideLinkUrl">
            <argument name="property" value="PageBuilderSlideLinkExternalUrlProperty"/>
        </actionGroup>
        <actionGroup ref="selectSlideOutPanelField" stepKey="enterSlideOverlayShowOnHover">
            <argument name="property" value="PageBuilderSlideShowContentOverlayOnHoverProperty"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterSlideOverlayColor">
            <argument name="property" value="PageBuilderSlideContentOverlayColorProperty"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterSlideOverlayTransparency">
            <argument name="property" value="PageBuilderSlideOverlayTransparencyProperty"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings"/>
        <!-- Validate settings on backend -->
        <waitForElementVisible time="2" selector="{{SlideOnBackend.poster}}" stepKey="waitForPosterInAdmin" />
        <seeElement selector="{{SlideOnBackend.poster}}" stepKey="verifyPosterInAdmin"/>
        <dontSeeElement selector="{{SlideOnBackend.posterOverlay}}" stepKey="verifyDontSeeOverlayBackend"/>
        <seeElement selector="{{SlideOnBackend.buttonText(PageBuilderSlideButtonTextProperty.value)}}" stepKey="verifySeeButtonTextBackend"/>
        <moveMouseOver selector="{{SlideOnBackend.poster}}" stepKey="moveMouseOverBackendSlide"/>
        <waitForElement time="2" selector="{{SlideOnBackend.posterOverlay}}" stepKey="waitForOnHoverOverlayBackend" />
        <seeElement selector="{{SlideOnBackend.posterOverlay}}" stepKey="verifySeeOnHoverOverlayBackend"/>
        <actionGroup ref="saveAndContinueEditCmsPage" stepKey="saveAndContinueEditCmsPage"/>
        <!-- Validate settings on frontend -->
        <comment userInput="Validate slide on frontend" stepKey="goToFrontend"/>
        <see userInput="{{PageBuilderPageTitle.pageName}}" selector="{{CmsNewPagePageActionsSection.cmsPageTitle}}" stepKey="assertTitleSavedCmsPage"/>
        <amOnPage url="Slider{{PageBuilderPageTitle.pageName}}" stepKey="amOnPageBuilderPage"/>
        <seeElement selector="{{SlideOnFrontend.slide}}" stepKey="verifySlideInFrontend"/>
        <waitForElementVisible time="3" selector="{{SlideOnFrontend.poster}}" stepKey="waitForPosterInFrontend3"/>
        <seeElement selector="{{SlideOnFrontend.poster}}" stepKey="verifyPosterInFrontend"/>
        <dontSeeElement selector="{{SlideOnFrontend.posterMobileWithMobileImage}}" stepKey="dontSeePosterInFrontendMobileWithMobileImage"/>
        <dontSeeElement selector="{{SlideOnFrontend.posterOverlay}}" stepKey="verifyDontSeeOnHoverOverlayOnFrontend"/>
        <seeElement selector="{{SlideOnFrontend.buttonText(PageBuilderSlideButtonTextProperty.value)}}" stepKey="verifySeeButtonTextFrontend"/>
        <moveMouseOver selector="{{SlideOnFrontend.slide}}" stepKey="moveMouseOverFrontendSlide"/>
        <waitForElement time="2" selector="{{SlideOnFrontend.posterOverlay}}" stepKey="waitForOnHoverOverlayOnFrontend"/>
        <seeElement selector="{{SlideOnFrontend.posterOverlay}}" stepKey="verifyseeOnHoverOverlayOnFrontend7"/>
        <!-- Validate settings on frontend mobile -->
        <resizeWindow width="767" height="1000" stepKey="resizeWindowToMobile"/>
        <waitForElementVisible time="3" selector="{{SlideOnFrontend.posterMobileWithMobileImage}}" stepKey="waitForPosterInFrontendMobileWithMobileImage"/>
        <seeElement selector="{{SlideOnFrontend.posterMobileWithMobileImage}}" stepKey="verifyPosterInFrontendMobileWithMobileImage"/>
        <dontSeeElement selector="{{SlideOnFrontend.poster}}" stepKey="dontSeePosterInFrontend"/>
        <reloadPage stepKey="reloadPage"/>
        <dontSeeElement selector="{{SlideOnFrontend.posterOverlay}}" stepKey="verifyDontSeeOnHoverOverlayOnFrontendMobile"/>
        <moveMouseOver selector="{{SlideOnFrontend.slide}}" stepKey="moveMouseOverFrontendSlideMobile"/>
        <waitForElement time="2" selector="{{SlideOnFrontend.posterOverlay}}" stepKey="waitForOnHoverOverlayOnFrontendMobile"/>
        <seeElement selector="{{SlideOnFrontend.posterOverlay}}" stepKey="verifySeeOnHoverOverlayOnFrontendMobile"/>
        <resizeWindow width="1000" height="1000" stepKey="resizeWindowToDesktop"/>
        <waitForElementVisible time="3" selector="{{SlideOnFrontend.poster}}" stepKey="waitForPosterInFrontend4"/>
        <seeElement selector="{{SlideOnFrontend.poster}}" stepKey="verifyPosterInFrontend2"/>
        <dontSeeElement selector="{{SlideOnFrontend.posterMobileWithMobileImage}}" stepKey="dontSeePosterInFrontendMobileWithMobileImage2"/>
    </test>
    <test name="SlidePosterOverlayAndButtonOnHover">
        <annotations>
            <features value="Pagebuilder: Slider"/>
            <stories value="MAGETWO-75774: Bluefoot Slide Configuration (without 1 appearance)"/>
            <title value="Check poster button on hover state works"/>
            <description value="Check poster button on hover state works"/>
            <severity value="CRITICAL"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-slider"/>
            <group value="pagebuilder-sliderPoster"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="EnabledWYSIWYG" stepKey="enableWYSIWYG"/>
            <actionGroup ref="enablePageBuilderSetting" stepKey="turnOnPageBuilder" after="enableWYSIWYG"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="DisabledWYSIWYG" stepKey="disableWYSIWYG"/>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle1">
            <argument name="contentBlockType" value="PageBuilderSliderContentBlock"/>
        </actionGroup>
        <click selector="{{PageBuilderActionsSection.mediaGroup}}" stepKey="clickMediaGroup"/>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragSliderIntoStage">
            <argument name="contentBlockType" value="PageBuilderSliderContentBlock"/>
        </actionGroup>
        <!--Edit First Slide opens when add Slider to stage-->
        <waitForLoadingMaskToDisappear stepKey="waitForAnimation" />
        <waitForElementVisible stepKey="wait1" selector="{{PageBuilderActionsSection.editFormTitle}}" time="10"/>
        <waitForElementVisible time="3" selector="{{AdvancedForm.sectionName}}" stepKey="waitForAdvancedForm"/>
        <actionGroup ref="attachFileSlideOutProperty" stepKey="attachPageBuilderFile">
            <argument name="property" value="PageBuilderSlideBackgroundImageProperty"/>
        </actionGroup>
        <actionGroup ref="attachFileSlideOutProperty" stepKey="attachPageBuilderMobileFile">
            <argument name="property" value="PageBuilderSlideMobileImageProperty"/>
        </actionGroup>
        <actionGroup ref="selectSlideOutPanelField" stepKey="selectSlideButtonShowOnHover">
            <argument name="property" value="PageBuilderSlideShowButtonOnHoverProperty"/>
        </actionGroup>
        <actionGroup ref="validateSlideOutPanelFieldIsNotDisabled" stepKey="seeSlideButtonTextPropertyIsDisabled">
            <argument name="property" value="PageBuilderSlideButtonTextProperty"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterSlideButtonText">
            <argument name="property" value="PageBuilderSlideButtonTextProperty"/>
        </actionGroup>
        <actionGroup ref="validateSlideOutPanelFieldIsNotDisabled" stepKey="seeSlideLinkUrlPropertyIsDisabled">
            <argument name="property" value="PageBuilderSlideLinkExternalUrlProperty"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterSlideLinkUrl">
            <argument name="property" value="PageBuilderSlideLinkExternalUrlProperty"/>
        </actionGroup>
        <actionGroup ref="validateSlideOutPanelFieldIsNotDisabled" stepKey="seeSlideNewTabDefaultIsDisabled">
            <argument name="property" value="PageBuilderSlideNewTabDefaultProperty"/>
        </actionGroup>
        <actionGroup ref="validateSlideOutPanelFieldIsNotDisabled" stepKey="seeSlideButtonTypePropertyIsDisabled">
            <argument name="property" value="PageBuilderSlideButtonTypePrimaryProperty"/>
        </actionGroup>
        <actionGroup ref="selectSlideOutPanelField" stepKey="enterSlideOverlayShowOnHover">
            <argument name="property" value="PageBuilderSlideShowContentOverlayOnHoverProperty"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterSlideOverlayColor">
            <argument name="property" value="PageBuilderSlideContentOverlayColorProperty"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterSlideOverlayTransparency">
            <argument name="property" value="PageBuilderSlideOverlayTransparencyProperty"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings"/>
        <!-- Validate settings on backend -->
        <waitForElementVisible time="2" selector="{{SlideOnBackend.poster}}" stepKey="waitForPosterInAdmin" />
        <seeElement selector="{{SlideOnBackend.poster}}" stepKey="verifyPosterInAdmin"/>
        <dontSeeElement selector="{{SlideOnBackend.posterOverlay}}" stepKey="verifyDontSeeOverlayBackend"/>
        <dontSeeElement selector="{{SlideOnBackend.buttonText(PageBuilderSlideButtonTextProperty.value)}}" stepKey="verifyDontSeeOnHoverButtonTextBackend"/>
        <moveMouseOver selector="{{SlideOnBackend.poster}}" stepKey="moveMouseOverBackendSlide"/>
        <waitForElement time="2" selector="{{SlideOnBackend.posterOverlay}}" stepKey="waitForOnHoverOverlayBackend" />
        <waitForElement time="2" selector="{{SlideOnBackend.buttonText(PageBuilderSlideButtonTextProperty.value)}}" stepKey="waitForOnHoverButtonTextBackend" />
        <seeElement selector="{{SlideOnBackend.posterOverlay}}" stepKey="verifySeeOnHoverOverlayBackend"/>
        <seeElement selector="{{SlideOnBackend.buttonText(PageBuilderSlideButtonTextProperty.value)}}" stepKey="verifySeeOnHoverButtonTextBackend"/>
        <actionGroup ref="saveAndContinueEditCmsPage" stepKey="saveAndContinueEditCmsPage"/>
        <!-- Validate settings on frontend -->
        <comment userInput="Validate slide on frontend" stepKey="goToFrontend"/>
        <see userInput="{{PageBuilderPageTitle.pageName}}" selector="{{CmsNewPagePageActionsSection.cmsPageTitle}}" stepKey="assertTitleSavedCmsPage"/>
        <amOnPage url="Slider{{PageBuilderPageTitle.pageName}}" stepKey="amOnPageBuilderPage"/>
        <seeElement selector="{{SlideOnFrontend.slide}}" stepKey="verifySlideInFrontend"/>
        <waitForElementVisible time="3" selector="{{SlideOnFrontend.poster}}" stepKey="waitForPosterInFrontend7"/>
        <seeElement selector="{{SlideOnFrontend.poster}}" stepKey="verifyPosterInFrontend"/>
        <dontSeeElement selector="{{SlideOnFrontend.posterMobileWithMobileImage}}" stepKey="dontSeePosterInFrontendMobileWithMobileImage"/>
        <dontSeeElement selector="{{SlideOnFrontend.posterOverlay}}" stepKey="verifyDontSeeOnHoverOverlayOnFrontend"/>
        <dontSeeElement selector="{{SlideOnFrontend.buttonText(PageBuilderSlideButtonTextProperty.value)}}" stepKey="verifyDontSeeOnHoverButtonTextFrontend"/>
        <moveMouseOver selector="{{SlideOnFrontend.slide}}" stepKey="moveMouseOverFrontendSlide"/>
        <waitForElement time="2" selector="{{SlideOnFrontend.posterOverlay}}" stepKey="waitForOnHoverOverlayFrontend" />
        <waitForElement time="2" selector="{{SlideOnFrontend.buttonText(PageBuilderSlideButtonTextProperty.value)}}" stepKey="waitForOnHoverButtonTextFrontend" />
        <seeElement selector="{{SlideOnFrontend.posterOverlay}}" stepKey="verifySeeOnHoverOverlayOnFrontend8"/>
        <seeElement selector="{{SlideOnFrontend.buttonText(PageBuilderSlideButtonTextProperty.value)}}" stepKey="verifySeeOnHoverButtonTextFrontend"/>
        <!-- Validate settings on frontend mobile -->
        <resizeWindow width="767" height="1000" stepKey="resizeWindowToMobile"/>
        <waitForElementVisible time="3" selector="{{SlideOnFrontend.posterMobileWithMobileImage}}" stepKey="waitForPosterInFrontendMobileWithMobileImage"/>
        <seeElement selector="{{SlideOnFrontend.posterMobileWithMobileImage}}" stepKey="verifyPosterInFrontendMobileWithMobileImage"/>
        <dontSeeElement selector="{{SlideOnFrontend.poster}}" stepKey="dontSeePosterInFrontend"/>
        <reloadPage stepKey="reloadPage"/>
        <dontSeeElement selector="{{SlideOnFrontend.posterOverlay}}" stepKey="verifyDontSeeOnHoverOverLayOnFrontendMobile"/>
        <dontSeeElement selector="{{SlideOnFrontend.buttonText(PageBuilderSlideButtonTextProperty.value)}}" stepKey="verifyDontSeeOnHoverButtonTextFrontendMobile"/>
        <moveMouseOver selector="{{SlideOnFrontend.slide}}" stepKey="moveMouseOverFrontendSlideMobile"/>
        <waitForElement time="2" selector="{{SlideOnFrontend.posterOverlay}}" stepKey="waitForOnHoverOverlayFrontendMobile" />
        <waitForElement time="2" selector="{{SlideOnFrontend.buttonText(PageBuilderSlideButtonTextProperty.value)}}" stepKey="waitForOnHoverButtonTextFrontendMobile" />
        <seeElement selector="{{SlideOnFrontend.posterOverlay}}" stepKey="verifySeeOnHoverOverlayOnFrontendMobile"/>
        <seeElement selector="{{SlideOnFrontend.buttonText(PageBuilderSlideButtonTextProperty.value)}}" stepKey="verifySeeOnHoverButtonTextFrontendMobile"/>
        <resizeWindow width="1000" height="1000" stepKey="resizeWindowToDesktop"/>
        <waitForElementVisible time="3" selector="{{SlideOnFrontend.poster}}" stepKey="waitForPosterInFrontend8"/>
        <seeElement selector="{{SlideOnFrontend.poster}}" stepKey="verifyPosterInFrontend2"/>
        <dontSeeElement selector="{{SlideOnFrontend.posterMobileWithMobileImage}}" stepKey="dontSeePosterInFrontendMobileWithMobileImage2"/>
    </test>
    <test name="SliderPosterButtonsCanBeEditedInline">
        <annotations>
            <features value="Pagebuilder: Slider"/>
            <stories value="MAGETWO-87988: Editing text inputs from the Stage"/>
            <title value="Ability to edit a poster slider button inline on the stage"/>
            <description value="A user should be able to edit a poster slider button inline on the stage"/>
            <severity value="CRITICAL"/>
            <testCaseId value="MAGETWO-89565"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-slider"/>
            <group value="pagebuilder-sliderPoster"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="EnabledWYSIWYG" stepKey="enableWYSIWYG"/>
            <actionGroup ref="enablePageBuilderSetting" stepKey="enablePageBuilderSetting"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="DisabledWYSIWYG" stepKey="disableWYSIWYG"/>
            <amOnPage url="admin/admin/auth/logout" stepKey="amOnLogoutPage"/>
            <waitForPageLoad stepKey="waitForAdminLoginPageLoad"/>
        </after>
        <!-- Add slider button -->
        <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle1">
            <argument name="contentBlockType" value="PageBuilderSliderContentBlock"/>
        </actionGroup>
        <waitForElementVisible selector="{{PageBuilderActionsSection.mediaGroup}}" stepKey="waitForMediaGroup" />
        <click selector="{{PageBuilderActionsSection.mediaGroup}}" stepKey="clickMediaGroup"/>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragSliderIntoStage">
            <argument name="contentBlockType" value="PageBuilderSliderContentBlock"/>
        </actionGroup>
        <actionGroup ref="selectSlideOutPanelField" stepKey="selectShowButtonAlwaysProperty">
            <argument name="property" value="PageBuilderSlideShowButtonAlwaysProperty"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings"/>
        <!-- Verify on stage and admin panel -->
        <seeElementInDOM selector="{{SlideOnBackend.editableButtonItemElement(PageBuilderButtonItemTypePrimaryProperty.value)}}" stepKey="seeButtonIsEditable"/>
        <click selector="{{SlideOnBackend.editableButtonItemElement(PageBuilderButtonItemTypePrimaryProperty.value)}}" stepKey="clickButtonToEdit"/>
        <pressKey selector="{{SlideOnBackend.editableButtonItemElement(PageBuilderButtonItemTypePrimaryProperty.value)}}" userInput="{{PageBuilderButtonItemTextProperty2.value}}" stepKey="enterButtonText"/>
        <actionGroup ref="openSlideOptions" stepKey="openEditMenuForSlideOnStage"/>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="seeButtonTextOnForm">
            <argument name="property" value="PageBuilderSlideButtonTextProperty2"/>
        </actionGroup>
        <!--Verify in storefront -->
        <actionGroup ref="closeEditPanelSettings" stepKey="closeEditPanelSettings"/>
        <actionGroup ref="saveAndContinueEditCmsPage" stepKey="saveAndContinueEditCmsPage"/>
        <see userInput="{{PageBuilderPageTitle.pageName}}" selector="{{CmsNewPagePageActionsSection.cmsPageTitle}}" stepKey="assertTitleSavedCmsPage2"/>
        <amOnPage url="slider{{PageBuilderPageTitle.pageName}}" stepKey="amOnPageBuilderPage"/>
        <waitForPageLoad stepKey="waitForStoreFrontPageLoad"/>
        <seeElement selector="{{SliderOnFrontend.buttonText(PageBuilderSlideButtonTextProperty2.value)}}" stepKey="seeButtonTextStorefront"/>
    </test>
</tests>
