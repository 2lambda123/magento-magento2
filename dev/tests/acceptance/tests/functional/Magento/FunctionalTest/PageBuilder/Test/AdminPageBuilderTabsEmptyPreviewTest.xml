<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="../../../../../../vendor/magento/magento2-functional-testing-framework/src/Magento/FunctionalTestingFramework/Test/etc/testSchema.xsd">
    <test name="EmptyTabsDefaultStateOnAdminPreviewAndStorefront">
        <annotations>
            <features value="[CMS] Bluefoot Tabs MAGETWO-83840"/>
            <stories value="Empty Tabs Admin Preview MAGETWO-87087"/>
            <title value="Empty Tabs Default State on Admin Preview and Storefront"/>
            <description value="As a Content Manager I want to see empty tab preview on the stage so that I see its position and can access settings"/>
            <severity value="CRITICAL"/>
            <testCaseId value="MAGETWO-90008"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-tabs"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="EnabledWYSIWYG" stepKey="enableWYSIWYG"/>
            <actionGroup ref="enablePageBuilderSetting" stepKey="turnOnPageBuilder" after="enableWYSIWYG"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="DisabledWYSIWYG" stepKey="disableWYSIWYG"/>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle">
            <argument name="contentBlockType" value="PageBuilderTabsContentBlock"/>
        </actionGroup>
        <!--Add Tabs to Stage -->
        <click selector="{{PageBuilderActionsSection.interactiveGroup}}" stepKey="clickInteractiveGroup"/>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragTabsIntoStage">
            <argument name="contentBlockType" value="PageBuilderTabsContentBlock"/>
        </actionGroup>
        <!-- Validate Tabs default state On Stage -->
        <comment userInput="User sees tabs displayed with 1st default tab item created by default" stepKey="AC1"/>
        <waitForElementVisible selector="{{TabOnStage.tabContent('1')}}" stepKey="waitForFirstTabContent"/>
        <waitForElementVisible selector="{{TabOnStage.tabHeader('1')}}" stepKey="waitForFirstTabHeader"/>

        <!--assert computed styles matching expected depends on MQE-818 -->
        <comment userInput="User sees tab preview takes 100% container width" stepKey="AC2"/>
        <executeJS function="window.getComputedStyle(document.querySelector('.pagebuilder-content-type.pagebuilder-tab.empty-container'),null).getPropertyValue('width')" stepKey="getDefaultTabWidth"/>

        <comment userInput="User sees tab preview min height to be 300 px" stepKey="AC3"/>
        <executeJS function="window.getComputedStyle(document.querySelector('.pagebuilder-content-type.pagebuilder-tab.empty-container'),null).getPropertyValue('min-height')" stepKey="getDefaultTabMinHeight"/>

        <comment userInput="User sees tabs border settings to be default as documented (defined by the theme style)" stepKey="AC4"/>
        <assertElementContainsAttribute selector="{{TabOnStage.tabContent('1')}}" attribute="style" expectedValue="padding: 40px; background-image: none; background-color: transparent; background-size: cover;" stepKey="assertTab1DefaultStyle"/>

        <comment userInput="User sees the first tab to be active and focused." stepKey="AC5"/>
        <assertElementContainsAttribute selector="{{TabOnStage.tabPanel('1')}}" attribute="aria-expanded" expectedValue="true" stepKey="assertTab1ContentFocused"/>
        <assertElementContainsAttribute selector="{{TabOnStage.tabPanel('1')}}" attribute="aria-hidden" expectedValue="false" stepKey="assertTab1ContentVisible"/>

        <comment userInput="Tab option panel displayed on top of the tab." stepKey="AC6"/>
        <waitForElementVisible selector="{{TabOnStage.tabOptionsByIndex('1')}}" stepKey="waitForTabOptionsPanel"/>
        <seeElement selector="{{TabOnStage.tabOptionsByIndex('1')}}" stepKey="seeTabOptionsPanel"/>

        <comment userInput="User doesn't see the Tabs option panel" stepKey="AC7"/>
        <dontSeeElement selector="{{TabsOnStage.tabsOptionsTitle}}" stepKey="dontSeeTabsOptionsAfterAddTabs"/>

        <comment userInput="Tab title has the default value Tab 1" stepKey="AC8"/>
        <waitForElementVisible selector="{{TabOnStage.tabHeader('1')}}" stepKey="seeTabHeader"/>
        <assertElementContainsAttribute selector="{{TabOnStage.tabHeader('1')}}" attribute="title" expectedValue="Tab 1" stepKey="assertInitialSlideTitleAdmin"/>

        <comment userInput="A placeholder indicates that content can be added inside the tab" stepKey="AC9"/>
        <see selector="{{TabOnStage.empty}}" userInput="Drag content blocks or columns here" stepKey="seeTabPlaceholder"/>

        <!-- Validate Default Values on Edit Tab for initial tab -->
        <waitForElementVisible selector="{{TabOnStage.tabOptionsEdit}}" stepKey="seeTabOptionsEdit"/>
        <click selector="{{TabOnStage.tabOptionsEdit}}" stepKey="clickEditContentBlock"/>

        <comment userInput="Tab has default value Tab 1 for Tab Name" stepKey="commentDefaultTabName"/>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="validateDefaultTabName">
            <argument name="property" value="PageBuilderTabName1Default"/>
        </actionGroup>
        <comment userInput="Tab has default value empty for Background Image" stepKey="commentDefaultBackgroundImage"/>
        <waitForElementVisible selector="{{UploadImageSection.PlaceholderContent('Background Image')}}" stepKey="seeImagePlaceHolderOnBackgroundImage"/>

        <comment userInput="Tab has default value empty for Background Mobile image" stepKey="commentDefaultBackgroundMobile"/>
        <waitForElementVisible selector="{{UploadImageSection.PlaceholderContent('Background Mobile Image')}}" stepKey="seeImagePlaceHolderOnBackgroundMobileImage"/>

        <comment userInput="Tab has default value empty for Background Color" stepKey="commentDefaultBackgroundColor"/>
        <grabValueFrom selector="{{PageBuilderColumnSection.panelFieldControl(PageBuilderTabBackgroundColorProperty.section, PageBuilderTabBackgroundColorProperty.fieldName)}}" stepKey="getBackgroundColor"/>
        <assertEmpty actual="getBackgroundColor" actualType="variable" message="Text field has text: $getBackgroundColor" stepKey="assertBackgroundColor"/>

        <comment userInput="Tab has default value Top Aligned for Background Position" stepKey="commentDefaultBackgroundPosition"/>
        <actionGroup ref="seeOptionIsSelectedSlideOutProperty" stepKey="validateDefaultBackgroundPosition">
            <argument name="property" value="PageBuilderTabBackgroundPositionTop"/>
        </actionGroup>

        <comment userInput="Tab has default value Cover for Background Size" stepKey="commentDefaultBackgroundSize"/>
        <actionGroup ref="seeOptionIsSelectedSlideOutProperty" stepKey="validateDefaultBackgroundSize">
            <argument name="property" value="PageBuilderTabBackgroundSizeCover"/>
        </actionGroup>

        <comment userInput="Tab has default value No for Background Repeat" stepKey="commentDefaultBackgroundRepeat"/>
        <actionGroup ref="seeOptionIsNotCheckedSlideOutProperty" stepKey="seeDefaultBackgroundRepeatProperty">
            <argument name="property" value="PageBuilderTabBackgroundRepeatNo"/>
        </actionGroup>

        <comment userInput="Tab has default value Scroll for Background Attachment" stepKey="commentDefaultBackgroundAttachment"/>
        <actionGroup ref="seeOptionIsSelectedSlideOutProperty" stepKey="validateBackgroundAttachment">
            <argument name="property" value="PageBuilderTabBackgroundAttachmentScroll"/>
        </actionGroup>
        <actionGroup ref="closeEditPanelSettings" stepKey="closeEditPanelSettingsForTab1"/>
        <!-- Validate Default Values in Edit Tabs -->
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openTabsEditMenuOnStage">
            <argument name="contentBlockType" value="PageBuilderTabsContentBlock"/>
        </actionGroup>

        <comment userInput="Tabs has default value Tab 1 for Default Active Tab" stepKey="commentDefaultActiveTab"/>
        <actionGroup ref="seeOptionIsSelectedSlideOutProperty" stepKey="validateDefaultActiveTab">
            <argument name="property" value="PageBuilderTabsDefaultActiveTab"/>
        </actionGroup>

        <comment userInput="Tabs has default value 300 for Minimum Height" stepKey="commentDefaultMinimumHeight"/>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="validateDefaultMinimumHeight">
            <argument name="property" value="PageBuilderTabsDefaultMinHeight"/>
        </actionGroup>

        <comment userInput="Tabs has default value Left for Tab Navigation Alignment" stepKey="commentDefaultTabNavigationAlignment"/>
        <actionGroup ref="seeOptionIsSelectedSlideOutProperty" stepKey="validateDefaultTabNavigationAlignment">
            <argument name="property" value="PageBuilderTabsAlignmentLeft"/>
        </actionGroup>
        <actionGroup ref="closeEditPanelSettings" stepKey="closeEditPanelSettings"/>
        <actionGroup ref="saveAndContinueEditCmsPage" stepKey="saveAndContinueEditCmsPage"/>
        <!-- Verify Default Values for Tabs on storefront -->
        <comment userInput="View default Tabs with empty Tab on storefront" stepKey="viewTabOnStorefront"/>
        <amOnPage url="tabs{{PageBuilderPageTitle.pageName}}" stepKey="amOnPageBuilderPage"/>
        <assertElementContainsAttribute selector="{{TabOnStorefront.tabHeader('1')}}" attribute="title" expectedValue="Tab 1" stepKey="assertInitialSlideTitleStorefront"/>
        <assertElementContainsAttribute selector="{{TabOnStorefront.tabContent('1')}}" attribute="aria-expanded" expectedValue="true" stepKey="assertTab1ContentFocusedStorefront"/>
        <assertElementContainsAttribute selector="{{TabOnStorefront.tabContent('1')}}" attribute="aria-hidden" expectedValue="false" stepKey="assertTab1ContentVisibleStorefront"/>
    </test>
</tests>

