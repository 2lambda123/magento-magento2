<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<actionGroups xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:noNamespaceSchemaLocation="../../../../../../vendor/magento/magento2-functional-testing-framework/src/Magento/FunctionalTestingFramework/Test/etc/actionGroupSchema.xsd">
    <actionGroup name="addTab">
        <click selector="{{TabsOnStage.tabsContainer}}" stepKey="focusOnContentBlock"/>
        <waitForElementVisible time="10" selector="{{PageBuilderActionsSection.contentBlockInStage(PageBuilderTabsContentBlock.role)}}" stepKey="waitForContentBlockInStageVisible" />
        <moveMouseOver selector="{{PageBuilderActionsSection.contentBlockInStage(PageBuilderTabsContentBlock.role)}}" x="10" y="0" stepKey="onMouseOverContentBlockStage"/>
        <waitForPageLoad stepKey="waitForMouseOverAnimation" />
        <waitForElementVisible time="10" selector="{{PageBuilderActionsSection.contentBlockOptionsMenu(PageBuilderTabsContentBlock.role)}}" stepKey="waitForOptions" />
        <click selector="{{PageBuilderActionsSection.contentBlockAdd(PageBuilderTabsContentBlock.role)}}" stepKey="clickAddContentBlock"/>
    </actionGroup>
    <actionGroup name="addTabAndOpenNewTabOptions">
        <arguments>
            <argument name="from" defaultValue="1" type="string"/>
            <argument name="to" defaultValue="2" type="string"/>
        </arguments>
        <click selector="{{TabsOnStage.tabsContainer}}" stepKey="focusOnContentBlock"/>
        <waitForElementVisible time="10" selector="{{PageBuilderActionsSection.contentBlockInStage(PageBuilderTabsContentBlock.role)}}" stepKey="waitForContentBlockInStageVisible" />
        <moveMouseOver selector="{{PageBuilderActionsSection.contentBlockInStage(PageBuilderTabsContentBlock.role)}}" x="10" y="0" stepKey="onMouseOverContentBlockStage"/>
        <waitForPageLoad stepKey="waitForMouseOverAnimation" />
        <waitForElementVisible time="10" selector="{{PageBuilderActionsSection.contentBlockOptionsMenu(PageBuilderTabsContentBlock.role)}}" stepKey="waitForOptions" />
        <click selector="{{PageBuilderActionsSection.contentBlockAdd(PageBuilderTabsContentBlock.role)}}" stepKey="clickAddContentBlock"/>
        <waitForElementVisible selector="{{TabOnStage.tabContent(to)}}" stepKey="waitForNewTabContent"/>
        <waitForElementVisible selector="{{TabOnStage.tabHeader(to)}}" stepKey="waitForNewTabHeader"/>
        <waitForElementVisible selector="{{TabOnStage.tabOptionsByIndex(to)}}" stepKey="waitForTabOptionsPanel"/>
        <waitForElementVisible selector="{{TabOnStage.tabOptionsEdit}}" stepKey="seeTabOptionsEdit2"/>
        <click selector="{{TabOnStage.tabOptionsEdit}}" stepKey="clickEditContentBlock2"/>
        <waitForElementVisible time="5" selector="{{PageBuilderActionsSection.editForm}}" stepKey="waitForEditForm" />
        <!-- Required time wait due to animation -->
        <waitForPageLoad stepKey="waitForAnimation" />
        <see userInput="Edit Tab" selector="{{PageBuilderActionsSection.editFormTitle}}" stepKey="seeContentBlockNameInEditFormTitle"/>
    </actionGroup>
    <actionGroup name="openTabOptionsByIndex">
        <arguments>
            <argument name="index" defaultValue="1" type="string"/>
        </arguments>
        <waitForElementVisible time="10" selector="{{TabOnStage.tabHeader(index)}}" stepKey="waitForContentBlockInStageVisible" />
        <click stepKey="clickTabTitle" selector="{{TabOnStage.tabHeader(index)}}"/>
        <waitForElementVisible selector="{{TabOnStage.tabOptionsEdit}}" stepKey="seeTabOptionsEdit"/>
        <click selector="{{TabOnStage.tabOptionsEdit}}" stepKey="clickEditContentBlock"/>
        <waitForElementVisible time="5" selector="{{PageBuilderActionsSection.editForm}}" stepKey="waitForEditForm" />
        <!-- Required time wait due to animation -->
        <waitForPageLoad stepKey="waitForAnimation" />
        <see userInput="Edit Tab" selector="{{PageBuilderActionsSection.editFormTitle}}" stepKey="seeContentBlockNameInEditFormTitle"/>
    </actionGroup>
    <actionGroup name="switchTabsAdmin">
        <arguments>
            <argument name="from" defaultValue="1" type="string"/>
            <argument name="to" defaultValue="2" type="string"/>
        </arguments>
        <click selector="{{TabOnStage.tabHeader(to)}}" stepKey="switchToTab"/>
        <waitForPageLoad stepKey="waitForTabChangeAnimation" />
        <waitForElementVisible selector="{{TabOnStage.tabHeaderItemActive(to)}}" stepKey="seeNewTabActive"/>
        <assertElementContainsAttribute selector="{{TabOnStage.tabPanel(from)}}" attribute="aria-hidden" expectedValue="true" stepKey="assertOldTabHidden"/>
        <assertElementContainsAttribute selector="{{TabOnStage.tabPanel(to)}}" attribute="aria-hidden" expectedValue="false" stepKey="assertNewTabVisible"/>
    </actionGroup>
    <actionGroup name="switchTabsStorefront">
        <arguments>
            <argument name="from" defaultValue="1" type="string"/>
            <argument name="to" defaultValue="2" type="string"/>
        </arguments>
        <click selector="{{TabOnStorefront.tabHeader(to)}}" stepKey="switchToTab"/>
        <waitForPageLoad stepKey="waitForTabChangeAnimationStorefront" />
        <scrollToTopOfPage stepKey="scrollToTopOfPage"/>
        <wait time="1" stepKey="waitForTabRender"/>
        <waitForElementVisible selector="{{TabOnStorefront.tabHeaderItemActive(to)}}" stepKey="seeNewTabActive"/>
        <assertElementContainsAttribute selector="{{TabOnStorefront.tabContent(from)}}" attribute="aria-hidden" expectedValue="true" stepKey="assertOldTabHidden"/>
        <assertElementContainsAttribute selector="{{TabOnStorefront.tabContent(to)}}" attribute="aria-hidden" expectedValue="false" stepKey="assertNewTabVisible"/>
    </actionGroup>
</actionGroups>
