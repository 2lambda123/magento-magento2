<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:noNamespaceSchemaLocation="../../../../../../vendor/magento/magento2-functional-testing-framework/src/Magento/FunctionalTestingFramework/Test/etc/testSchema.xsd">
    <test name="CanAddDriver">
        <annotations>
            <title value="Add an driver content block into stage"/>
            <description value="A user should be able to add an driver into a row."/>
            <severity value="CRITICAL"/>
            <testCaseId value="MAGETWO-84673"/>
            <group value="pagebuilder"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <amOnPage url="admin/admin/auth/logout" stepKey="amOnLogoutPage"/>
            <waitForPageLoad stepKey="waitForAdminLoginPageLoad"/>
        </after>
        <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle1">
            <argument name="contentBlockType" value="PageBuilderDriverContentBlock"/>
        </actionGroup>
        <click selector="{{PageBuilderActionsSection.mediaGroup}}" stepKey="clickMediaGroup"/>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragDriverIntoStage">
            <argument name="contentBlockType" value="PageBuilderDriverContentBlock"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage">
            <argument name="contentBlockType" value="PageBuilderDriverContentBlock"/>
        </actionGroup>
        <actionGroup ref="attachFileSlideOutPropertyGeneral" stepKey="attachImageFile">
            <argument name="property" value="PageBuilderImagePropertyJpg"/>
        </actionGroup>
        <actionGroup ref="attachFileSlideOutPropertyGeneral" stepKey="attachMobileImageFile">
            <argument name="property" value="PageBuilderMobileImagePropertyGif"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterDriverLinkText">
            <argument name="property" value="PageBuilderLinkTextProperty"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterDriverLinkUrl">
            <argument name="property" value="PageBuilderLinkUrlProperty"/>
        </actionGroup>
        <actionGroup ref="clickSlideOutPanelFieldGeneral" stepKey="openLinkInNewWindow">
            <argument name="property" value="PageBuilderNewWindowProperty"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterAltTextProperty">
            <argument name="property" value="PageBuilderImageAltTextProperty"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterTitleTagProperty">
            <argument name="property" value="PageBuilderImageTitleTagProperty"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings"/>
        <actionGroup ref="saveAndContinueEditCmsPage" stepKey="saveAndContinueEditCmsPage"/>
        <see userInput="{{PageBuilderPageTitle.pageName}}" selector="{{CmsPageSection.cmsPageTitle}}" stepKey="assertTitleSavedCmsPage"/>
        <amOnPage url="driver{{PageBuilderPageTitle.pageName}}" stepKey="amOnPageBuilderPage"/>
        <seeElement selector="{{DriverOnFrontend.imageDisplay}}" stepKey="seeMainImageDisplayed"/>
        <seeElement selector="{{ImageOnFrontend.imageSource(_ENV.MAGENTO_BASE_URL,PageBuilderImagePropertyJpg.path,PageBuilderImagePropertyJpg.fileType)}}" stepKey="seeMainImageSource"/>
        <seeElementInDOM selector="{{ImageOnFrontend.imageHasAltText(PageBuilderImageAltTextProperty.value)}}" stepKey="seeImageAltText"/>
        <seeElementInDOM selector="{{ImageOnFrontend.imageHasTitleTag(PageBuilderImageTitleTagProperty.value)}}" stepKey="seeImageAltText"/>
        <seeElementInDOM selector="{{ImageOnFrontend.mobileImageSource(_ENV.MAGENTO_BASE_URL,PageBuilderMobileImagePropertyGif.path,PageBuilderMobileImagePropertyGif.fileType)}}" stepKey="seeMobileImageInDom"/>
        <see userInput="{{PageBuilderLinkTextProperty.value}}" selector="{{DriverOnFrontend.linkText}}" stepKey="seeLinkTextDisplayed"/>
        <seeElementInDOM selector="{{DriverOnFrontend.linkUrl(PageBuilderLinkUrlProperty.value)}}" stepKey="seeLinkUrlInDom"/>
        <seeElementInDOM selector="{{DriverOnFrontend.openInNewWindow}}" stepKey="verifyLinkOpensNewWindow"/>
    </test>
    <test name="CanRemoveDriver">
        <annotations>
            <title value="Remove driver content block from stage"/>
            <description value="A user should be able to remove driver block from a row."/>
            <severity value="CRITICAL"/>
            <testCaseId value="MAGETWO-84895"/>
            <group value="pagebuilder"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <amOnPage url="admin/admin/auth/logout" stepKey="amOnLogoutPage"/>
            <waitForPageLoad stepKey="waitForAdminLoginPageLoad"/>
        </after>
        <click selector="{{PageBuilderActionsSection.mediaGroup}}" stepKey="clickMediaGroup"/>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragContentBlockToStage">
            <argument name="contentBlockType" value="PageBuilderDriverContentBlock"/>
        </actionGroup>
        <actionGroup ref="removeContentBlockFromStage" stepKey="removeContentBlockFromStage">
            <argument name="contentBlockType" value="PageBuilderDriverContentBlock"/>
        </actionGroup>
        <dontSeeElement selector="{{PageBuilderActionsSection.contentBlockInStage(PageBuilderDriverContentBlock.role)}}" stepKey="dontSeeContentBlockInStage"/>
    </test>
    <test name="DriverHasAdvancedFormSection">
        <annotations>
            <title value="Driver has Advanced form section"/>
            <description value="A user should be able to configure advanced settings for driver"/>
            <severity value="CRITICAL"/>
            <group value="pagebuilder"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <amOnPage url="admin/admin/auth/logout" stepKey="amOnLogoutPage"/>
            <waitForPageLoad stepKey="waitForAdminLoginPageLoad"/>
        </after>
        <click selector="{{PageBuilderActionsSection.mediaGroup}}" stepKey="clickMediaGroup"/>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragDriverIntoStage">
            <argument name="contentBlockType" value="PageBuilderDriverContentBlock"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage">
            <argument name="contentBlockType" value="PageBuilderDriverContentBlock"/>
        </actionGroup>
        <waitForElementVisible time="3" selector="{{AdvancedForm.advancedSectionName}}" stepKey="waitForAdvancedForm"/>
        <seeElement selector="{{AdvancedForm.advancedSectionName}}" stepKey="seeAdvancedFormSection"/>
        <click selector="{{AdvancedForm.advancedSectionName}}" stepKey="clickAdvancedFormSection"/>
        <actionGroup ref="validateSlideOutPanelField" stepKey="seeAdvancedCssClassesProperty">
            <argument name="property" value="PageBuilderAdvancedCssClassesProperty"/>
        </actionGroup>
        <actionGroup ref="validateSlideOutPanelField" stepKey="seeAdvancedCssClassesProperty">
            <argument name="property" value="PageBuilderAdvancedCssClassesProperty"/>
        </actionGroup>
        <actionGroup ref="validateSlideOutPanelField" stepKey="seeAdvancedAlignmentProperty">
            <argument name="property" value="PageBuilderAdvancedAlignmentProperty"/>
        </actionGroup>
        <actionGroup ref="validateSlideOutPanelField" stepKey="seeAdvancedMarginsAndPaddingProperty">
            <argument name="property" value="PageBuilderAdvancedMarginsAndPaddingProperty"/>
        </actionGroup>
    </test>
</tests>
