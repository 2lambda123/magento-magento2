<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:noNamespaceSchemaLocation="../../../../../../vendor/magento/magento2-functional-testing-framework/src/Magento/FunctionalTestingFramework/Test/etc/testSchema.xsd">
    <test name="CanAddAdvancedSlider">
        <annotations>
            <title value="Can add Advanced Slider to Stage"/>
            <description value="The user should be able to add the slides media content type to advanced slider media content type and it should be visible on the frontend"/>
            <severity value="CRITICAL"/>
            <testCaseId value="MAGETWO-84897"/>
            <group value="pagebuilder"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="EnabledWYSIWYG" stepKey="enableWYSIWYG"/>
            <actionGroup ref="enablePageBuilderSetting" stepKey="enablePageBuilderSetting"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="DisabledWYSIWYG" stepKey="disableWYSIWYG"/>
            <amOnPage url="admin/admin/auth/logout" stepKey="amOnLogoutPage"/>
            <waitForPageLoad stepKey="waitForAdminLoginPageLoad"/>
        </after>
        <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle">
            <argument name="contentBlockType" value="PageBuilderAdvancedSliderContentBlock"/>
        </actionGroup>
        <fillField selector="{{PageBuilderActionsSection.searchPanel}}" userInput="slider" stepKey="fillSearch"/>
        <see userInput="Advanced Slider" selector="{{PageBuilderActionsSection.searchResults}}" stepKey="validateSearchResults"/>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragAdvancedSliderOntoStage">
            <argument name="contentBlockType" value="PageBuilderAdvancedSliderContentBlock"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage">
            <argument name="contentBlockType" value="PageBuilderAdvancedSliderContentBlock"/>
        </actionGroup>
        <actionGroup ref="selectSlideOutPanelFieldGeneral" stepKey="enterFadeYes">
            <argument name="property" value="PageBuilderAdvanceSliderFadeProperty"/>
        </actionGroup>
        <actionGroup ref="selectSlideOutPanelFieldGeneral" stepKey="enterIsInfiniteYes">
            <argument name="property" value="PageBuilderAdvanceSliderIsInfiniteProperty"/>
        </actionGroup>
        <actionGroup ref="selectSlideOutPanelFieldGeneral" stepKey="enterShowArrowYes">
            <argument name="property" value="PageBuilderAdvanceSliderShowArrowsProperty"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings1"/>
        <click selector="{{AdvancedSliderInAdmin.addNewSlide}}" stepKey="clickOnAddSlideElement1"/>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterSlideTitle1">
            <argument name="property" value="PageBuilderSlideItemTitle1"/>
        </actionGroup>
        <executeJS function="tinymce.activeEditor.setContent(tinymce.activeEditor.getContent() + 'Slide 1 Content')" stepKey="addText1ToWYSIWYG"/>
        <click selector="div.modal-content div.mce-edit-area" stepKey="clickToTriggerValidation1"/>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterSlideLinkText1">
            <argument name="property" value="PageBuilderSlideItemLinkText1"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterSlideLinkURL1">
            <argument name="property" value="PageBuilderSlideItemLinkURL1"/>
        </actionGroup>
        <actionGroup ref="attachFileSlideOutPropertyGeneral" stepKey="attachSlideImageFile1">
            <argument name="property" value="PageBuilderSlideBackgroundImageProperty1"/>
        </actionGroup>
        <actionGroup ref="clickSlideOutPanelFieldGeneral" stepKey="enterSlideHasBackgroundOverlay1">
            <argument name="property" value="PageBuilderSlideItemHasBackgroundOverlay1"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanel1Settings"/>
        <click selector="{{AdvancedSliderInAdmin.addNewSlide}}" stepKey="clickOnAddSlideElement"/>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterSlideTitle2">
            <argument name="property" value="PageBuilderSlideItemTitle2"/>
        </actionGroup>
        <executeJS function="tinymce.activeEditor.setContent(tinymce.activeEditor.getContent() + 'Slide 2 Content')" stepKey="addText2ToWYSIWYG"/>
        <click selector="div.modal-content div.mce-edit-area" stepKey="clickToTriggerValidation2"/>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterSlideLinkText2">
            <argument name="property" value="PageBuilderSlideItemLinkText2"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterSlideLinkURL2">
            <argument name="property" value="PageBuilderSlideItemLinkURL2"/>
        </actionGroup>
        <actionGroup ref="attachFileSlideOutPropertyGeneral" stepKey="attachSlideImageFile2">
            <argument name="property" value="PageBuilderSlideBackgroundImageProperty2"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanel2Settings"/>
        <actionGroup ref="saveAndContinueEditCmsPage" stepKey="saveAndContinueEditCmsPage"/>
        <see userInput="{{PageBuilderPageTitle.pageName}}" selector="{{CmsPageSection.cmsPageTitle}}" stepKey="assertTitleSavedCmsPage"/>
        <amOnPage url="advanced-slider{{PageBuilderPageTitle.pageName}}" stepKey="amOnPageBuilderPage"/>
        <seeElement selector="{{AdvancedSliderOnFrontend.advancedSliderDisplay}}" stepKey="seeAdvancedSliderOnPageBuilderPage"/>
        <seeElement selector="{{AdvancedSliderOnFrontend.AutoplaySpeed(PageBuilderAdvanceSliderAutoplaySpeedProperty.value)}}" stepKey="seeAdvancedSliderAutoplaySpeedSetting"/>
        <seeElement selector="{{AdvancedSliderOnFrontend.Fade(PageBuilderAdvanceSliderFadeProperty.value)}}" stepKey="seeAdvancedSliderFadeSetting"/>
        <seeElement selector="{{AdvancedSliderOnFrontend.IsInfinite(PageBuilderAdvanceSliderIsInfiniteProperty.value)}}" stepKey="seeAdvancedSliderIsInfiniteSetting"/>
        <seeElement selector="{{AdvancedSliderOnFrontend.ShowArrows(PageBuilderAdvanceSliderShowArrowsProperty.value)}}" stepKey="seeAdvancedSliderShowArrowsSetting"/>
        <seeElement selector="{{AdvancedSliderOnFrontend.ShowDots}}" stepKey="seeAdvancedSliderShowDotsSetting"/>
        <seeElement selector="{{AdvancedSliderOnFrontend.Autoplay}}" stepKey="seeAdvancedSliderAutoplaySetting"/>
        <seeElement selector="{{SlideOnFrontend.slide1}}" stepKey="seeSlide1InAdvancedSlider"/>
        <see userInput="{{PageBuilderSlideItemTitle1.value}}" selector="{{SlideOnFrontend.slideTitle1}}" stepKey="seeSlide1TitleDisplayed"/>
        <see userInput="{{PageBuilderSlideItemContent1.value}}" selector="{{SlideOnFrontend.slideContent1}}" stepKey="seeSlide1ContentDisplayed"/>
        <seeElement selector="{{SlideOnFrontend.slideHasOverlay1}}" stepKey="seeSlide1HasOverlay"/>
        <see userInput="{{PageBuilderSlideItemLinkText1.value}}" selector="{{SlideOnFrontend.slideLinkText1}}" stepKey="seeSlide1LinkTextDisplayed"/>
        <seeElement selector="{{SlideOnFrontend.slideLinkURL1(PageBuilderSlideItemLinkURL1.value)}}" stepKey="seeSlide1LinkURL"/>
        <seeElement selector="{{SlideOnFrontend.slideBackgroundImage('0',PageBuilderSlideBackgroundImageProperty1.path, PageBuilderSlideBackgroundImageProperty1.fileType)}}" stepKey="seeSlide1Background"/>
        <click selector="{{AdvancedSliderOnFrontend.nextSlide}}" stepKey="clickNextSlideOnAdvancedSlider"/>
        <waitForElementVisible time="2" selector="{{SlideOnFrontend.slide2}}" stepKey="waitForSlide2" />
        <seeElement selector="{{SlideOnFrontend.slide2}}" stepKey="seeSlide2InAdvancedSlider"/>
        <see userInput="{{PageBuilderSlideItemTitle2.value}}" selector="{{SlideOnFrontend.slideTitle2}}" stepKey="seeSlide2TitleDisplayed"/>
        <see userInput="{{PageBuilderSlideItemContent2.value}}" selector="{{SlideOnFrontend.slideContent2}}" stepKey="seeSlide2ContentDisplayed"/>
        <see userInput="{{PageBuilderSlideItemLinkText2.value}}" selector="{{SlideOnFrontend.slideLinkText2}}" stepKey="seeSlide2LinkTextDisplayed"/>
        <seeElement selector="{{SlideOnFrontend.slideLinkURL2(PageBuilderSlideItemLinkURL2.value)}}" stepKey="seeSlide2LinkURL"/>
        <seeElement selector="{{SlideOnFrontend.slideBackgroundImage('1',PageBuilderSlideBackgroundImageProperty2.path, PageBuilderSlideBackgroundImageProperty2.fileType)}}" stepKey="seeSlide2Background"/>
    </test>
    <test name="CanRemoveAdvancedSlider">
        <annotations>
            <title value="Remove advanced slider content block from stage"/>
            <description value="A user should be able to remove advanced slider block from a row."/>
            <severity value="CRITICAL"/>
            <testCaseId value="MAGETWO-84895"/>
            <group value="pagebuilder"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="EnabledWYSIWYG" stepKey="enableWYSIWYG"/>
            <actionGroup ref="enablePageBuilderSetting" stepKey="enablePageBuilderSetting"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="DisabledWYSIWYG" stepKey="disableWYSIWYG"/>
            <amOnPage url="admin/admin/auth/logout" stepKey="amOnLogoutPage"/>
            <waitForPageLoad stepKey="waitForAdminLoginPageLoad"/>
        </after>
        <fillField selector="{{PageBuilderActionsSection.searchPanel}}" userInput="slider" stepKey="fillSearch"/>
        <see userInput="Advanced Slider" selector="{{PageBuilderActionsSection.searchResults}}" stepKey="validateSearchResults"/>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragAdvancedSliderIntoStage">
            <argument name="contentBlockType" value="PageBuilderAdvancedSliderContentBlock"/>
        </actionGroup>
        <actionGroup ref="removeContentBlockFromStage" stepKey="removeContentBlockFromStage">
            <argument name="contentBlockType" value="PageBuilderAdvancedSliderContentBlock"/>
        </actionGroup>
        <dontSeeElement selector="{{PageBuilderActionsSection.contentBlockInStage(PageBuilderAdvancedSliderContentBlock.role)}}" stepKey="dontSeeContentBlockInStage"/>
    </test>
    <test name="AdvancedSliderHasAdvancedFormSection">
        <annotations>
            <title value="Advanced Slider has Advanced form section"/>
            <description value="A user should be able to configure advanced settings for advanced slider"/>
            <severity value="CRITICAL"/>
            <group value="pagebuilder"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="EnabledWYSIWYG" stepKey="enableWYSIWYG"/>
            <actionGroup ref="enablePageBuilderSetting" stepKey="enablePageBuilderSetting"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="DisabledWYSIWYG" stepKey="disableWYSIWYG"/>
            <amOnPage url="admin/admin/auth/logout" stepKey="amOnLogoutPage"/>
            <waitForPageLoad stepKey="waitForAdminLoginPageLoad"/>
        </after>
        <fillField selector="{{PageBuilderActionsSection.searchPanel}}" userInput="slider" stepKey="fillSearch"/>
        <see userInput="Advanced Slider" selector="{{PageBuilderActionsSection.searchResults}}" stepKey="validateSearchResults"/>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragAdvancedSliderIntoStage">
            <argument name="contentBlockType" value="PageBuilderAdvancedSliderContentBlock"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage">
            <argument name="contentBlockType" value="PageBuilderAdvancedSliderContentBlock"/>
        </actionGroup>
        <waitForElementVisible time="3" selector="{{AdvancedForm.advancedSectionName}}" stepKey="waitForAdvancedForm"/>
        <seeElement selector="{{AdvancedForm.advancedSectionName}}" stepKey="seeAdvancedFormSection"/>
        <click selector="{{AdvancedForm.advancedSectionName}}" stepKey="clickAdvancedFormSection"/>
        <actionGroup ref="validateSlideOutPanelField" stepKey="seeAdvancedCssClassesProperty">
            <argument name="property" value="PageBuilderAdvancedCssClassesProperty"/>
        </actionGroup>
        <actionGroup ref="validateSlideOutPanelField" stepKey="seeAdvancedAlignmentProperty">
            <argument name="property" value="PageBuilderAdvancedAlignmentProperty"/>
        </actionGroup>
        <actionGroup ref="validateSlideOutPanelField" stepKey="seeAdvancedMarginsAndPaddingProperty">
            <argument name="property" value="PageBuilderAdvancedMarginsAndPaddingProperty"/>
        </actionGroup>
    </test>
    <test name="CanAddImageToSlide">
        <annotations>
            <title value="Add an image content block into slide"/>
            <description value="A user should be able to add an image into a slide."/>
            <severity value="CRITICAL"/>
            <group value="pagebuilder"/>
            <!-- Skipped; see MAGETWO-88218 -->
            <group value="skip"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="DisabledWYSIWYG" stepKey="disableWYSIWYG"/>
            <actionGroup ref="enablePageBuilderSetting" stepKey="enablePageBuilder"/>
            <createData entity="_defaultCategory" stepKey="createPreReqCategory"/>
        </before>
        <after>
            <actionGroup ref="disablePageBuilderSetting" stepKey="disablePageBuilderSetting"/>
            <deleteData createDataKey="createPreReqCategory" stepKey="createPreReqCategory" />
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <actionGroup ref="navigateToCreatedCategory" stepKey="navigateToCreatedCatalogPage">
            <argument name="Category" value="$$createPreReqCategory$$"/>
        </actionGroup>
        <click selector="{{AdminProductFormSection.contentTab}}" stepKey="clickContentTab"/>
        <waitForElementVisible selector="{{PageBuilderActionsSection.openPageBuilderCatalog}}" stepKey="waitForPageBuilderBtn" />
        <see userInput="Edit with Page Builder" stepKey="seePageBuilderBtn"/>
        <click selector="{{PageBuilderActionsSection.openPageBuilderCatalog}}" stepKey="clickOnPageBuilderBtn" />
        <!--See PageBuilder fullsize-->
        <waitForElementVisible selector="{{PageBuilderActionsSection.identifyPageBuilder}}" stepKey="waiForPageBuilderVisible" />
        <seeElement selector="{{PageBuilderActionsSection.identifyPageBuilder}}" stepKey="seePageBuilderVisible" />
        <click selector="{{PageBuilderActionsSection.mediaGroup}}" stepKey="clickMediaGroup"/>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragAdvancedSliderOntoStage">
            <argument name="contentBlockType" value="PageBuilderAdvancedSliderContentBlock"/>
        </actionGroup>
        <click selector="{{AdvancedSliderInAdmin.addNewSlide}}" stepKey="clickOnAddSlideElement1"/>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterSlideTitle1">
            <argument name="property" value="PageBuilderSlideItemTitle1"/>
        </actionGroup>
        <fillField selector="{{TextOnSlider.textArea}}" userInput="Text from Slide" stepKey="addTextToEditor"/>
        <seeElement selector="{{UploadImageSection.SelectFromGalleryBtn('Background Image')}}" stepKey="seeSelectFromGalleryBtnOnImage"/>
        <seeElement selector="{{UploadImageSection.PlaceholderContent('Background Image')}}" stepKey="seeImagePlaceHolderOnImage1"/>

        <!--Upload image from local machine using image placeholder button-->
        <actionGroup ref="attachFileSlideOutPropertyGeneral" stepKey="attachSlideImageFile1">
            <argument name="property" value="PageBuilderSlideBackgroundImageProperty1"/>
        </actionGroup>
        <waitForLoadingMaskToDisappear stepKey="waitForLoading1" />
        <waitForElementVisible  selector="{{ImageOnPreview.imageName(PageBuilderSlideBackgroundImageProperty1.value)}}" stepKey="waitForUploadImage1" />
        <seeElement selector="{{ImageOnPreview.imageName(PageBuilderSlideBackgroundImageProperty1.value)}}" stepKey="seeImageNameOnPreview1"/>
        <seeElement selector="{{ImageOnPreview.imageSource(PageBuilderSlideBackgroundImageProperty1.fileName)}}" stepKey="seeMainImageSource1"/>
        <seeElement selector="{{ImageOnPreview.imagePreview}}" stepKey="seeImageDisplayed1"/>

        <!--Remove uploaded image by TrashBin icon-->
        <click selector="{{ImageOnPreview.trashBinIcon}}" stepKey="removeUploadedImage1"/>
        <seeElement selector="{{UploadImageSection.PlaceholderContent('Background Image')}}" stepKey="seeImagePlaceHolderOnImage2"/>

        <!--Upload image from local machine using image placeholder button-->
        <actionGroup ref="attachFileSlideOutPropertyGeneral" stepKey="attachSlideImageFile2">
            <argument name="property" value="PageBuilderSlideBackgroundImageProperty1"/>
        </actionGroup>
        <waitForLoadingMaskToDisappear stepKey="waitForLoading3" />
        <waitForElementVisible  selector="{{ImageOnPreview.imageName(PageBuilderSlideBackgroundImageProperty1.value)}}" stepKey="waitForUploadImage2" />
        <seeElement selector="{{ImageOnPreview.imageName(PageBuilderSlideBackgroundImageProperty1.value)}}" stepKey="seeImageNameOnPreview2"/>

        <seeElement selector="{{ImageOnPreview.imagePreview}}" stepKey="seeImageDisplayed2"/>
        <seeElement selector="{{ImageOnPreview.imageSource(PageBuilderSlideBackgroundImageProperty1.fileName)}}" stepKey="seeMainImageSource2"/>
        <!--Overwrite uploaded image by selecting image from Media Gallery Storage-->
        <click selector="{{UploadImageSection.SelectFromGalleryBtn('Background Image')}}" stepKey="clickImageSelectFromGalleryBtn"/>
        <waitForPageLoad stepKey="waitForPageLoad2" />
        <waitForLoadingMaskToDisappear stepKey="waitForLoading2" />
        <actionGroup ref="CreateImageFolder" stepKey="createImageFolder">
            <argument name="ImageFolder" value="ImageFolder"/>
        </actionGroup>
        <actionGroup ref="attachImage" stepKey="SelectImageFromMediaStorage">
            <argument name="Image" value="PageBuilderImagePropertyJpgCopy"/>
        </actionGroup>
        <actionGroup ref="saveImage" stepKey="saveImage"/>
        <seeElement selector="{{ImageOnPreview.imageName(PageBuilderImagePropertyJpgCopy.value)}}" stepKey="seeImageNameOnPreview3"/>
        <seeElement selector="{{ImageOnPreview.imageSource(PageBuilderSlideBackgroundImageProperty1.fileName)}}" stepKey="seeMainImageSource3"/>
        <seeElement selector="{{ImageOnPreview.trashBinIcon}}" stepKey="seeTrashBinBtn"/>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings1"/>
        <click selector=".icon-pagebuilder-fullscreen-exit" stepKey="exitPageBuilderFullScreen" />
        <click selector="{{AdminCategoryMainActionsSection.SaveButton}}" stepKey="saveCategory"/>
        <waitForPageLoad stepKey="waitForPageLoad3" />
        <amOnPage url="$$createPreReqCategory.name$$.html" stepKey="goToCategoryFrontPage"/>
        <waitForPageLoad stepKey="waitForPageLoad4" />

        <!--Verify image on Storefront-->
        <seeElement selector="{{ImageOnPreview.imageSource(PageBuilderSlideBackgroundImageProperty1.fileName)}}" stepKey="seeMainImageSource4"/>
    </test>
</tests>
