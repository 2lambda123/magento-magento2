<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright © Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:noNamespaceSchemaLocation="../../../../../../vendor/magento/magento2-functional-testing-framework/src/Magento/FunctionalTestingFramework/Test/etc/testSchema.xsd">
    <test name="VerifyPagebuilderSwitcherAndDisclaimerMessage">
        <annotations>
            <title value="Verify Disclaimer Message and Warning Message when disable PageBuilder"/>
            <description value="Verify Disclaimer Message and Warning Message when disable PageBuilder"/>
            <severity value="CRITICAL"/>
            <group value="pagebuilder"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
        </before>
        <after>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <amOnPage url="{{AdminContentManagementPage.url}}" stepKey="navigateToConfigurationPage" />
        <waitForPageLoad stepKey="waitForPageLoad"/>
        <see userInput="Advanced Content Tools" stepKey="seeAdvancedContentToolTab"/>
        <conditionalClick stepKey="expandPageBuilderTab" selector="{{PageBuilderCollapsibleSection.AdvancedContentToolsTab}}" dependentSelector="{{PageBuilderCollapsibleSection.CheckIfTabOpen}}" visible="true" />
        <waitForElementVisible selector="{{PageBuilderCollapsibleSection.EnablePageBuilderDrp}}" stepKey="waitForEnablePageBuilderVisible" />
        <seeOptionIsSelected selector="{{PageBuilderCollapsibleSection.EnablePageBuilderDrp}}" userInput="Yes" stepKey="seeYESOptionIsSelected"/>
        <grabTextFrom selector="//tr[@id='row_cms_pagebuilder_enabled']/td[@class='value']//span" stepKey="grabTextFromDisclaimerMsg"/>
        <assertEquals stepKey="assertEquals2" expected="Includes advanced tools to design page layouts, add Magento content (Product and Category data, CMS content and Blocks), and format text.\n\nFor Product Attributes — Page Builder can be selected as the “input type” to design layouts and create content." expectedType="string" actual="grabTextFromDisclaimerMsg" actualType="variable" message="pass"/>

        <!--Disable PageBuilder-->
        <selectOption selector="{{PageBuilderCollapsibleSection.EnablePageBuilderDrp}}" userInput="No" stepKey="selectNO1"/>
        <waitForElementVisible selector="{{PageBuilderCollapsibleSection.DisclaimerMessage}}"  stepKey="waitForPopUpMsg1" />
        <seeElement selector="{{PageBuilderCollapsibleSection.DisclaimerMessage}}" stepKey="seePopUp1" />
        <click selector="{{PageBuilderCollapsibleSection.CancelBtn}}" stepKey="selectCancel" />
        <dontSee selector="{{PageBuilderCollapsibleSection.DisclaimerMessage}}" stepKey="popupClose1"/>
        <seeOptionIsSelected selector="{{PageBuilderCollapsibleSection.EnablePageBuilderDrp}}" userInput="Yes" stepKey="seeYesIsSelected" />
        <selectOption selector="{{PageBuilderCollapsibleSection.EnablePageBuilderDrp}}" userInput="No" stepKey="selectNO2"/>
        <waitForElementVisible selector="{{PageBuilderCollapsibleSection.DisclaimerMessage}}" stepKey="waitForPopUpMsg2"/>
        <click selector="{{PageBuilderCollapsibleSection.TurnOffBtn}}" stepKey="selectTurnOff" />
        <dontSee selector="{{PageBuilderCollapsibleSection.DisclaimerMessage}}" stepKey="popupClose2"/>
        <seeOptionIsSelected selector="{{PageBuilderCollapsibleSection.EnablePageBuilderDrp}}" userInput="No" stepKey="seeNoIsSelected" />
        <click selector="{{ContentManagementSection.Save}}" stepKey="saveConfig" />

        <!-- I switch between NO -> YES - > NO without saving the Config, Then: Warning message will not appear on page-->
        <selectOption selector="{{PageBuilderCollapsibleSection.EnablePageBuilderDrp}}" userInput="No" stepKey="selectNO3"/>
        <selectOption selector="{{PageBuilderCollapsibleSection.EnablePageBuilderDrp}}" userInput="Yes" stepKey="selectYes"/>
        <selectOption selector="{{PageBuilderCollapsibleSection.EnablePageBuilderDrp}}" userInput="No" stepKey="selectNO4"/>
        <dontSee selector="{{PageBuilderCollapsibleSection.DisclaimerMessage}}" stepKey="dontSeePopUp"/>
    </test>
    <test name="VerifyPageBuilderVisibleOnCatalog">
        <annotations>
            <title value="Admin are able to see PageBuilder on Catalog page after enable PageBuilder from Configuration"/>
            <description value="Admin are able to see PageBuilder on Catalog page after enable PageBuilder from Configuration"/>
            <severity value="CRITICAL"/>
            <group value="pagebuilder"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="enablePageBuilder1" stepKey="enablePageBuilder"/>
        </before>
        <after>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <!--Verify PageBuilder visible on creation form of Catalog Page-->
        <amOnPage url="{{AdminCategoryPage.url}}" stepKey="navigateToNewCatalog"/>
        <waitForPageLoad stepKey="waitForPageLoad1"/>
        <waitForLoadingMaskToDisappear stepKey="waitForLoading" />
        <click selector="{{AdminCategorySidebarActionSection.AddSubcategoryButton}}" stepKey="clickOnAddSubCategory"/>
        <fillField selector="{{AdminCategoryBasicFieldSection.CategoryNameInput}}" userInput="{{SimpleSubCategory.name}}" stepKey="enterCategoryName"/>
        <click selector="{{AdminProductFormSection.contentTab}}" stepKey="clickContentTab"/>
        <see userInput="Edit with Page Builder" stepKey="seePageBuilderBtn"/>
        <click userInput="Edit with Page Builder" stepKey="clickOnPageBuilderBtn" />
        <!--See PageBuilder fullsize-->
        <seeElement selector="{{PageBuilderActionsSection.identifyPageBuilder}}" stepKey="seePageBuilderVisible" />
        <click selector="{{AdminCategoryMainActionsSection.SaveButton}}" stepKey="saveCategory"/>
        <waitForPageLoad stepKey="waitForPageLoad2" />
        <!--Verify PageBuilder visible on staging slideout of Catalog Page-->
        <actionGroup ref="navigateToStagingSlideout" stepKey="navigateToStagingSlideout"/>
        <click selector="{{AdminStagingSlideOutSection.contentTab}}" stepKey="expandContentTab" />
        <see userInput="Edit with Page Builder" stepKey="seePageBuilderBtn"/>
        <click userInput="Edit with Page Builder" stepKey="clickOnPageBuilderBtn" />
        <seeElement selector="{{PageBuilderActionsSection.identifyPageBuilder}}" stepKey="seeBluefootVisible" />
    </test>
    <test name="VerifyPageBuilderVisibleOnPages">
        <annotations>
            <title value="Admin are able to see PageBuilder on CMS Page, Block Page, Dynmic Block after enable PageBuilder from Configuration"/>
            <description value="Admin are able to see PageBuilder on CMS Page, Block Page, Dynmic Block after enable PageBuilder from Configuration"/>
            <severity value="CRITICAL"/>
            <group value="pagebuilder"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="enablePageBuilder1" stepKey="enablePageBuilder"/>
            <createData entity="_defaultCmsPage" stepKey="createPreReqCMSPage" />
            <createData entity="_defaultBlock" stepKey="createPreReqBlock" />
        </before>
        <after>
            <deleteData createDataKey="createPreReqCMSPage" stepKey="deleteCreatePreReqCMSPage"/>
            <deleteData createDataKey="createPreReqBlock" stepKey="deleteCreatePreReqBlock"/>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <!--Verify PageBuilder visible on CMS Page creation form-->
        <actionGroup ref="navigateToCreatedCMSPage" stepKey="navigateToContentCreatedCMSPage1">
            <argument name="CMSPage" value="$$createPreReqCMSPage$$"/>
        </actionGroup>
        <actionGroup ref="verifyPageBuilderVisibleOnPage" stepKey="verifyPageBuilderVisibleOnCMSPage"/>
        <!--Verify PageBuilder visible on staging slideout of CMS Page-->
        <actionGroup ref="navigateToStagingSlideout" stepKey="navigateToStagingSlideoutCMS"/>
        <click selector="{{AdminStagingSlideOutSection.contentTab}}" stepKey="expandContentTab" />
        <actionGroup ref="verifyPageBuilderVisibleOnPage" stepKey="verifyPageBuilderVisibleOnCMSStaging"/>

        <!--Verify PageBuilder visible on CMS Block creation form-->
        <actionGroup ref="navigateToCreatedCMSBlockPage" stepKey="navigateToContentCreatedBlock">
            <argument name="CMSBlockPage" value="$$createPreReqBlock$$"/>
        </actionGroup>
        <actionGroup ref="verifyPageBuilderVisibleOnPage" stepKey="verifyPageBuilderVisibleOnBlockPage"/>
        <!--Verify PageBuilder visible on staging slideout of CMS Block-->
        <actionGroup ref="navigateToStagingSlideout" stepKey="navigateToStagingSlideoutBlock"/>
        <actionGroup ref="verifyPageBuilderVisibleOnPage" stepKey="verifyPageBuilderVisibleOnBlockStaging"/>

        <!--Verify PageBuilder visible on Newsletter creation form-->
        <amOnPage url="{{NewsletterTemplateForm.url}}" stepKey="amOnNewsletterTemplatePage"/>
        <waitForPageLoad stepKey="waitForPageLoad6"/>
        <dontSee userInput="Enable Advanced CMS" stepKey="dontSeeEnableAdvancedCMSBtn"/>
        <actionGroup ref="verifyPageBuilderNotVisibleOnPage" stepKey="dontSeePageBuilderOnPage"/>
        <seeElement selector="{{NewsletterWYSIWYGSection.TextArea}}" stepKey="seeTextArea"/>

        <!--Verify PageBuilder visible on Dynamic Block creation form -->
        <amOnPage url="{{AdminBannerPage.url}}" stepKey="openNewBannerForm"/>
        <waitForPageLoad stepKey="waitForPageLoad5"/>
        <actionGroup ref="verifyPageBuilderVisibleOnPage" stepKey="verifyBluefootVisibleOnBlockPage"/>
    </test>
    <test name="VerifyPageBuilderEnableOnCMSPageWhenPageBuilderEnabledAndWYSIWYGEnabled">
        <annotations>
            <title value="Admin should be able to see PageBuilder on CMS Page after enable PageBuilder and WYSIWYG from Configuration"/>
            <description value="Admin should be able to see PageBuilder on CMS Page after enable PageBuilder and WYSIWYG from Configuration"/>
            <severity value="CRITICAL"/>
            <group value="pagebuilder"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="enablePageBuilder1" stepKey="enablePageBuilder"/>
            <createData entity="_defaultCmsPage" stepKey="createPreReqCMSPage" />
        </before>
        <after>
            <deleteData createDataKey="createPreReqCMSPage" stepKey="deletePreReqCMSPage" />
            <actionGroup ref="DisabledWYSIWYG" stepKey="disableWYSIWYG"/>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <!--Create CMS Page using PageBuilder-->
        <actionGroup ref="navigateToCreatedCMSPage" stepKey="navigateToContentCreatedCMSPage1">
            <argument name="CMSPage" value="$$createPreReqCMSPage$$"/>
        </actionGroup>
        <waitForElementVisible selector="{{PageBuilderActionsSection.identifyPageBuilder}}" stepKey="waitForPageBuilderDisplay" />
        <actionGroup ref="dragContentBlockToStage" stepKey="dragButtonsOntoStage">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
        </actionGroup>
        <waitForLoadingMaskToDisappear stepKey="waitForEditPanelSpinner"/>
        <fillField selector="{{CmsNewPagePageContentSection.TextArea}}" userInput="Hello CMS Page from PageBuilder" stepKey="addTextToEditor"/>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings"/>
        <click selector="{{CmsNewPagePageActionsSection.saveAndContinueEdit}}" stepKey="saveCMSWithPageBuilderContent" />
        <!--Enable WYSIWYG-->
        <actionGroup ref="EnabledWYSIWYG" stepKey="enableWYSIWYG"/>
        <actionGroup ref="navigateToCreatedCMSPage" stepKey="navigateToContentCreatedCMSPage2">
            <argument name="CMSPage" value="$$createPreReqCMSPage$$"/>
        </actionGroup>
        <actionGroup ref="verifyPageBuilderVisibleOnPage" stepKey="verifyPageBuilderVisibleOnCMSPage"/>
        <!--Verify PageBuilder enable on staging slide out of CMS Page-->
        <actionGroup ref="navigateToStagingSlideout" stepKey="navigateToStagingSlideoutCMS"/>
        <click selector="{{AdminStagingSlideOutSection.contentTab}}" stepKey="expandContentTab"/>
        <actionGroup ref="verifyPageBuilderVisibleOnPage" stepKey="seePageBuilderOnStaging"/>
    </test>
    <test name="VerifyPageBuilderEnableOnBlockPageWhenPageBuilderEnabledAndWYSIWYGDisabled">
        <annotations>
            <title value="Admin should be able to see PageBuilder on CMS Block Page after enable PageBuilder and disable WYSIWYG from Configuration"/>
            <description value="Admin should be able to see PageBuilder on CMS Block Page after enable PageBuilder and disable WYSIWYG from Configuration"/>
            <severity value="CRITICAL"/>
            <group value="pagebuilder"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <createData entity="_defaultBlock" stepKey="createPreReqBlock" />
        </before>
        <after>
            <deleteData createDataKey="createPreReqBlock" stepKey="deletePreReqBlock" />
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <!--Enable PageBuilder from Configuration-->
        <actionGroup ref="enablePageBuilder1" stepKey="enablePageBuilder"/>
        <!--Create CMS Block using PageBuilder-->
        <actionGroup ref="navigateToCreatedCMSBlockPage" stepKey="navigateToCreatedCMSBlockPage1">
            <argument name="CMSBlockPage" value="$$createPreReqBlock$$"/>
        </actionGroup>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragButtonsOntoStage">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
        </actionGroup>
        <waitForLoadingMaskToDisappear stepKey="waitForEditPanelSpinner"/>
        <fillField selector="{{CmsNewPagePageContentSection.TextArea}}" userInput="Hello CMS Block from PageBuilder" stepKey="addTextToEditor"/>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings"/>
        <click selector="{{BlockNewPagePageActionsSection.saveBlock}}" stepKey="clickSaveBlock"/>
        <see userInput="You saved the block." stepKey="seeSuccessMessage"/>
        <!--Disable WYSIWYG from Configuration-->
        <actionGroup ref="DisabledWYSIWYG" stepKey="disableWYSIWYG"/>
        <actionGroup ref="navigateToCreatedCMSBlockPage" stepKey="navigateToContentCreatedCMSBlockPage2">
            <argument name="CMSBlockPage" value="$$createPreReqBlock$$"/>
        </actionGroup>
        <actionGroup ref="verifyPageBuilderVisibleOnPage" stepKey="seePageBuilderOnPage"/>
        <!--Verify PageBuilder enable on staging slideout of CMS Block Page-->
        <actionGroup ref="navigateToStagingSlideout" stepKey="navigateToStagingSlideout"/>
        <actionGroup ref="verifyPageBuilderVisibleOnPage" stepKey="seePageBuilderOnStaging"/>
    </test>
    <test name="VerifyPageBuilderDisableOnDynamicBlockWhenPageBuilderDisabledAndWYSIWYGDisabled">
        <annotations>
            <title value="Admin should not be able to see PageBuilder on Dynamic Block Page after disable PageBuilder and disable WYSIWYG from Configuration"/>
            <description value="Admin should not be able to see PageBuilder on Dynamic Block Page after disable PageBuilder and disable WYSIWYG from Configuration"/>
            <severity value="CRITICAL"/>
            <group value="pagebuilder"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <!--Enable PageBuilder from Configuration-->
            <actionGroup ref="enablePageBuilder1" stepKey="enablePageBuilder"/>
        </before>
        <after>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <!--Create Dynamic Block using PageBuilder-->
        <amOnPage url="{{AdminBannerPage}}" stepKey="goToNewBannerPage" />
        <waitForPageLoad stepKey="waitForPageLoad" />
        <actionGroup ref="fillDynamicBlockName" stepKey="fillDynamicBlockName">
            <argument name="Banner" value="sampleBanner"/>
        </actionGroup>
        <click selector="{{PageBuilderActionsSection.openPageBuilder}}" stepKey="enablePageBuilderBtn"/>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragButtonsOntoStage">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage">
            <argument name="contentBlockType" value="PageBuilderTextContentBlock"/>
        </actionGroup>
        <waitForLoadingMaskToDisappear stepKey="waitForEditPanelSpinner"/>
        <fillField selector="{{CmsNewPagePageContentSection.TextArea}}" userInput="Hello Dynamic Block from PageBuilder" stepKey="addTextToEditor"/>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings"/>
        <see userInput="Hello Dynamic Block from PageBuilder" stepKey="seeTypedTextOnStorefront"/>
        <click selector="{{AdminBannerBasicActionSection.Save}}" stepKey="clickSaveBanner" />
        <!--Enable WYSIWYG-->
        <actionGroup ref="EnabledWYSIWYG" stepKey="enableWYSIWYG"/>
        <!--Disable PageBuilder from Configuration-->
        <actionGroup ref="disablePageBuilder" stepKey="disablePageBuilder"/>
        <actionGroup ref="navigateToCreatedDynamicBlock" stepKey="navigateToCreatedDynamicBlock">
            <argument name="Banner" value="sampleBanner"/>
        </actionGroup>
        <seeElement selector="{{TinyMCESection.TinyMCE4}}" stepKey="seeTinyMCE4Visible" />
        <grabTextFrom selector="#cms_page_form_content" stepKey="grabTextFromTintMCE4" />
        <assertEquals actualType="variable" actual="grabTextFromTintMCE4" expectedType="string" expected="Hello CMS Block Page from PageBuilder" stepKey="seePageBuilderContent" />
        <!--Verify PageBuilder disable on staging slideout of CMS Block Page-->
        <actionGroup ref="navigateToStagingSlideout" stepKey="navigateToStagingSlideout"/>
        <seeElement selector="{{TinyMCESection.TinyMCE4}}" stepKey="seeTinyMCE4Visible" />
        <grabTextFrom selector="#cms_page_form_content" stepKey="grabTextFromTintMCE4" />
        <assertEquals actualType="variable" actual="grabTextFromTintMCE4" expectedType="string" expected="Hello CMS Block Page from PageBuilder" stepKey="seePageBuilderContent" />
    </test>
</tests>
