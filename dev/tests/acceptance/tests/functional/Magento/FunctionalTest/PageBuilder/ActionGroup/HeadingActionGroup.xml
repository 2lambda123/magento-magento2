<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<actionGroups xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:noNamespaceSchemaLocation="../../../../../../vendor/magento/magento2-functional-testing-framework/src/Magento/FunctionalTestingFramework/Test/etc/actionGroupSchema.xsd">
    <actionGroup name="verifyHeadingInStage">
        <arguments>
            <argument name="headingType" defaultValue="PageBuilderHeadingTypeDefaultProperty"/>
            <argument name="headingText" defaultValue="PageBuilderHeadingTextProperty"/>
            <argument name="index" defaultValue="1" type="string"/>
        </arguments>
        <waitForElement selector="{{HeadingOnStage.headingType(headingType.value, index)}}" stepKey="waitForHeadingStyle"/>
        <seeElement selector="{{HeadingOnStage.headingText(headingType.value, headingText.value, index)}}" stepKey="seeStageHeadingText"/>
    </actionGroup>
    <actionGroup name="verifyHeadingInStorefront">
        <arguments>
            <argument name="headingType" defaultValue="PageBuilderHeadingTypeDefaultProperty"/>
            <argument name="headingText" defaultValue="PageBuilderHeadingTextProperty"/>
            <argument name="index" defaultValue="1" type="string"/>
        </arguments>
        <waitForElementVisible selector="{{HeadingOnStorefront.headingType(headingType.value, index)}}" stepKey="waitForStorefrontHeadingStyle"/>
        <seeElement selector="{{HeadingOnStorefront.headingText(headingType.value, headingText.value, index)}}" stepKey="seeStorefrontHeadingText"/>
    </actionGroup>
    <actionGroup name="verifyHeadingDefaultAdvancedConfiguration">
        <arguments>
            <argument name="page" defaultValue=""/>
            <argument name="headingType" defaultValue="PageBuilderHeadingTypeDefaultProperty"/>
            <argument name="border" defaultValue="PageBuilderAdvancedBorderPropertyNone"/>
            <argument name="borderRadius" defaultValue="PageBuilderAdvancedBorderRadiusDefaultProperty"/>
            <argument name="borderWidth" defaultValue="PageBuilderAdvancedBorderWidthPropertyDefault"/>
            <argument name="index" defaultValue="1" type="string"/>
        </arguments>
        <waitForElementVisible selector="{{page.base(headingType.value, index)}}" stepKey="waitForElementVisible"/>
        <waitForElementVisible selector="{{page.noAlignment(headingType.value, index)}}" stepKey="waitForAlignmentVisible"/>
        <waitForElementVisible selector="{{page.border(headingType.value, index, border.value)}}" stepKey="waitForBorderVisible"/>
        <waitForElementVisible selector="{{page.noBorderColor(headingType.value, index)}}" stepKey="waitForBorderColorVisible"/>
        <waitForElementVisible selector="{{page.borderWidth(headingType.value, index, borderWidth.value)}}" stepKey="waitForBorderWidthVisible"/>
        <waitForElementVisible selector="{{page.borderRadius(headingType.value, index, borderRadius.value)}}" stepKey="waitForBorderRadiusVisible"/>
        <waitForElementVisible selector="{{page.noCssClasses(headingType.value, index)}}" stepKey="waitForCSSClassesVisible"/>
        <waitForElementVisible selector="{{page.noMargins(headingType.value, index)}}" stepKey="waitForMarginVisible"/>
        <waitForElementVisible selector="{{page.noPadding(headingType.value, index)}}" stepKey="waitForPaddingVisible"/>
    </actionGroup>
    <actionGroup name="verifyHeadingAdvancedConfigurationWithAllUpdated">
        <arguments>
            <argument name="page" defaultValue=""/>
            <argument name="headingType" defaultValue="PageBuilderHeadingTypeDefaultProperty"/>
            <argument name="alignment" defaultValue="PageBuilderAdvancedAlignmentPropertyDefault"/>
            <argument name="border" defaultValue="PageBuilderAdvancedBorderPropertyNone"/>
            <argument name="borderColor" defaultValue=""/>
            <argument name="borderWidth" defaultValue="PageBuilderAdvancedBorderWidthPropertyDefault"/>
            <argument name="borderRadius" defaultValue="PageBuilderAdvancedBorderRadiusDefaultProperty"/>
            <argument name="cssClasses" defaultValue=""/>
            <argument name="margin" defaultValue="PageBuilderMarginsPropertyDefault"/>
            <argument name="padding" defaultValue="PageBuilderPaddingPropertyDefault"/>
            <argument name="index" defaultValue="1" type="string"/>
        </arguments>
        <waitForElementVisible selector="{{page.base(headingType.value, index)}}" stepKey="waitForElementVisible"/>
        <waitForElementVisible selector="{{page.alignment(headingType.value, index, alignment.value)}}" stepKey="waitForAlignmentVisible"/>
        <waitForElementVisible selector="{{page.border(headingType.value, index, border.value)}}" stepKey="waitForBorderVisible"/>
        <waitForElementVisible selector="{{page.borderColor(headingType.value, index, borderColor.value)}}" stepKey="waitForBorderColorVisible"/>
        <waitForElementVisible selector="{{page.borderWidth(headingType.value, index, borderWidth.value)}}" stepKey="waitForBorderWidthVisible"/>
        <waitForElementVisible selector="{{page.borderRadius(headingType.value, index, borderRadius.value)}}" stepKey="waitForBorderRadiusVisible"/>
        <waitForElementVisible selector="{{page.cssClasses(headingType.value, index, cssClasses.value)}}" stepKey="waitForCSSClassesVisible"/>
        <waitForElementVisible selector="{{page.margins(headingType.value, index, margin.value)}}" stepKey="waitForMarginVisible"/>
        <waitForElementVisible selector="{{page.padding(headingType.value, index, padding.value)}}" stepKey="waitForPaddingVisible"/>
    </actionGroup>
    <actionGroup name="verifyHeadingDefaultAdvancedConfigurationNotVisible">
        <arguments>
            <argument name="page" defaultValue=""/>
            <argument name="headingType" defaultValue="PageBuilderHeadingTypeDefaultProperty"/>
            <argument name="border" defaultValue="PageBuilderAdvancedBorderPropertyNone"/>
            <argument name="borderRadius" defaultValue="PageBuilderAdvancedBorderRadiusDefaultProperty"/>
            <argument name="borderWidth" defaultValue="PageBuilderAdvancedBorderWidthPropertyDefault"/>
            <argument name="index" defaultValue="1" type="string"/>
        </arguments>
        <waitForElement selector="{{page.base(headingType.value, index)}}" stepKey="waitForElement"/>
        <dontSeeElement selector="{{page.base(headingType.value, index)}}" stepKey="dontSeeElement"/>
        <waitForElement selector="{{page.noAlignment(headingType.value, index)}}" stepKey="waitForAlignment"/>
        <dontSeeElement selector="{{page.noAlignment(headingType.value, index)}}" stepKey="dontSeeAlignment"/>
        <waitForElement selector="{{page.border(headingType.value, index, border.value)}}" stepKey="waitForBorder"/>
        <dontSeeElement selector="{{page.border(headingType.value, index, border.value)}}" stepKey="dontSeeBorder"/>
        <waitForElement selector="{{page.noBorderColor(headingType.value, index)}}" stepKey="waitForBorderColor"/>
        <dontSeeElement selector="{{page.noBorderColor(headingType.value, index)}}" stepKey="dontSeeBorderColor"/>
        <waitForElement selector="{{page.borderWidth(headingType.value, index, borderWidth.value)}}" stepKey="waitForBorderWidth"/>
        <dontSeeElement selector="{{page.borderWidth(headingType.value, index, borderWidth.value)}}" stepKey="dontSeeBorderWidth"/>
        <waitForElement selector="{{page.borderRadius(headingType.value, index, borderRadius.value)}}" stepKey="waitForBorderRadius"/>
        <dontSeeElement selector="{{page.borderRadius(headingType.value, index, borderRadius.value)}}" stepKey="dontSeeBorderRadius"/>
        <waitForElement selector="{{page.noCssClasses(headingType.value, index)}}" stepKey="waitForCSSClasses"/>
        <dontSeeElement selector="{{page.noCssClasses(headingType.value, index)}}" stepKey="dontSeeCSSClasses"/>
        <waitForElement selector="{{page.noMargins(headingType.value, index)}}" stepKey="waitForMargin"/>
        <dontSeeElement selector="{{page.noMargins(headingType.value, index)}}" stepKey="dontSeeMargin"/>
        <waitForElement selector="{{page.noPadding(headingType.value, index)}}" stepKey="waitForPadding"/>
        <dontSeeElement selector="{{page.noPadding(headingType.value, index)}}" stepKey="dontSeePadding"/>
    </actionGroup>
</actionGroups>
