<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<actionGroups xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:noNamespaceSchemaLocation="../../../../../../vendor/magento/magento2-functional-testing-framework/src/Magento/FunctionalTestingFramework/Test/etc/actionGroupSchema.xsd">
    <actionGroup name="addMapPin">
        <waitForElementVisible selector="{{MapOnConfigurationPanel.base}}" stepKey="waitForMapVisible"/>
        <click selector="{{MapOnConfigurationPanel.base}}" stepKey="clickMap"/>
        <waitForElementVisible selector="{{MapOnConfigurationPanel.pin}}" stepKey="waitForPinVisible"/>
    </actionGroup>
    <actionGroup name="moveMapPinByClick">
        <arguments>
            <argument name="x" defaultValue="1" type="string"/>
            <argument name="y" defaultValue="1" type="string"/>
        </arguments>
        <waitForElementVisible selector="{{MapOnConfigurationPanel.base}}" stepKey="waitForMapVisible"/>
        <clickWithLeftButton selector="{{MapOnConfigurationPanel.base}}" x="1" y="1" stepKey="clickMapToMovePin"/>
        <wait time="2" stepKey="waitForPinMove"/>
    </actionGroup>
    <actionGroup name="verifyMapHasPin">
        <arguments>
            <argument name="page" defaultValue="MapOnStage"/>
            <argument name="index" defaultValue="1" type="string"/>
        </arguments>
        <waitForElementVisible selector="{{page.pin(index)}}" stepKey="waitForMapWithPin"/>
    </actionGroup>
    <actionGroup name="dontSeeMapPin">
        <arguments>
            <argument name="page" defaultValue="MapOnStage"/>
            <argument name="index" defaultValue="1" type="string"/>
        </arguments>
        <dontSeeElementInDOM selector="{{page.pin(index)}}" stepKey="dontSeeMapPin"/>
    </actionGroup>
    <actionGroup name="validateMapButtons">
        <arguments>
            <argument name="page" defaultValue="MapOnStage"/>
            <argument name="index" defaultValue="1" type="string"/>
        </arguments>
        <waitForElementVisible selector="{{page.fullScreen(index)}}" stepKey="waitForFullScreenButton"/>
        <waitForElementVisible selector="{{page.pegman(index)}}" stepKey="waitForMapPegman"/>
        <waitForElementVisible selector="{{page.satelliteView(index)}}" stepKey="waitForMapSatelliteView"/>
        <waitForElementVisible selector="{{page.streetView(index)}}" stepKey="waitForMapStreetView"/>
        <waitForElementVisible selector="{{page.zoomIn(index)}}" stepKey="waitForMapZoomIn"/>
        <waitForElementVisible selector="{{page.zoomOut(index)}}" stepKey="waitForMapZoomOut"/>
    </actionGroup>
    <actionGroup name="validateMapHelperText">
        <waitForElementVisible selector="{{MapOnConfigurationPanel.helperText}}" stepKey="seeMapHelperText"/>
    </actionGroup>
    <actionGroup name="validateMap">
        <arguments>
            <argument name="page" defaultValue=""/>
            <argument name="width" defaultValue="PageBuilderMapWidthDefaultProperty"/>
            <argument name="height" defaultValue="PageBuilderMapHeightDefaultProperty"/>
            <argument name="alignment" defaultValue="PageBuilderAdvancedAlignmentPropertyDefault"/>
            <argument name="cssClasses" defaultValue=""/>
            <argument name="marginAndPadding" defaultValue="PageBuilderAdvancedMarginsAndPaddingPropertyDefault"/>
            <argument name="index" defaultValue="1" type="string"/>
        </arguments>
        <waitForElementVisible selector="{{page.base(index)}}" stepKey="seeMap"/>
        <waitForElementVisible selector="{{page.width(index, width.value)}}" stepKey="waitForMapWidth"/>
        <waitForElementVisible selector="{{page.height(index, height.value)}}" stepKey="waitForMapHeight"/>
    </actionGroup>
    <actionGroup name="validateEmptyMapStoreFront">
        <arguments>
            <argument name="index" defaultValue="1" type="string"/>
        </arguments>
        <waitForElement selector="{{MapOnStorefront.emptyMap(index)}}" stepKey="seeInDOMEmptyMapOnFrontend"/>
        <dontSeeElement selector="{{MapOnStorefront.emptyMap(index)}}" stepKey="dontSeeEmptyMapOnFrontend"/>
        <seeElementInDOM selector="{{MapOnStorefront.height(index, PageBuilderMapHeightDefaultProperty.value)}}" stepKey="seeInDOMEmptyMapHeightOnFrontend"/>
        <dontSeeElement selector="{{MapOnStorefront.height(index, PageBuilderMapHeightDefaultProperty.value)}}" stepKey="dontSeeEmptyMapHeightOnFrontend"/>
        <seeElementInDOM selector="{{MapOnStorefront.width(index, PageBuilderMapWidthDefaultProperty.value)}}" stepKey="seeInDOMEmptyMapWidthOnFrontend"/>
        <dontSeeElement selector="{{MapOnStorefront.width(index, PageBuilderMapWidthDefaultProperty.value)}}" stepKey="dontSeeEmptyMapWidthOnFrontend"/>
    </actionGroup>
    <actionGroup name="validateWarningMessageOnConfigurationPanel">
        <waitForElementVisible selector="{{MapOnConfigurationPanel.warningMessage}}" stepKey="waitFroWarningMessage"/>
        <see userInput="{{googleMapsAPIKey.warningMessage}}" selector="{{MapOnConfigurationPanel.warningMessage}}" stepKey="seeWarningMessage"/>
    </actionGroup>
    <actionGroup name="dontSeeWarningMessage">
        <arguments>
            <argument name="page" defaultValue="MapOnStage"/>
            <argument name="index" defaultValue="1" type="string"/>
        </arguments>
        <waitForElement selector="{{page.base(index)}}" stepKey="seeMap"/>
        <dontSee userInput="{{googleMapsAPIKey.warningMessage}}" stepKey="dontSeeWarningMessage"/>
    </actionGroup>
    <actionGroup name="validateMapErrorMessage">
        <arguments>
            <argument name="page" defaultValue="MapOnStage"/>
            <argument name="index" defaultValue="1" type="string"/>
        </arguments>
        <waitForElement selector="{{page.base(index)}}" stepKey="seeMap"/>
        <waitForElementVisible selector="{{page.errorContainer(index)}}" stepKey="seeMapErrorContainer"/>
        <see userInput="{{PageBuilderGoogleMapsAPIKeys.mapErrorTitle}}" selector="{{page.errorTitle(index)}}" stepKey="seeMapErrorTitle"/>
        <see userInput="{{PageBuilderGoogleMapsAPIKeys.mapErrorMessage}}" selector="{{page.errorMessage(index)}}" stepKey="seeMapErrorMessage"/>
    </actionGroup>
    <actionGroup name="dontSeeRenderedMapOnConfigurationPanel">
        <arguments>
            <argument name="index" defaultValue="1" type="string"/>
        </arguments>
        <waitForElementVisible selector="{{MapOnConfigurationPanel.base(index)}}" stepKey="seeMap"/>
        <dontSeeElementInDOM selector="{{MapOnConfigurationPanel.renderedMap}}" stepKey="dontSeeRenderedMap"/>
    </actionGroup>
</actionGroups>
