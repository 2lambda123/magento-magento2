<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<actionGroups xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:noNamespaceSchemaLocation="../../../../../../vendor/magento/magento2-functional-testing-framework/src/Magento/FunctionalTestingFramework/Test/etc/actionGroupSchema.xsd">
    <actionGroup name="addMapPin">
        <waitForElementVisible selector="{{MapOnConfigurationPanel.map}}" stepKey="waitForMapVisible"/>
        <click selector="{{MapOnConfigurationPanel.mapAddPin}}" stepKey="clickMap"/>
        <waitForElementVisible selector="{{MapOnConfigurationPanel.mapPin}}" stepKey="waitForPinVisible"/>
    </actionGroup>
    <actionGroup name="moveMapPinByClick">
        <arguments>
            <argument name="x" defaultValue="10"/>
            <argument name="y" defaultValue="50"/>
        </arguments>
        <waitForElementVisible selector="{{MapOnConfigurationPanel.map}}" stepKey="waitForMapVisible"/>
        <waitForElementVisible selector="{{MapOnConfigurationPanel.mapPinInitialLocation}}" stepKey="waitForInitialPinLocation"/>
        <clickWithLeftButton selector="{{MapOnConfigurationPanel.mapAddPin}}" x="10" y="50" stepKey="clickMapToMovePin"/>
        <waitForElementNotVisible selector="{{MapOnConfigurationPanel.mapPinInitialLocation}}" stepKey="dontSeeInitialPinLocation"/>
        <waitForElementVisible selector="{{MapOnConfigurationPanel.mapPinMovedLocation}}" stepKey="seePinMoved"/>
    </actionGroup>
    <actionGroup name="validateEmptyMapConfigurationPanel">
        <waitForElementVisible selector="{{MapOnConfigurationPanel.map}}" stepKey="waitForMapVisible"/>
        <seeElement selector="{{MapOnConfigurationPanel.mapFullScreen}}" stepKey="seeFullScreenButton"/>
        <seeElement selector="{{MapOnConfigurationPanel.mapPegman}}" stepKey="seePegmanButton"/>
        <seeElement selector="{{MapOnConfigurationPanel.mapSatelliteView}}" stepKey="seeSatelliteViewButton"/>
        <seeElement selector="{{MapOnConfigurationPanel.mapStreetView}}" stepKey="seeStreetViewButton"/>
        <seeElement selector="{{MapOnConfigurationPanel.mapZoomIn}}" stepKey="seeZoomInButton"/>
        <seeElement selector="{{MapOnConfigurationPanel.mapZoomOut}}" stepKey="seeZoomOutButton"/>
        <dontSeeElementInDOM selector="{{MapOnConfigurationPanel.mapPin}}" stepKey="dontSeePinOnConfigurationMap"/>
    </actionGroup>
    <actionGroup name="validateEmptyMapStage">
        <!-- Must scroll to map so that some elements are viewable by Selenium -->
        <scrollTo selector="{{CmsNewPagePageContentSection.header}}" stepKey="scrollTokMap"/>
        <waitForElementVisible selector="{{MapOnStage.emptyMap(PageBuilderMapPositionDefaultProperty.lat, PageBuilderMapPositionDefaultProperty.lng)}}" stepKey="seeEmptyMap"/>
        <seeElement selector="{{MapOnStage.mapHeight(PageBuilderMapHeightDefaultProperty.value)}}" stepKey="seeEmptyMapHeight"/>
        <seeElement selector="{{MapOnStage.mapWidth(PageBuilderMapWidthDefaultProperty.value)}}" stepKey="seeEmptyMapWidth"/>
        <seeElement selector="{{MapOnStage.mapMargin(PageBuilderAdvancedMarginsAndPaddingPropertyDefault.marginTop)}}" stepKey="seeMapMargin"/>
        <seeElement selector="{{MapOnStage.mapPadding(PageBuilderAdvancedMarginsAndPaddingPropertyDefault.paddingTop)}}" stepKey="seeMapPadding"/>
        <seeElement selector="{{MapOnStage.mapNoAlignment}}" stepKey="seeMapNoAlignment"/>
        <dontSeeElementInDOM selector="{{MapOnStage.mapWithPin(PageBuilderMapPinDefaultProperty.lat, PageBuilderMapPinDefaultProperty.lng)}}" stepKey="dontSeePinOnStage"/>
        <!-- Attach an id to map iFrame so we can interact with it -->
        <executeJS function="document.querySelectorAll('{{MapOnStage.mapGetIFrameJS}}')[0].setAttribute('id', 'mapIFrame');" stepKey="makeIFrameInteractable"/>
        <switchToIFrame selector="mapIFrame" stepKey="switchToIFrame"/>
        <waitForElementVisible selector="{{MapOnStage.mapProfileButton}}" stepKey="seeMapProfileButton"/>
        <seeElement selector="{{MapOnStage.mapSatelliteView}}" stepKey="seeMapSatelliteView"/>
        <seeElement selector="{{MapOnStage.mapViewLargerMapButton}}" stepKey="seemapViewLargerMapButton"/>
        <seeElement selector="{{MapOnStage.mapZoomIn}}" stepKey="seeMapZoomIn"/>
        <seeElement selector="{{MapOnStage.mapZoomOut}}" stepKey="seeMapZoomOut"/>
        <dontSeeElementInDOM selector="{{MapOnFrontend.mapToolTip}}" stepKey="dontSeeToolTip"/>
        <switchToIFrame selector="" stepKey="exitIFrame"/>
    </actionGroup>
    <actionGroup name="validateMapToolTipStage">
        <arguments>
            <argument name="property" defaultValue="PageBuilderMapPinDefaultProperty"/>
        </arguments>
        <!-- Must scroll to map so that some elements are viewable by Selenium -->
        <scrollTo selector="{{CmsNewPagePageContentSection.header}}" stepKey="scrollTokMap"/>
        <!-- Attach an id to map iFrame so we can interact with it -->
        <executeJS function="document.querySelectorAll('{{MapOnStage.mapGetIFrameJS}}')[0].setAttribute('id', 'mapIFrame');" stepKey="makeIFrameInteractable"/>
        <switchToIFrame selector="mapIFrame" stepKey="switchToIFrame"/>
        <waitForElementVisible selector="{{MapOnStage.mapToolTip}}" stepKey="waitForToolTipVisible"/>
        <waitForElementVisible selector="{{MapOnStage.mapToolTipCoordinates(property.toolTipCoordinates)}}" stepKey="seeCoordinates"/>
        <waitForElementVisible selector="{{MapOnStage.mapToolTipDirectionsButton}}" stepKey="seeDirectionsButton"/>
        <waitForElementVisible selector="{{MapOnStage.mapToolTipSaveButton}}" stepKey="seeSaveButton"/>
        <waitForElementVisible selector="{{MapOnStage.mapToolTipViewLargerMapButton}}" stepKey="seeViewLargerMapButton"/>
        <switchToIFrame selector="" stepKey="exitIFrame"/>
    </actionGroup>
    <actionGroup name="validateMapToolTipStage2">
        <arguments>
            <argument name="property" defaultValue="PageBuilderMapPinDefaultProperty"/>
        </arguments>
        <!-- Must scroll to map so that some elements are viewable by Selenium -->
        <scrollTo selector="{{MapOnStage.mapByIndex('2')}}" stepKey="scrollToMap"/>
        <!-- Attach an id to map iFrame so we can interact with it -->
        <executeJS function="document.querySelectorAll('{{MapOnStage.mapGetIFrameJS}}')[1].setAttribute('id', 'mapIFrame2');" stepKey="makeIFrameInteractable"/>
        <switchToIFrame selector="mapIFrame2" stepKey="switchToIFrame"/>
        <waitForElementVisible selector="{{MapOnStage.mapToolTip}}" stepKey="waitForToolTipVisible"/>
        <waitForElementVisible selector="{{MapOnStage.mapToolTipCoordinates(property.toolTipCoordinates)}}" stepKey="seeCoordinates"/>
        <waitForElementVisible selector="{{MapOnStage.mapToolTipDirectionsButton}}" stepKey="seeDirectionsButton"/>
        <waitForElementVisible selector="{{MapOnStage.mapToolTipSaveButton}}" stepKey="seeSaveButton"/>
        <waitForElementVisible selector="{{MapOnStage.mapToolTipViewLargerMapButton}}" stepKey="seeViewLargerMapButton"/>
        <switchToIFrame selector="" stepKey="exitIFrame"/>
    </actionGroup>
    <actionGroup name="validateEmptyMapStoreFront">
        <waitForElement selector="{{MapOnFrontend.emptyMap}}" stepKey="seeInDOMEmptyMapOnFrontend"/>
        <dontSeeElement selector="{{MapOnFrontend.emptyMap}}" stepKey="dontSeeEmptyMapOnFrontend"/>
        <seeElementInDOM selector="{{MapOnFrontend.mapHeight(PageBuilderMapHeightDefaultProperty.value)}}" stepKey="seeInDOMEmptyMapHeightOnFrontend"/>
        <dontSeeElement selector="{{MapOnFrontend.mapHeight(PageBuilderMapHeightDefaultProperty.value)}}" stepKey="dontSeeEmptyMapHeightOnFrontend"/>
        <seeElementInDOM selector="{{MapOnFrontend.mapWidth(PageBuilderMapWidthDefaultProperty.value)}}" stepKey="seeInDOMEmptyMapWidthOnFrontend"/>
        <dontSeeElement selector="{{MapOnFrontend.mapWidth(PageBuilderMapWidthDefaultProperty.value)}}" stepKey="dontSeeEmptyMapWidthOnFrontend"/>
        <seeElementInDOM selector="{{MapOnFrontend.mapMargin(PageBuilderAdvancedMarginsAndPaddingPropertyDefault.marginTop)}}" stepKey="seeInDOMMapMarginOnFrontend"/>
        <dontSeeElement selector="{{MapOnFrontend.mapMargin(PageBuilderAdvancedMarginsAndPaddingPropertyDefault.marginTop)}}" stepKey="dontSeeMapMarginOnFrontend"/>
        <seeElementInDOM selector="{{MapOnFrontend.mapPadding(PageBuilderAdvancedMarginsAndPaddingPropertyDefault.paddingTop)}}" stepKey="seeInDOMMapPaddingOnFrontend"/>
        <dontSeeElement selector="{{MapOnFrontend.mapPadding(PageBuilderAdvancedMarginsAndPaddingPropertyDefault.paddingTop)}}" stepKey="dontSeeMapPaddingOnFrontend"/>
        <seeElementInDOM selector="{{MapOnFrontend.mapNoAlignment}}" stepKey="seeInDOMNoAlignment"/>
        <dontSeeElement selector="{{MapOnFrontend.mapNoAlignment}}" stepKey="dontSeeMapNoAlignment"/>
        <dontSeeElementInDOM selector="{{MapOnFrontend.mapWithPin(PageBuilderMapPinDefaultProperty.lat, PageBuilderMapPinDefaultProperty.lng)}}" stepKey="dontSeePinOnMapOnFrontend"/>
    </actionGroup>
    <actionGroup name="validateMapToolTipStoreFront">
        <arguments>
            <argument name="property" defaultValue="PageBuilderMapPinDefaultProperty"/>
        </arguments>
        <!-- Attach an id to map iFrame so we can interact with it -->
        <executeJS function="document.querySelectorAll('{{MapOnFrontend.mapGetIFrameJS}}')[0].setAttribute('id', 'mapIFrame');" stepKey="makeIFrameInteractable"/>
        <switchToIFrame selector="mapIFrame" stepKey="switchToIFrame"/>
        <waitForElementVisible selector="{{MapOnFrontend.mapToolTip}}" stepKey="waitForToolTipVisible"/>
        <waitForElementVisible selector="{{MapOnFrontend.mapToolTipCoordinates(property.toolTipCoordinates)}}" stepKey="seeCoordinates"/>
        <waitForElementVisible selector="{{MapOnFrontend.mapToolTipDirectionsButton}}" stepKey="seeDirectionsButton"/>
        <waitForElementVisible selector="{{MapOnFrontend.mapToolTipSaveButton}}" stepKey="seeSaveButton"/>
        <waitForElementVisible selector="{{MapOnFrontend.mapToolTipViewLargerMapButton}}" stepKey="seeViewLargerMapButton"/>
        <switchToIFrame selector="" stepKey="exitIFrame"/>
    </actionGroup>
    <actionGroup name="validateMapToolTipStoreFront2">
        <arguments>
            <argument name="property" defaultValue="PageBuilderMapPinDefaultProperty"/>
        </arguments>
        <!-- Attach an id to map iFrame so we can interact with it -->
        <executeJS function="document.querySelectorAll('{{MapOnFrontend.mapGetIFrameJS}}')[1].setAttribute('id', 'mapIFrame2');" stepKey="makeIFrameInteractable"/>
        <switchToIFrame selector="mapIFrame2" stepKey="switchToIFrame"/>
        <waitForElementVisible selector="{{MapOnFrontend.mapToolTip}}" stepKey="waitForToolTipVisible"/>
        <waitForElementVisible selector="{{MapOnFrontend.mapToolTipCoordinates(property.toolTipCoordinates)}}" stepKey="seeCoordinates"/>
        <waitForElementVisible selector="{{MapOnFrontend.mapToolTipDirectionsButton}}" stepKey="seeDirectionsButton"/>
        <waitForElementVisible selector="{{MapOnFrontend.mapToolTipSaveButton}}" stepKey="seeSaveButton"/>
        <waitForElementVisible selector="{{MapOnFrontend.mapToolTipViewLargerMapButton}}" stepKey="seeViewLargerMapButton"/>
        <switchToIFrame selector="" stepKey="exitIFrame"/>
    </actionGroup>
</actionGroups>