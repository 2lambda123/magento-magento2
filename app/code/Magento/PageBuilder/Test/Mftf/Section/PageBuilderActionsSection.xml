<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<sections xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:noNamespaceSchemaLocation="../../../../../../../dev/tests/acceptance/vendor/magento/magento2-functional-testing-framework/src/Magento/FunctionalTestingFramework/Page/etc/SectionObject.xsd">
    <section name="PageBuilderActionsSection">
        <element name="openPageBuilder" type="button" selector=".init-magento-pagebuilder" timeout="30"/>
        <element name="openPageBuilderCatalog" type="button" selector="[data-index='description'] button.action-default"/>
        <element name="openFullScreen" type="button" selector="//i[@class='icon-pagebuilder-fullscreen']"/>
        <element name="exitFullScreen" type="button" selector="//i[@class='icon-pagebuilder-fullscreen-exit']"/>
        <element name="stageLoading" type="button" selector="div.pagebuilder-stage-loading"/>
        <element name="stageWrapper" type="button" selector="//div[@class='pagebuilder-stage-wrapper']"/>
        <element name="stageWrapperFullScreen" type="button" selector="div.pagebuilder-stage-wrapper.stage-full-screen"/>
        <element name="searchField" type="input" selector='//*[@id="pagebuilder-panel"]/div[1]/a'/>
        <element name="clearSearch" type="button" selector='//*[@id="pagebuilder-panel"]/div[1]/a'/>
        <element name="collapsePanel" type="button" selector='//div[contains(@class, "panel-controls")]//a[contains(@class, "collapse")]'/>
        <element name="panelCollapsed" type="button" selector='(//div[contains(@class, "pagebuilder-stage") and contains(@class, "panel-collapsed")])'/>
        <element name="expandPanel" type="button" selector='//div[contains(@class, "expand")]//a'/>
        <element name="firstSection" type="button" selector='//*[@id="pagebuilder-panel-groups"]/li[1]' timeout="30"/>
        <element name="panelGroup" type="button" selector="//div[@id='pagebuilder-panel']//h4[.='{{arg1}}']" parameterized="true"/>
        <element name="panelGroupActive" type="button" selector="//div[@id='pagebuilder-panel']//li[@class='active']//h4[.='{{arg1}}']" parameterized="true"/>
        <element name="generalGroup" type="button" selector='//*[@id="group-general"]' timeout="10"/>
        <element name="generalGroupContentType" type="button" selector='//*[@id="group-general"]/div/div/ul/li/a/span[2]'/>
        <element name="mediaGroup" type="button" selector='//*[@id="group-media"]'/>
        <element name="mediaGroupContentType" type="button" selector='//*[@id="group-media"]/div/div/ul/li/a/span[2]'/>
        <element name="interactiveGroup" type="button" selector='//*[@id="group-interactive"]'/>
        <element name="interactiveGroupContentType" type="button" selector='//*[@id="group-interactive"]/div/div/ul/li/a/span[2]'/>
        <element name="magentoGroup" type="button" selector='//*[@id="group-magento"]'/>
        <element name="magentoGroupContentType" type="button" selector='//*[@id="group-magento"]/div/div/ul/li/a/span[2]'/>
        <element name="otherGroup" type="button" selector='//*[@id="group-other"]'/>
        <element name="otherGroupContentType" type="button" selector='//*[@id="group-other"]/div/div/ul/li/a/span[2]'/>
        <element name="searchPanel" type="input" selector='//*[@id="search-content-types-input"]' timeout="30"/>
        <element name="searchResults" type="text" selector='//*[@id="search-results"]' timeout="30"/>
        <element name="nothingFound" type="text" selector='//*[@id="pagebuilder-panel"]/div[2]/div' timeout="30"/>
        <element name="modal" type="text" selector='body._has-modal div.modals-wrapper aside.modal-popup.prompt._show'/>
        <element name="modalOk" type="button" selector=".modal-popup button.action-primary.action-accept"/>
        <element name="modalCancel" type="button" selector="//aside[contains(@class,'modal-popup')]//button[contains(@class,'action-dismiss')]//span[.='Cancel']"/>
        <element name="modalX" type="button" selector=".modal-popup button.action-close"/>
        <!-- It's safer to click the label, as Selenium will complain if it's not clicking the exact element -->
        <element name="modalDoNotShowThisAgain" type="input" selector=".modal-popup input[name='modal-dnsa'] + label"/>
        <element name="unableToRemoveTitle" type="text" selector='//aside[contains(@class, "modal-popup")]/div[@class="modal-inner-wrap"]/header/h1[contains(text(), "Unable to Remove")]'/>
        <element name="draggableContentTypeInPanel" type="button" selector='//*[text()="{{arg1}}"]/ancestor::*[contains(@class, "ui-draggable")]' parameterized="true"/>
        <element name="dropAreaInStage" type="button" selector='(//div[contains(@class, "type-container") and contains(@class, "pagebuilder-row")])[1]//div[contains(@class,"pagebuilder-empty-container")][1]'/>
        <element name="dropZone" type="button" selector='(//div[contains(@class, "{{arg1}}-container")])[{{arg2}}]//div[contains(@class,"pagebuilder-drop-indicator")][{{arg3}}]' parameterized="true"/>
        <element name="stageLoading" type="button" selector="div.pagebuilder-stage-loading"/>
        <element name="contentTypeInStage" type="button" selector='(//div[contains(@class, "pagebuilder-content-type") and contains(@class, "pagebuilder-{{arg1}}")])[1]' parameterized="true"/>
        <element name="contentTypeInStageByIndex" type="button" selector='(//div[contains(@class, "pagebuilder-content-type") and contains(@class, "pagebuilder-{{arg1}}")])[{{arg2}}]' parameterized="true"/>
        <element name="contentTypeContainer" type="button" selector='(//div[contains(@class, "pagebuilder-content-type") and contains(@class, "pagebuilder-{{arg1}}")])[{{arg2}}]/descendant::div[contains(@class, "element-children")]' parameterized="true"/>
        <element name="contentTypeInsideContainerStage" type="button" selector='(//div[contains(@class, "{{arg1}}-container")])[{{arg2}}]//div[contains(@class,"pagebuilder-content-type-wrapper")][{{arg3}}]//div[contains(@class,"pagebuilder-{{arg4}}")][{{arg5}}]' parameterized="true"/>
        <element name="contentTypeInsideContainerStorefront" type="button" selector='(//div[@class="pagebuilder-{{arg1}}"])[{{arg2}}]//div[@data-role="{{arg3}}"][{{arg4}}]' parameterized="true"/>
        <element name="contentTypePreviewInStage" type="button" selector="div.pagebuilder-{{arg1}}.pagebuilder-content-type" parameterized="true"/>
        <element name="contentTypeOptionsMenu" type="button" selector='div.pagebuilder-{{arg1}}.pagebuilder-content-type div.pagebuilder-options' parameterized="true"/>
        <element name="contentTypeOptionsMenuByIndex" type="button" selector='(//div[contains(@class, "pagebuilder-content-type") and contains(@class, "pagebuilder-{{arg1}}")])[{{arg2}}]//div[contains(@class,"pagebuilder-options-visible")]' parameterized="true"/>
        <element name="contentTypeMove" type="button" selector='(//div[contains(@class, "pagebuilder-content-type") and contains(@class, "pagebuilder-{{arg1}}")])[1]/div[contains(@class,"pagebuilder-options-visible")]/descendant::*[@class="move-structural"]' parameterized="true"/>
        <element name="contentTypeMoveByIndex" type="button" selector='(//div[contains(@class, "pagebuilder-content-type") and contains(@class, "pagebuilder-{{arg1}}")])[{{arg2}}]/div[contains(@class,"pagebuilder-options-visible")]/descendant::*[@class="move-structural"]' parameterized="true"/>
        <element name="contentTypeAdd" type="button" selector="div.pagebuilder-content-type.pagebuilder-{{arg1}} div.pagebuilder-options li.pagebuilder-options-link a.add-child"  parameterized="true"/>
        <element name="contentTypeEdit" type="button" selector="div.pagebuilder-content-type.pagebuilder-{{arg1}} div.pagebuilder-options li.pagebuilder-options-link a.edit-content-type"  parameterized="true"/>
        <element name="contentTypeEditByIndex" type="button" selector='(//div[contains(@class, "pagebuilder-content-type") and contains(@class, "pagebuilder-{{arg1}}")])[{{arg2}}]//div[contains(@class,"pagebuilder-options-visible")]//descendant::*[@class="edit-content-type"]' parameterized="true"/>
        <element name="contentTypeDuplicate" type="button" selector='(//div[contains(@class, "pagebuilder-content-type") and contains(@class, "pagebuilder-{{arg1}}")])[{{arg2}}]//div[contains(@class,"pagebuilder-options-visible")]//a[@title="Duplicate"]' parameterized="true"/>
        <element name="contentTypeRemove" type="button" selector="div.pagebuilder-content-type.pagebuilder-{{arg1}} div.pagebuilder-options li.pagebuilder-options-link a.remove-structural" parameterized="true"/>
        <element name="contentTypeRemoveByIndex" type="button" selector='(//div[contains(@class, "pagebuilder-content-type") and contains(@class, "pagebuilder-{{arg1}}")])[{{arg2}}]//div[contains(@class,"pagebuilder-options-visible")]//a[@title="Remove"]' parameterized="true"/>
        <element name="editColumn" type="button" selector='(//div[contains(@class, "pagebuilder-content-type") and contains(@class, "pagebuilder-column")])[1]/div[contains(@class,"pagebuilder-options-visible")]/descendant::*[@class="edit-content-type"]'/>
        <element name="contentTypeDelete" type="button" selector='.pagebuilder-options .remove-structural[title="Remove"]'/>
        <element name="contentTypeDeleteDisabled" type="button" selector='.pagebuilder-options .remove-structural[title="Remove"].disabled'/>
        <element name="editForm" type="text" selector='//div[contains(@class, "pagebuilder_modal_form_pagebuilder_modal_form_modal")]'/>
        <element name="editFormCancel" type="button" selector="button.action-.scalable.close[title='Close'][type='button'][data-form-role='close']"/>
        <element name="editFormTitle" type="text" selector=".modal-title[data-role='title']"/>
        <element name="editFormClose" type="button" selector=".modal-header .page-main-actions [data-form-role='close']" timeout="30"/>
        <element name="editFormReset" type="button" selector=".modal-header .page-main-actions [data-form-role='reset']" timeout="30"/>
        <element name="editFormSave" type="button" selector=".modal-header .page-main-actions [data-form-role='save']" timeout="30"/>
        <element name="editFormAllRequiredFields" type="text" selector="aside.pagebuilder_modal_form_pagebuilder_modal_form_modal ._required:not([style*='display: none;'])"/>
        <element name="panelFieldLabel" type="text" selector='//aside//div[@data-index="{{arg1}}"]/descendant::div[@data-index="{{arg2}}"]/label[not(contains(@style,"display: none;"))] | //aside//div[@data-index="{{arg3}}"]/descendant::*[@class="admin__field-label" or @class="title"][not(contains(@style,"display: none;"))]/span[text()="{{arg4}}"]' parameterized="true" />
        <element name="panelSectionChangedIcon" type="text" selector="[data-index='{{arg1}}'] ._changed .admin__page-nav-item-message-icon" parameterized="true"/>
        <element name="panelSectionError" type="text" selector="[data-index='{{arg1}}'] span._error .admin__page-nav-item-message-icon" parameterized="true"/>
        <element name="panelFieldControl" type="input" selector='//aside//div[@data-index="{{arg1}}"]/descendant::*[@name="{{arg2}}"]' parameterized="true"/>
        <element name="panelFieldControlInput" type="input" selector="//aside//div[contains(@class,'_insert_form')]//div[@data-index='{{arg1}}']//div[@class='admin__field-control']//*[@name='{{arg2}}']" parameterized="true"/>
        <element name="panelFieldControlCheckbox" type="input" selector="//input[@type='checkbox' and @name='{{arg1}}']" parameterized="true"/>
        <element name="panelFieldControlCheckboxState" type="input" selector="//input[@type='checkbox' and @name='{{arg1}}' and @value='{{arg2}}']" parameterized="true"/>
        <element name="panelFieldControlSwitch" type="input" selector="//*[@name='{{arg1}}']/parent::*/label" parameterized="true"/>
        <element name="panelMultiSelectFieldControl" type="input" selector="aside [data-index='{{arg1}}'] [data-index='{{arg2}}'] [data-role='advanced-select']" parameterized="true"/>
        <element name="panelMultiSelectFieldControlInput" type="input" selector="aside [data-index='{{arg1}}'] [data-index='{{arg2}}'] .admin__action-multiselect-search" parameterized="true"/>
        <element name="panelMultiSelectFieldControlResult" type="input" selector="//aside//div[@data-index='{{arg1}}']//div[@data-index='{{arg2}}']//div[contains(@class,'action-menu-item')]//span[.='{{arg3}}']" parameterized="true"/>
        <element name="panelFieldUploadSummary" type="input" selector='.file-uploader-summary .file-uploader-preview .preview-image.preview-link[title="{{arg1}}"] img' parameterized="true"/>
        <element name="panelFieldValidationError" type="input" selector="//div[contains(@class,'_insert_form')]//div[@data-index='{{arg1}}']//div[@data-index='{{arg2}}' and contains(@class,'_error')]//div[contains(@class,'')]//input[@name='{{arg2}}']" parameterized="true"/>
        <element name="panelFieldValidationErrorMessage" type="button" selector="//div[contains(@class,'_insert_form')]//div[@data-index='{{arg1}}']//div[contains(@class,'admin__field-control')]//input[@name='{{arg2}}']//..//../label[.='{{arg3}}']" parameterized="true"/>
        <element name="panelEmptyColorSwatch" type="button" selector="//div[contains(@class,'_insert_form')]//div[@data-index='{{arg1}}']//div[contains(@class,'admin__field-control')]//input[@name='{{arg2}}']//..//div[contains(@class,'sp-clear-display')]" parameterized="true"/>
        <element name="panelColorSwatch" type="button" selector="//div[contains(@class,'_insert_form')]//div[@data-index='{{arg1}}']//div[contains(@class,'admin__field-control')]//input[@name='{{arg2}}']//..//div[@class='sp-preview']" parameterized="true"/>
        <element name="panelColorSwatchColor" type="button" selector="//div[contains(@class,'_insert_form')]//div[@data-index='{{arg1}}']//div[contains(@class,'admin__field-control')]//input[@name='{{arg2}}']//..//div[@class='sp-preview']//div[contains(@style,'{{arg3}}')]" parameterized="true"/>
        <element name="identifyPageBuilder" type="text" selector="//div[@class='pagebuilder-panel-groups-child']//span[text()='Row']"/>
        <element name="editPanelSectionName" type="button" selector="//div[@data-index='{{arg1}}']" parameterized="true"/>
        <element name="editPanelSectionExpanded" type="button" selector="//div[@data-index='{{arg1}}' and contains(@class,'_show')]" parameterized="true"/>
        <element name="editFormUploadedImage" type="button" selector="//div[@data-index='{{arg1}}']/descendant::*[@name='{{arg2}}']//..//..//img" parameterized="true"/>
        <element name="editFormNoUploadedImage" type="button" selector="//span[text()='{{arg1}}']//parent::label//following-sibling::div//p[text()='Browse to find or drag image here']" parameterized="true"/>
        <element name="editFormUploadedImageSource" type="button" selector="//div[@data-index='{{arg1}}']/descendant::*[@name='{{arg2}}']//..//..//img[contains(@src,'{{arg3}}') and contains(@src,'{{arg4}}')]" parameterized="true"/>
        <element name="computedHeightOnStage" type="text" selector="return parseInt(window.getComputedStyle(document.querySelector('.pagebuilder-{{arg1}}:nth-of-type({{arg2}})')).height)" parameterized="true"/>
        <element name="computedWidthOnStage" type="text" selector="return parseInt(window.getComputedStyle(document.querySelector('.pagebuilder-{{arg1}}:nth-of-type({{arg2}})')).width)" parameterized="true"/>
        <element name="uploadLocalImageBtn" type="button" selector="//div[contains(@class,'pagebuilder-image-uploader-container')]//input[@name='background_image']"/>
        <element name="uploadNewImageBtn" type="button" selector="//label[text()='Upload Image']" />
        <element name="selectFromGalleryImageBtn" type="button" selector="//ul[contains(@class,'pagebuilder-options-links')]//label[text()='Select from Gallery']"/>
        <element name="imageSourceOnFrontEnd" type="button" selector="//div[not(contains(@class, 'pagebuilder-mobile-hidden')) and contains(@style, '{{var1}}')]" parameterized="true" />
    </section>
    <section name="AdvancedForm">
        <element name="sectionName" type="button" selector="//div[@data-index='advanced']"/>
        <element name="sectionExpanded" type="button" selector="//div[@data-index='advanced' and contains(@class,'_show')]"/>
        <element name="advancedAlignment" type="select" selector="//select[@name='text_align']"/>
        <element name="advancedBorder" type="select" selector="//select[@name='border']"/>
        <element name="advancedBorderColor" type="input" selector="//input[@name='border_color']"/>
        <element name="advancedBorderWidth" type="input" selector="//input[@name='border_width']"/>
        <element name="advancedBorderWidthDefault" type="input" selector="//input[@name='border_width' and contains(@placeholder, 'Default')]"/>
        <element name="advancedBorderSize" type="input" selector="//input[@name='border_width']"/>
        <element name="advancedBorderRadius" type="input" selector="//input[@name='border_radius']"/>
        <element name="advancedTextColor" type="input" selector="//input[@name='color']"/>
        <element name="advancedCssClasses" type="input" selector="//input[@name='css_classes']"/>
        <element name="cssClassesNote" type="text" selector="//div[@data-index='css_classes']//span[.='Space separated list of classes.']"/>
        <element name="marginNote" type="input" selector="//div[@data-index='margins_and_padding']//span[.='Margin']"/>
        <element name="paddingNote" type="input" selector="//div[@data-index='margins_and_padding']//span[.='Padding']"/>
        <element name="advancedMarginsAndPadding" type="input" selector="//input[@name='margins_and_padding']"/>
        <element name="advancedMarginTop" type="input" selector="//input[@name='marginTop']"/>
        <element name="advancedMarginRight" type="input" selector="//input[@name='marginRight']"/>
        <element name="advancedMarginBottom" type="input" selector="//input[@name='marginBottom']"/>
        <element name="advancedMarginLeft" type="input" selector="//input[@name='marginLeft']"/>
        <element name="advancedPaddingTop" type="input" selector="//input[@name='paddingTop']"/>
        <element name="advancedPaddingRight" type="input" selector="//input[@name='paddingRight']"/>
        <element name="advancedPaddingBottom" type="input" selector="//input[@name='paddingBottom']"/>
        <element name="advancedPaddingLeft" type="input" selector="//input[@name='paddingLeft']"/>
        <element name="advancedMarginAndPaddingPlaceholderText" type="input" selector="//input[@name='{{arg1}}' and @placeholder='{{arg2}}']" parameterized="true"/>
    </section>
    <section name="VisualSelectComponent">
        <element name="firstSelection" type="input" selector="//li[@name='{{var1}}']" parameterized="true"/>
        <element name="secondSelection" type="input" selector="//li[@name='{{var1}}']" parameterized="true"/>
        <element name="thirdSelection" type="input" selector="//li[@name='{{var1}}']" parameterized="true"/>
        <element name="fourthSelection" type="input" selector="//li[@name='{{var1}}']" parameterized="true"/>
    </section>
    <section name="ColorPicker">
        <element name="colorSwatch" type="button" selector="//div[contains(concat(' ',normalize-space(@class),' '),'sp-preview')]"/>
        <element name="colorBox" type="button" selector="//div[contains(@class,'sp-palette') and @style and not(contains(@class, 'sp-hidden'))]//span[@data-color='{{arg1}}']" parameterized="true"/>
        <element name="firstColorBox" type="button" selector="//div[contains(@class,'sp-palette') and @style and not(contains(@class, 'sp-hidden'))]//span[@data-color='rgb(252, 0, 9)']"/>
        <element name="colorWheel" type="button" selector="//div[contains(@class,'sp-palette') and @style and not(contains(@class, 'sp-hidden'))]//div[@class='sp-val']"/>
        <element name="applyBtn" type="button" selector="//div[contains(@class,'sp-palette') and @style and not(contains(@class, 'sp-hidden'))]//button[text()='Apply']"/>
        <element name="cancelBtn" type="button" selector="//div[contains(@class,'sp-palette') and @style and not(contains(@class, 'sp-hidden'))]//a[text()='Cancel']"/>
        <element name="inputField" type="input" selector="//div[contains(@class,'sp-palette') and @style and not(contains(@class, 'sp-hidden'))]//input[@class='sp-input']"/>
    </section>
</sections>
