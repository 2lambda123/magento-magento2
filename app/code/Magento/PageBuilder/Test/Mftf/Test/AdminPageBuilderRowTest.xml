<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:noNamespaceSchemaLocation="../../../../../../../dev/tests/acceptance/vendor/magento/magento2-functional-testing-framework/src/Magento/FunctionalTestingFramework/Test/etc/testSchema.xsd">
    <test name="EditPanelColorPickerFunctionality">
        <annotations>
            <features value="Pagebuilder: Row"/>
            <stories value="MAGETWO-71622: [UI Component] Color Picker"/>
            <title value="Add background color to PageBuilder using Color Picker UI component"/>
            <description value="Color picker extends input field in the form and allows user conveniently specify color value."/>
            <severity value="CRITICAL"/>
            <testCaseId value="MAGETWO-89768 MAGETWO-89770"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-row"/>
            <group value="pagebuilder-rowGeneral"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <createData entity="_defaultCmsPage" stepKey="createCMSPage" />
        </before>
        <after>
            <deleteData createDataKey="createCMSPage" stepKey="deletePreReqCMSPage" />
            <actionGroup ref="logout" stepKey="logout"/>
            <waitForPageLoad stepKey="waitForAdminLoginPageLoad"/>
        </after>
        <actionGroup ref="navigateToCreatedCMSPage" stepKey="navigateToCreatedCMSPage">
            <argument name="CMSPage" value="$$createCMSPage$$"/>
        </actionGroup>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragRowIntoStage">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage1">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>

        <!-- I see empty color swatch and empty color input field -->
        <comment userInput="I see empty color swatch and empty color input field" stepKey="comment1"/>
        <actionGroup ref="seeNoColorInColorSwatch" stepKey="seeColorSwatch">
            <argument name="property" value="PageBuilderRowBackgroundColor_Default"/>
        </actionGroup>
        <actionGroup ref="validateSlideOutPanelFieldPlaceholderText" stepKey="seeEmptyField">
            <argument name="property" value="PageBuilderRowBackgroundColor_Default"/>
        </actionGroup>

        <!-- I input invalid HEX color code into input field -->
        <comment userInput="I input invalid HEX color code into input field" stepKey="comment2"/>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="inputWrongFormatColorCodeIntoInputField">
            <argument name="property" value="PageBuilderRowBackgroundColor_invalid"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelAndValidateFieldError" stepKey="validateError">
            <argument name="property" value="PageBuilderRowBackgroundColor_invalid"/>
        </actionGroup>

        <!-- I input HEX color code into input field -->
        <comment userInput="I input HEX color code into input field" stepKey="comment3"/>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="inputColorCodeIntoInputField1">
            <argument name="property" value="PageBuilderRowBackgroundColor_Yellow"/>
        </actionGroup>
        <actionGroup ref="seeColorInColorSwatch" stepKey="seeSwatchInYellow">
            <argument name="property" value="PageBuilderRowBackgroundColor_Yellow"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="seeHEXInField1">
            <argument name="property" value="PageBuilderRowBackgroundColor_Yellow"/>
        </actionGroup>
        <click selector="{{PageBuilderActionsSection.panelColorSwatch(PageBuilderRowBackgroundColor_Default.section, PageBuilderRowBackgroundColor_Default.fieldName)}}" stepKey="clickColorSwatch1" />
        <seeElement selector="{{ColorPicker.colorWheel}}" stepKey="seeColorPickerWindow" />
        <seeInField selector="{{ColorPicker.inputField}}" userInput="{{PageBuilderRowBackgroundColor_Yellow.value}}" stepKey="seeYellowHEXOnInputFieldOfColorPicker" />


        <!-- I input HSL color code into input field -->
        <comment userInput="I input HSL color code into input field" stepKey="comment4"/>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="inputColorCodeIntoInputField2">
            <argument name="property" value="PageBuilderRowBackgroundColor_OrangeHSL"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutPropertyAlternate" stepKey="seeHEXInField2">
            <argument name="property" value="PageBuilderRowBackgroundColor_OrangeHSL"/>
        </actionGroup>
        <click selector="{{PageBuilderActionsSection.panelColorSwatch(PageBuilderRowBackgroundColor_Default.section, PageBuilderRowBackgroundColor_Default.fieldName)}}" stepKey="clickColorSwatch2" />
        <seeInField selector="{{ColorPicker.inputField}}" userInput="{{PageBuilderRowBackgroundColor_OrangeHSL.editPanelValue}}" stepKey="seeOrangeHEXOnInputFieldOfColorPicker" />


        <!-- I input RGB color code into input field -->
        <comment userInput="I input RGB color code into input field" stepKey="comment5"/>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="inputColorCodeIntoInputField3">
            <argument name="property" value="PageBuilderRowBackgroundColor_rgb_0_0_255"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutPropertyAlternate" stepKey="seeHEXInField3">
            <argument name="property" value="PageBuilderRowBackgroundColor_rgb_0_0_255"/>
        </actionGroup>
        <click selector="{{PageBuilderActionsSection.panelColorSwatch(PageBuilderRowBackgroundColor_Default.section, PageBuilderRowBackgroundColor_Default.fieldName)}}" stepKey="clickColorSwatch3" />
        <seeInField selector="{{ColorPicker.inputField}}" userInput="{{PageBuilderRowBackgroundColor_rgb_0_0_255.editPanelValue}}" stepKey="seeGreenHEXOnInputFieldOfColorPicker" />


        <!-- I input RGBA color code into input field -->
        <comment userInput="I input RGBA color code into input field" stepKey="comment6"/>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="inputColorCodeIntoInputField4">
            <argument name="property" value="PageBuilderRowBackgroundColor_BlueRGBa"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="seeHEXInField4">
            <argument name="property" value="PageBuilderRowBackgroundColor_BlueRGBa"/>
        </actionGroup>
        <click selector="{{PageBuilderActionsSection.panelColorSwatch(PageBuilderRowBackgroundColor_Default.section, PageBuilderRowBackgroundColor_Default.fieldName)}}" stepKey="clickColorSwatch4" />
        <seeInField selector="{{ColorPicker.inputField}}" userInput="{{PageBuilderRowBackgroundColor_BlueRGBa.value}}" stepKey="seeBlueRGBAOnInputFieldOfColorPicker" />

        <!-- I input color name into input field -->
        <comment userInput="I input color name into input field" stepKey="comment7"/>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="inputColorCodeIntoInputField5">
            <argument name="property" value="PageBuilderRowBackgroundColor_green"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutPropertyAlternate" stepKey="seeHEXInField5">
            <argument name="property" value="PageBuilderRowBackgroundColor_green"/>
        </actionGroup>
        <click selector="{{PageBuilderActionsSection.panelColorSwatch(PageBuilderRowBackgroundColor_Default.section, PageBuilderRowBackgroundColor_Default.fieldName)}}" stepKey="clickColorSwatch5" />
        <seeInField selector="{{ColorPicker.inputField}}" userInput="{{PageBuilderRowBackgroundColor_green.editPanelValue}}" stepKey="seePurpleHEXOnInputFieldOfColorPicker" />


        <!-- I click Color Wheel -->
        <comment userInput="I click Color Wheel" stepKey="comment8"/>
        <click selector="{{ColorPicker.firstColorBox}}" stepKey="clickOnRedColorBoxOfColorPicker" />
        <click selector="{{ColorPicker.colorWheel}}" stepKey="clickOnColorWheel" />
        <click selector="{{ColorPicker.applyBtn}}" stepKey="clickOnApplyBtn" />
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="seeHEXInField6">
            <argument name="property" value="PageBuilderRowBackgroundColor_804042"/>
        </actionGroup>
        <actionGroup ref="seeColorInColorSwatch" stepKey="seeSwatchInYellow2">
            <argument name="property" value="PageBuilderRowBackgroundColor_804042"/>
        </actionGroup>

        <!-- Verify color picking from input field and Cancel button -->
        <comment userInput="Verify color picking from input field and Cancel button" stepKey="comment9"/>
        <click selector="{{PageBuilderActionsSection.panelColorSwatch(PageBuilderRowBackgroundColor_Default.section, PageBuilderRowBackgroundColor_Default.fieldName)}}" stepKey="clickColorSwatch6" />
        <fillField selector="{{ColorPicker.inputField}}" userInput=" " stepKey="inputBlueHEXcodeIntoInputField1" />
        <pressKey selector="{{ColorPicker.inputField}}" parameterArray="['{{PageBuilderRowBackgroundColor_rgb_0_0_255.editPanelValue}}',\Facebook\WebDriver\WebDriverKeys::ENTER]" stepKey="pressKeyEnter"/>
        <actionGroup ref="seeInFieldSlideOutPropertyAlternate" stepKey="seeHEXInField7">
            <argument name="property" value="PageBuilderRowBackgroundColor_rgb_0_0_255"/>
        </actionGroup>
        <click selector="{{ColorPicker.cancelBtn}}" stepKey="cancelSelection"/>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="seeHEXInField8">
            <argument name="property" value="PageBuilderRowBackgroundColor_804042"/>
        </actionGroup>
        <actionGroup ref="seeColorInColorSwatch" stepKey="seeSwatchInYellow3">
            <argument name="property" value="PageBuilderRowBackgroundColor_804042"/>
        </actionGroup>
        <click selector="{{PageBuilderActionsSection.panelColorSwatch(PageBuilderRowBackgroundColor_Default.section, PageBuilderRowBackgroundColor_Default.fieldName)}}" stepKey="clickColorSwatch7" />
        <fillField selector="{{ColorPicker.inputField}}" userInput="{{PageBuilderRowBackgroundColor_rgb_0_0_255.editPanelValue}}" stepKey="inputBlueHEXcodeIntoInputField2" />
        <click selector="{{ColorPicker.applyBtn}}" stepKey="applySelection"/>
        <actionGroup ref="seeInFieldSlideOutPropertyAlternate" stepKey="seeHEXInField9">
            <argument name="property" value="PageBuilderRowBackgroundColor_rgb_0_0_255"/>
        </actionGroup>

        <!-- click Out Side color picker to select a color -->
        <comment userInput="click Out Side color picker to select a color" stepKey="comment10"/>
        <click selector="{{PageBuilderActionsSection.panelColorSwatch(PageBuilderRowBackgroundColor_Default.section, PageBuilderRowBackgroundColor_Default.fieldName)}}" stepKey="clickColorSwatch8" />
        <fillField selector="{{ColorPicker.inputField}}" userInput="{{PageBuilderRowBackgroundColor_FF0000.value}}" stepKey="inputRedHEXcodeIntoInputField" />
        <click selector="{{PageBuilderActionsSection.panelFieldLabel(PageBuilderRowBackgroundColor_Default.section, PageBuilderRowBackgroundColor_Default.fieldName, PageBuilderRowBackgroundColor_Default.section, PageBuilderRowBackgroundColor_Default.name)}}" stepKey="lostFocusFromInputField8"/>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="seeHEXInField10">
            <argument name="property" value="PageBuilderRowBackgroundColor_FF0000"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings1"/>
    </test>
    <test name="RowInitializeWithRow">
        <annotations>
            <features value="Pagebuilder: Row"/>
            <stories value="MAGETWO-72398: Bluefoot Row Interaction"/>
            <title value="Row exists on initialise"/>
            <description value="The stage should contain a row on initialise."/>
            <severity value="CRITICAL"/>
            <testCaseId value="MAGETWO-82841"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-row"/>
            <group value="pagebuilder-rowGeneral"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <waitForElementVisible selector="{{RowOnStage.base('1')}}" stepKey="seeElementRow"/>
    </test>
    <test name="RowAddAdditionalRowBelowInitialRow">
        <annotations>
            <features value="Pagebuilder"/>
            <stories value="Row"/>
            <title value="Can add an additional row below the initial row on stage"/>
            <description value="If user drags Row below the stage Droppable area is still registered and new row is added to the bottom"/>
            <severity value="CRITICAL"/>
            <useCaseId value="MAGETWO-72398"/>
            <testCaseId value="MAGETWO-82857"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-row"/>
            <group value="pagebuilder-rowGeneral"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <comment userInput="Modify initial row background color" stepKey="commentEdit"/>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterBackgroundColor">
            <argument name="property" value="PageBuilderRowBackgroundColor_CCCCCC"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings"/>
        <actionGroup ref="dragContentBlockToDropZone" stepKey="dragRowIntoStage">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
            <argument name="containerTargetType" value="PageBuilderStage"/>
            <argument name="containerTargetIndex" value="1"/>
            <argument name="contentBlockIndex" value="2"/>
            <argument name="dropZoneIndex" value="2"/>
        </actionGroup>
        <seeNumberOfElements selector="{{RowOnStage.allRows}}" userInput="2" stepKey="seeElementRow"/>
        <comment userInput="Stage: Check Background Color is present for first row" stepKey="commentStageCheckBackground"/>
        <actionGroup ref="validateRowBackgroundColor" stepKey="validateStage">
            <argument name="page" value="RowOnStage"/>
            <argument name="backgroundColor" value="PageBuilderRowBackgroundColor_CCCCCC"/>
            <argument name="index" value="1"/>
        </actionGroup>
        <comment userInput="Stage: Check Background Color not present for new row" stepKey="commentStageCheckNoBackground"/>
        <actionGroup ref="validateRowNoBackgroundColor" stepKey="validateNewRowNoColor">
            <argument name="page" value="RowOnStage"/>
            <argument name="index" value="2"/>
        </actionGroup>
        <comment userInput="Stage: Check Drop Zones still present before, between, and after rows" stepKey="commentDropZones"/>
        <seeElementInDOM selector="{{PageBuilderActionsSection.dropZone(PageBuilderStage.role, '1', '1')}}" stepKey="waitForFirstDropZone" />
        <seeElementInDOM selector="{{PageBuilderActionsSection.dropZone(PageBuilderStage.role, '1', '2')}}" stepKey="waitForSecondDropZone" />
        <seeElementInDOM selector="{{PageBuilderActionsSection.dropZone(PageBuilderStage.role, '1', '3')}}" stepKey="waitForThirdDropZone" />
    </test>
    <test name="RowAddAdditionalRowAboveInitialRow">
        <annotations>
            <features value="Pagebuilder"/>
            <stories value="Row"/>
            <title value="Can add an additional row above the initial row on stage"/>
            <description value="If user drags Row above the stage Droppable area is still registered and new row is added to the top"/>
            <severity value="CRITICAL"/>
            <useCaseId value="MAGETWO-72398"/>
            <testCaseId value="MAGETWO-82857"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-row"/>
            <group value="pagebuilder-rowGeneral"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <comment userInput="Modify initial row background color" stepKey="commentEdit"/>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterBackgroundColor">
            <argument name="property" value="PageBuilderRowBackgroundColor_CCCCCC"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings"/>
        <actionGroup ref="dragContentBlockToDropZone" stepKey="dragRowIntoStage">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
            <argument name="containerTargetType" value="PageBuilderStage"/>
            <argument name="containerTargetIndex" value="1"/>
            <argument name="contentBlockIndex" value="2"/>
            <argument name="dropZoneIndex" value="1"/>
            <argument name="offsetXCoordinate" value="0"/>
        </actionGroup>
        <seeNumberOfElements selector="{{RowOnStage.allRows}}" userInput="2" stepKey="seeElementRow"/>
        <comment userInput="Stage: Check Background Color is present for existing row" stepKey="commentStageCheckBackground"/>
        <actionGroup ref="validateRowBackgroundColor" stepKey="validateStage">
            <argument name="page" value="RowOnStage"/>
            <argument name="backgroundColor" value="PageBuilderRowBackgroundColor_CCCCCC"/>
            <argument name="index" value="2"/>
        </actionGroup>
        <comment userInput="Stage: Check Background Color not present for new row" stepKey="commentStageCheckNoBackground"/>
        <actionGroup ref="validateRowNoBackgroundColor" stepKey="validateNewRowNoColor">
            <argument name="page" value="RowOnStage"/>
            <argument name="index" value="1"/>
        </actionGroup>
        <comment userInput="Stage: Check Drop Zones still present before, between, and after rows" stepKey="commentDropZones"/>
        <seeElementInDOM selector="{{PageBuilderActionsSection.dropZone(PageBuilderStage.role, '1', '1')}}" stepKey="waitForFirstDropZone" />
        <seeElementInDOM selector="{{PageBuilderActionsSection.dropZone(PageBuilderStage.role, '1', '2')}}" stepKey="waitForSecondDropZone" />
        <seeElementInDOM selector="{{PageBuilderActionsSection.dropZone(PageBuilderStage.role, '1', '3')}}" stepKey="waitForThirdDropZone" />
    </test>
    <test name="RowRemoveRowFromStage">
        <annotations>
            <features value="Pagebuilder: Row"/>
            <stories value="MAGETWO-72398: Bluefoot Row Interaction"/>
            <title value="Can remove a row"/>
            <description value="A user should be able to remove a row from the stage"/>
            <severity value="CRITICAL"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-row"/>
            <group value="pagebuilder-rowGeneral"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragRowIntoStage">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <seeNumberOfElements selector="{{RowOnStage.allRows}}" userInput="2" stepKey="seeTwoRows"/>
        <actionGroup ref="removeEmptyContentBlockFromStage" stepKey="removeRow">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <seeNumberOfElements selector="{{RowOnStage.allRows}}" userInput="1" stepKey="seeOneRow"/>
    </test>
    <test name="RowCantRemoveLastRow">
        <annotations>
            <features value="Pagebuilder: Row"/>
            <stories value="MAGETWO-72398: Bluefoot Row Interaction"/>
            <title value="Can't remove last row"/>
            <description value="A user shouldn't be able to remove the final row from the stage"/>
            <severity value="CRITICAL"/>
            <testCaseId value="MAGETWO-82859"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-row"/>
            <group value="pagebuilder-rowGeneral"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragRowIntoStage">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <seeNumberOfElements selector="{{RowOnStage.allRows}}" userInput="2" stepKey="seeTwoRows"/>
        <actionGroup ref="removeEmptyContentBlockFromStage" stepKey="removeRow">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <seeNumberOfElements selector="{{RowOnStage.allRows}}" userInput="1" stepKey="seeOneRow"/>
        <moveMouseOver selector="{{PageBuilderActionsSection.contentBlockInStage('row')}}" stepKey="onMouseOverContentBlockStage"/>
        <waitForElementVisible selector="{{PageBuilderActionsSection.contentBlockOptionsMenu('row')}}" stepKey="waitForOptionsVisible" />
        <seeElement selector="{{PageBuilderActionsSection.contentBlockDeleteDisabled}}" stepKey="seeDisabledRemoveBlockButton" />
        <seeNumberOfElements selector="{{RowOnStage.allRows}}" userInput="1" stepKey="seeOneRow1"/>
    </test>
    <test name="RowPlaceholderAndDisplayLabelInAdminPreview">
        <annotations>
            <features value="Pagebuilder: Row"/>
            <stories value="MAGETWO-75136: Empty Row Preview on Stage"/>
            <title value="Row placeholder and display label in admin preview"/>
            <description value="A user should see the row display label and preview with a placeholder that suggests any content blocks can be dragged there"/>
            <severity value="CRITICAL"/>
            <testCaseId value="MAGETWO-88296"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-row"/>
            <group value="pagebuilder-rowGeneral"/>
            <group value="pagebuilder-heading"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <waitForElementVisible selector="{{RowOnStage.empty('1')}}" stepKey="waitForEmptyRow"/>
        <see selector="{{RowOnStage.base('1')}}" userInput="Drag content blocks or columns here" stepKey="seeRowPlaceholder"/>
        <see selector="{{RowOnStage.displayLabel('1')}}" userInput="Row" stepKey="seeRowDisplayLabel"/>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragHeaderToRow">
            <argument name="contentBlockType" value="PageBuilderHeadingContentBlock"/>
        </actionGroup>
        <dontSee selector="{{RowOnStage.empty('1')}}" stepKey="dontSeeRowPlaceholder"/>
    </test>
    <test name="RowHeightAdjustsToContentWhenContentIsSmallerHeading">
        <annotations>
            <features value="Pagebuilder"/>
            <stories value="Row"/>
            <title value="Row height shrinks to fit Heading"/>
            <description value="A user should see the row height adjust to be smaller when Heading is added to the row"/>
            <severity value="CRITICAL"/>
            <useCaseId value="MAGETWO-75136"/>
            <testCaseId value="MAGETWO-88297"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-row"/>
            <group value="pagebuilder-rowGeneral"/>
            <group value="pagebuilder-heading"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <!-- Assert row height is 320px when empty -->
        <comment userInput="Assert row height is 320px when empty" stepKey="comment1"/>
        <executeJS function="document.querySelectorAll('{{RowOnStage.baseCss}}')[0].setAttribute('divHeight', document.querySelectorAll('{{RowOnStage.baseCss}}')[0].clientHeight)" stepKey="setEmptyRowHeight"/>
        <grabAttributeFrom selector="{{RowOnStage.base('1')}}" userInput="divHeight" stepKey="getEmptyRowHeight"/>
        <assertEquals stepKey="assertEmptyRowHeight">
            <expectedResult type="string">320</expectedResult>
            <actualResult type="variable">getEmptyRowHeight</actualResult>
        </assertEquals>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragHeaderToRow">
            <argument name="contentBlockType" value="PageBuilderHeadingContentBlock"/>
        </actionGroup>
        <actionGroup ref="clickOutsideLiveEditHeading" stepKey="clickOutsideLiveEditHeading">
            <argument name="index" value="1"/>
        </actionGroup>
        <!-- Assert row height has changed when content added -->
        <comment userInput="Assert row height has changed when content added" stepKey="comment2"/>
        <executeJS function="document.querySelectorAll('{{RowOnStage.baseCss}}')[0].setAttribute('divHeight', document.querySelectorAll('{{RowOnStage.baseCss}}')[0].clientHeight)" stepKey="setNewRowHeight"/>
        <grabAttributeFrom selector="{{RowOnStage.base('1')}}" userInput="divHeight" stepKey="getNewRowHeight"/>
        <assertNotEquals stepKey="assertNewRowHeight">
            <expectedResult type="variable">getEmptyRowHeight</expectedResult>
            <actualResult type="variable">getNewRowHeight</actualResult>
        </assertNotEquals>
        <assertNotEquals stepKey="assertNewRowHeight2">
            <expectedResult type="string">0</expectedResult>
            <actualResult type="variable">getNewRowHeight</actualResult>
        </assertNotEquals>
        <actionGroup ref="removeEmptyContentBlockFromStage" stepKey="removeHeaderFromRow">
            <argument name="contentBlockType" value="PageBuilderHeadingContentBlock"/>
        </actionGroup>
        <waitForPageLoad time="30" stepKey="waitForShrinkAnimationAfterRemove"/>
        <!-- Assert row height is 320px after removing children -->
        <comment userInput="Assert row height is 320px after removing children" stepKey="comment3"/>
        <executeJS function="document.querySelectorAll('{{RowOnStage.baseCss}}')[0].setAttribute('divHeight', document.querySelectorAll('{{RowOnStage.baseCss}}')[0].clientHeight)" stepKey="setNewRowHeight2"/>
        <grabAttributeFrom selector="{{RowOnStage.base('1')}}" userInput="divHeight" stepKey="getNewRowHeight2"/>
        <assertEquals stepKey="assertNewRowHeight3">
            <expectedResult type="variable">getEmptyRowHeight</expectedResult>
            <actualResult type="variable">getNewRowHeight2</actualResult>
        </assertEquals>
    </test>
    <test name="RowHeightAdjustsToContentWhenContentIsLargerSlider">
        <annotations>
            <features value="Pagebuilder"/>
            <stories value="Row"/>
            <title value="Row height grows to fit Slider"/>
            <description value="A user should see the row height adjust to be larger when Slider is added to the row"/>
            <severity value="CRITICAL"/>
            <useCaseId value="MAGETWO-86953"/>
            <testCaseId value="MAGETWO-92203"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-row"/>
            <group value="pagebuilder-rowGeneral"/>
            <group value="pagebuilder-slider"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <comment userInput="Validate Initial Row Height" stepKey="commentValidateRowHeight"/>
        <actionGroup ref="validateContentBlockHeightOnStage" stepKey="assertInitialRowHeightMatchesExpected">
            <argument name="contentBlock" value="PageBuilderRowContentBlock"/>
            <argument name="index" value="1"/>
            <argument name="containerDefaultHeight" value="PageBuilderRowDefaultHeight"/>
            <argument name="expectedPaddingTop" value="PageBuilderPaddingProperty10"/>
            <argument name="expectedPaddingBottom" value="PageBuilderPaddingProperty10"/>
        </actionGroup>
        <actionGroup ref="expandPageBuilderPanelGroup" stepKey="expandPageBuilderPanelGroup">
            <argument name="group" value="PageBuilderSliderContentBlock"/>
        </actionGroup>
        <actionGroup ref="dragContentBlockToStageAndExpectEditPanel" stepKey="dragSliderIntoStage">
            <argument name="contentBlockType" value="PageBuilderSliderContentBlock"/>
        </actionGroup>
        <actionGroup ref="closeEditPanelSettings" stepKey="closeEditPanelSettings"/>
        <comment userInput="Validate Initial Slider Height On Stage Matches Expected" stepKey="commentValidateSliderHeight"/>
        <actionGroup ref="validateContentBlockHeightOnStage" stepKey="assertInitialSliderHeightMatchesExpected">
            <argument name="contentBlock" value="PageBuilderSliderContentBlock"/>
            <argument name="index" value="1"/>
            <argument name="containerDefaultHeight" value="PageBuilderEmptySliderContainerHeightProperty"/>
            <argument name="expectedPaddingTop" value="PageBuilderAdvancedMarginsAndPaddingPropertyDefault"/>
            <argument name="expectedPaddingBottom" value="PageBuilderAdvancedMarginsAndPaddingPropertyDefault"/>
        </actionGroup>
        <executeJS function="{{PageBuilderActionsSection.computedHeightOnStage(PageBuilderSliderContentBlock.role,'1')}}" stepKey="actualStageInitialSliderHeight"/>
        <comment userInput="Validate Row Height adjusts to Slider Height on Stage" stepKey="commentValidateRowHeightAdjustToSlider"/>
        <executeJS function="{{PageBuilderActionsSection.computedHeightOnStage(PageBuilderRowContentBlock.role,'1')}}" stepKey="actualStageRowHeightWithSlider"/>
        <executeJS function="return Math.round({$actualStageInitialSliderHeight}+{{PageBuilderPaddingProperty10.paddingTop}}+{{PageBuilderPaddingProperty10.paddingBottom}})" stepKey="expectedRowHeightWithPaddingAndSlider"/>
        <assertEquals stepKey="assertRowHeightAdjustsToSliderHeight">
            <expectedResult type="variable">expectedRowHeightWithPaddingAndSlider</expectedResult>
            <actualResult type="variable">actualStageRowHeightWithSlider</actualResult>
        </assertEquals>
    </test>
    <test name="RowValidateAdvancedConfigurationDefaultValues">
        <annotations>
            <features value="Pagebuilder: Row"/>
            <stories value="MAGETWO-83415: Bluefoot Content Blocks and Containers Advanced Configuration settings"/>
            <title value="Row - Validate Advanced Configuration Default Values"/>
            <description value="Validate the default values for every attribute in the Advanced Configuration form and on Stage for Row."/>
            <severity value="CRITICAL"/>
            <testCaseId value="MAGETWO-89361"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-row"/>
            <group value="pagebuilder-rowGeneral"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <actionGroup ref="expandConfigurationSection" stepKey="expandConfigurationSection"/>
        <!-- Validate Default Values -->
        <comment userInput="Validate Default Values" stepKey="CommentValidateDefaultValues"/>
        <actionGroup ref="seeOptionIsSelectedSlideOutProperty" stepKey="validateAlignment">
            <argument name="property" value="PageBuilderAdvancedAlignmentPropertyDefault"/>
        </actionGroup>
        <actionGroup ref="seeOptionIsSelectedSlideOutProperty" stepKey="validateBorder">
            <argument name="property" value="PageBuilderAdvancedBorderPropertyNone"/>
        </actionGroup>
        <grabValueFrom selector="{{PageBuilderColumnSection.panelFieldControl(PageBuilderAdvancedBorderColorDefaultProperty.section, PageBuilderAdvancedBorderColorDefaultProperty.fieldName)}}" stepKey="getBorderColor"/>
        <assertEmpty actual="getBorderColor" actualType="variable" message="Text field has text: $getBorderColor" stepKey="assertBorderColor"/>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="validateBorderWidth">
            <argument name="property" value="PageBuilderAdvancedBorderWidthPropertyDefault"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="validateBorderRadius">
            <argument name="property" value="PageBuilderAdvancedBorderRadiusDefaultProperty"/>
        </actionGroup>
        <grabValueFrom selector="{{PageBuilderColumnSection.panelFieldControl(PageBuilderAdvancedCssClassesDefaultProperty.section, PageBuilderAdvancedCssClassesDefaultProperty.fieldName)}}" stepKey="getCssClasses"/>
        <assertEmpty actual="getCssClasses" actualType="variable" message="Text field was not empty. Had text: $getCssClasses" stepKey="assertCssClasses"/>
        <actionGroup ref="seeInMarginFieldsSlideOutPanel" stepKey="validateMargins">
            <argument name="property" value="PageBuilderMarginsPropertyRowDefault"/>
        </actionGroup>
        <actionGroup ref="seeInPaddingFieldsSlideOutPanel" stepKey="validatePadding">
            <argument name="property" value="PageBuilderPaddingProperty10"/>
        </actionGroup>
        <actionGroup ref="closeEditPanelSettings" stepKey="closeEditPanelSettings"/>
        <!-- Validate Stage -->
        <comment userInput="Validate Stage" stepKey="commentValidateStage"/>
        <actionGroup ref="validateAdvancedStyleWithNoAlignment" stepKey="validateStage">
            <argument name="page" value="RowOnStage"/>
            <argument name="border" value="PageBuilderAdvancedBorderPropertyNone"/>
            <argument name="borderWidth" value="PageBuilderAdvancedBorderWidthPropertyDefault"/>
            <argument name="borderRadius" value="PageBuilderAdvancedBorderRadiusDefaultProperty"/>
            <argument name="margin" value="PageBuilderMarginsPropertyRowDefault"/>
            <argument name="padding" value="PageBuilderPaddingProperty10"/>
            <argument name="index" value="1"/>
        </actionGroup>
        <actionGroup ref="saveAndContinueEditCmsPage" stepKey="saveAndContinueEditCmsPage"/>
        <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        <!-- Validate Stage After Save -->
        <comment userInput="Validate Stage After Save" stepKey="commentValidateStage2"/>
        <actionGroup ref="validateAdvancedStyleWithNoAlignment" stepKey="validateStage2">
            <argument name="page" value="RowOnStage"/>
            <argument name="border" value="PageBuilderAdvancedBorderPropertyNone"/>
            <argument name="borderWidth" value="PageBuilderAdvancedBorderWidthPropertyDefault"/>
            <argument name="borderRadius" value="PageBuilderAdvancedBorderRadiusDefaultProperty"/>
            <argument name="margin" value="PageBuilderMarginsPropertyRowDefault"/>
            <argument name="padding" value="PageBuilderPaddingProperty10"/>
            <argument name="index" value="1"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage2">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <actionGroup ref="expandConfigurationSection" stepKey="expandConfigurationSection2"/>
        <!-- Validate Edit Panel After Save -->
        <comment userInput="Validate Edit Panel After Save" stepKey="commentValidateEditPanel2"/>
        <actionGroup ref="seeOptionIsSelectedSlideOutProperty" stepKey="validateAlignment2">
            <argument name="property" value="PageBuilderAdvancedAlignmentPropertyDefault"/>
        </actionGroup>
        <actionGroup ref="seeOptionIsSelectedSlideOutProperty" stepKey="validateBorder2">
            <argument name="property" value="PageBuilderAdvancedBorderPropertyNone"/>
        </actionGroup>
        <grabValueFrom selector="{{PageBuilderColumnSection.panelFieldControl(PageBuilderAdvancedBorderColorDefaultProperty.section, PageBuilderAdvancedBorderColorDefaultProperty.fieldName)}}" stepKey="getBorderColor2"/>
        <assertEmpty actual="getBorderColor2" actualType="variable" message="Text field has text: $getBorderColor2" stepKey="assertBorderColor2"/>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="validateBorderWidth2">
            <argument name="property" value="PageBuilderAdvancedBorderWidthPropertyDefault"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="validateBorderRadius2">
            <argument name="property" value="PageBuilderAdvancedBorderRadiusDefaultProperty"/>
        </actionGroup>
        <grabValueFrom selector="{{PageBuilderColumnSection.panelFieldControl(PageBuilderAdvancedCssClassesDefaultProperty.section, PageBuilderAdvancedCssClassesDefaultProperty.fieldName)}}" stepKey="getCssClasses2"/>
        <assertEmpty actual="getCssClasses2" actualType="variable" message="Text field was not empty. Had text: $getCssClasses2" stepKey="assertCssClasses2"/>
        <actionGroup ref="seeInMarginFieldsSlideOutPanel" stepKey="validateMargins2">
            <argument name="property" value="PageBuilderMarginsPropertyRowDefault"/>
        </actionGroup>
        <actionGroup ref="seeInPaddingFieldsSlideOutPanel" stepKey="validatePadding2">
            <argument name="property" value="PageBuilderPaddingProperty10"/>
        </actionGroup>
        <actionGroup ref="navigateToStoreFront" stepKey="navigateToStoreFront">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <!-- Validate Storefront -->
        <comment userInput="Validate Storefront" stepKey="commentValidateStorefront"/>
        <actionGroup ref="validateAdvancedStyleWithNoAlignment" stepKey="validateStorefront">
            <argument name="page" value="RowOnStorefront"/>
            <argument name="border" value="PageBuilderAdvancedBorderPropertyNone"/>
            <argument name="borderWidth" value="PageBuilderAdvancedBorderWidthPropertyDefault"/>
            <argument name="borderRadius" value="PageBuilderAdvancedBorderRadiusDefaultProperty"/>
            <argument name="margin" value="PageBuilderMarginsPropertyRowDefault"/>
            <argument name="padding" value="PageBuilderPaddingProperty10"/>
            <argument name="index" value="1"/>
        </actionGroup>
    </test>
    <test name="RowUpdateAdvancedConfigurationValues">
        <annotations>
            <features value="Pagebuilder: Row"/>
            <stories value="MAGETWO-89190: [Tech Debt] PageBuilder data separation for text, divider, video, anchor and html"/>
            <title value="Row - Update Advanced Configuration Values"/>
            <description value="Validate that updating every attribute in the Advanced Configuration form for Row will update the Stage and Storefront correctly."/>
            <severity value="CRITICAL"/>
            <testCaseId value="MAGETWO-90054"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-row"/>
            <group value="pagebuilder-rowGeneral"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <actionGroup ref="expandConfigurationSection" stepKey="expandConfigurationSection"/>
        <!-- Update Values -->
        <comment userInput="Update Values" stepKey="commentUpdateValues"/>
        <actionGroup ref="chooseVisualSelectOption" stepKey="enterAlignment">
            <argument name="property" value="PageBuilderAdvancedAlignmentPropertyCenter"/>
        </actionGroup>
        <actionGroup ref="selectSlideOutPanelField" stepKey="enterBorder">
            <argument name="property" value="PageBuilderAdvancedBorderPropertyDouble"/>
        </actionGroup>
        <comment userInput="I fill out Border Color using Color Picker" stepKey="comment"/>
        <actionGroup ref="fillOutColorPicker" stepKey="fillOutColor">
            <argument name="colorCode" value="PageBuilderAdvancedBorderColorProperty_green"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutPropertyAlternate" stepKey="seeHEXInField7">
            <argument name="property" value="PageBuilderAdvancedBorderColorProperty_green"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterBorderWidth">
            <argument name="property" value="PageBuilderAdvancedBorderWidthProperty10"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterBorderRadius">
            <argument name="property" value="PageBuilderAdvancedBorderRadiusProperty12"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterCssClasses">
            <argument name="property" value="PageBuilderAdvancedCssClassesPropertyThreeClasses"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldMargins" stepKey="enterMargins">
            <argument name="property" value="PageBuilderMarginsPropertyUnique"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldPadding" stepKey="enterPadding">
            <argument name="property" value="PageBuilderPaddingPropertyUnique"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings"/>
        <!-- Validate Stage -->
        <comment userInput="Validate Stage" stepKey="commentValidateStage"/>
        <actionGroup ref="validateAdvancedStyleWithAllUpdated" stepKey="validateAllAdvancedStage">
            <argument name="page" value="RowOnStage"/>
            <argument name="alignment" value="PageBuilderAdvancedAlignmentPropertyCenter"/>
            <argument name="border" value="PageBuilderAdvancedBorderPropertyDouble"/>
            <argument name="borderColor" value="PageBuilderAdvancedBorderColorProperty_green"/>
            <argument name="borderWidth" value="PageBuilderAdvancedBorderWidthProperty10"/>
            <argument name="borderRadius" value="PageBuilderAdvancedBorderRadiusProperty12"/>
            <argument name="cssClasses" value="PageBuilderAdvancedCssClassesPropertyThreeClasses"/>
            <argument name="margin" value="PageBuilderMarginsPropertyUnique"/>
            <argument name="padding" value="PageBuilderPaddingPropertyUnique"/>
            <argument name="index" value="1"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage2">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <actionGroup ref="expandConfigurationSection" stepKey="expandConfigurationSection2"/>
        <!-- Validate Edit Panel -->
        <comment userInput="Validate Edit Panel" stepKey="commentValidateEditPanel"/>
        <actionGroup ref="seeOptionIsSelectedSlideOutProperty" stepKey="validateAlignment">
            <argument name="property" value="PageBuilderAdvancedAlignmentPropertyCenter"/>
        </actionGroup>
        <actionGroup ref="seeOptionIsSelectedSlideOutProperty" stepKey="validateBorder">
            <argument name="property" value="PageBuilderAdvancedBorderPropertyDouble"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="validateBorderColor">
            <argument name="property" value="PageBuilderAdvancedBorderColorProperty_green"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="validateBorderWidth">
            <argument name="property" value="PageBuilderAdvancedBorderWidthProperty10"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="validateBorderRadius">
            <argument name="property" value="PageBuilderAdvancedBorderRadiusProperty12"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="validateCssClasses">
            <argument name="property" value="PageBuilderAdvancedCssClassesPropertyThreeClasses"/>
        </actionGroup>
        <actionGroup ref="seeInMarginFieldsSlideOutPanel" stepKey="validateMargins">
            <argument name="property" value="PageBuilderMarginsPropertyUnique"/>
        </actionGroup>
        <actionGroup ref="seeInPaddingFieldsSlideOutPanel" stepKey="validatePadding">
            <argument name="property" value="PageBuilderPaddingPropertyUnique"/>
        </actionGroup>
        <actionGroup ref="closeEditPanelSettings" stepKey="closeEditPanelSettings"/>
        <actionGroup ref="saveAndContinueEditCmsPage" stepKey="saveAndContinueEditCmsPage"/>
        <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        <!-- Validate Stage After Save -->
        <comment userInput="Validate Stage After Save" stepKey="commentValidateStage2"/>
        <actionGroup ref="validateAdvancedStyleWithAllUpdated" stepKey="validateAllAdvancedStage2">
            <argument name="page" value="RowOnStage"/>
            <argument name="alignment" value="PageBuilderAdvancedAlignmentPropertyCenter"/>
            <argument name="border" value="PageBuilderAdvancedBorderPropertyDouble"/>
            <argument name="borderColor" value="PageBuilderAdvancedBorderColorProperty_green"/>
            <argument name="borderWidth" value="PageBuilderAdvancedBorderWidthProperty10"/>
            <argument name="borderRadius" value="PageBuilderAdvancedBorderRadiusProperty12"/>
            <argument name="cssClasses" value="PageBuilderAdvancedCssClassesPropertyThreeClasses"/>
            <argument name="margin" value="PageBuilderMarginsPropertyUnique"/>
            <argument name="padding" value="PageBuilderPaddingPropertyUnique"/>
            <argument name="index" value="1"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage3">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <actionGroup ref="expandConfigurationSection" stepKey="expandConfigurationSection3"/>
        <!-- Validate Edit Panel After Save -->
        <comment userInput="Validate Edit Panel After Save" stepKey="commentValidateEditPanel2"/>
        <actionGroup ref="seeOptionIsSelectedSlideOutProperty" stepKey="validateAlignment2">
            <argument name="property" value="PageBuilderAdvancedAlignmentPropertyCenter"/>
        </actionGroup>
        <actionGroup ref="seeOptionIsSelectedSlideOutProperty" stepKey="validateBorder2">
            <argument name="property" value="PageBuilderAdvancedBorderPropertyDouble"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="validateBorderColor2">
            <argument name="property" value="PageBuilderAdvancedBorderColorProperty_green"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="validateBorderWidth2">
            <argument name="property" value="PageBuilderAdvancedBorderWidthProperty10"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="validateBorderRadius2">
            <argument name="property" value="PageBuilderAdvancedBorderRadiusProperty12"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="validateCssClasses2">
            <argument name="property" value="PageBuilderAdvancedCssClassesPropertyThreeClasses"/>
        </actionGroup>
        <actionGroup ref="seeInMarginFieldsSlideOutPanel" stepKey="validateMargins2">
            <argument name="property" value="PageBuilderMarginsPropertyUnique"/>
        </actionGroup>
        <actionGroup ref="seeInPaddingFieldsSlideOutPanel" stepKey="validatePadding2">
            <argument name="property" value="PageBuilderPaddingPropertyUnique"/>
        </actionGroup>
        <actionGroup ref="navigateToStoreFront" stepKey="navigateToStoreFront">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <!-- Validate Storefront -->
        <comment userInput="Validate Storefront" stepKey="commentValidateStorefront"/>
        <actionGroup ref="validateAdvancedStyleWithAllUpdated" stepKey="validateAllAdvancedStorefront">
            <argument name="page" value="RowOnStorefront"/>
            <argument name="alignment" value="PageBuilderAdvancedAlignmentPropertyCenter"/>
            <argument name="border" value="PageBuilderAdvancedBorderPropertyDouble"/>
            <argument name="borderColor" value="PageBuilderAdvancedBorderColorProperty_green"/>
            <argument name="borderWidth" value="PageBuilderAdvancedBorderWidthProperty10"/>
            <argument name="borderRadius" value="PageBuilderAdvancedBorderRadiusProperty12"/>
            <argument name="cssClasses" value="PageBuilderAdvancedCssClassesPropertyThreeClasses"/>
            <argument name="margin" value="PageBuilderMarginsPropertyUnique"/>
            <argument name="padding" value="PageBuilderPaddingPropertyUnique"/>
            <argument name="index" value="1"/>
        </actionGroup>
    </test>
    <test name="RowCanAddUnlimitedRows">
        <annotations>
            <features value="Pagebuilder: Row"/>
            <stories value="MAGETWO-72398: Bluefoot Row Interaction"/>
            <title value="Can add unlimited rows"/>
            <description value="The user should be able to unlimited rows. For testing we use 20 rows"/>
            <severity value="CRITICAL"/>
            <testCaseId value="MAGETWO-85692"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-row"/>
            <group value="pagebuilder-rowGeneral"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragRowIntoStage1">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragRowIntoStage2">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragRowIntoStage3">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragRowIntoStage4">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragRowIntoStage5">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragRowIntoStage6">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragRowIntoStage7">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragRowIntoStage8">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragRowIntoStage9">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragRowIntoStage10">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragRowIntoStage11">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragRowIntoStage12">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragRowIntoStage13">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragRowIntoStage14">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragRowIntoStage15">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragRowIntoStage16">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragRowIntoStage17">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragRowIntoStage18">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragRowIntoStage19">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <actionGroup ref="dragContentBlockToStage" stepKey="dragRowIntoStage20">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <seeNumberOfElements selector="{{RowOnStage.allRows}}" userInput="21" stepKey="seeElementRow"/>
    </test>
    <test name="RowNoRequiredAttributes">
        <annotations>
            <features value="Pagebuilder: Row"/>
            <stories value="MAGETWO-90461: Add Missing Tests For Row"/>
            <title value="Row - No Required Attributes"/>
            <description value="The edit form for Row should not have any required attributes."/>
            <severity value="AVERAGE"/>
            <testCaseId value="MAGETWO-90524"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-row"/>
            <group value="pagebuilder-rowGeneral"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <!-- Validate Background Fields Not Required -->
        <comment userInput="Validate Background Fields Not Required" stepKey="commentBackground"/>
        <actionGroup ref="validateSlideOutPanelFieldIsNotRequired" stepKey="validateBackgroundColor">
            <argument name="property" value="PageBuilderRowBackgroundColor_Default"/>
        </actionGroup>
        <actionGroup ref="validateSlideOutPanelFieldIsNotRequired" stepKey="validateBackgroundImage">
            <argument name="property" value="PageBuilderRowBackgroundImage_Default"/>
        </actionGroup>
        <actionGroup ref="validateSlideOutPanelFieldIsNotRequired" stepKey="validateBackgroundPosition">
            <argument name="property" value="PageBuilderRowBackgroundPosition_Default"/>
        </actionGroup>
        <actionGroup ref="validateSlideOutPanelFieldIsNotRequired" stepKey="validateBackgroundSize">
            <argument name="property" value="PageBuilderRowBackgroundSize_Default"/>
        </actionGroup>
        <actionGroup ref="validateSlideOutPanelFieldIsNotRequired" stepKey="validateBackgroundRepeat">
            <argument name="property" value="PageBuilderRowBackgroundRepeat_Default"/>
        </actionGroup>
        <actionGroup ref="validateSlideOutPanelFieldIsNotRequired" stepKey="validateBackgroundAttachment">
            <argument name="property" value="PageBuilderRowBackgroundAttachment_Default"/>
        </actionGroup>
        <actionGroup ref="expandConfigurationSection" stepKey="expandParallaxBackground">
            <argument name="section" value="ParallaxBackgroundForm"/>
        </actionGroup>
        <!-- Validate Parallax Background Fields Not Required -->
        <comment userInput="Validate Parallax Background Fields Not Required" stepKey="commentParallaxBackground"/>
        <actionGroup ref="validateSlideOutPanelFieldIsNotRequired" stepKey="validateParallaxBackground">
            <argument name="property" value="PageBuilderRowParallax_Default"/>
        </actionGroup>
        <actionGroup ref="validateSlideOutPanelFieldIsNotRequired" stepKey="validateParallaxBackgroundSpeed">
            <argument name="property" value="PageBuilderRowParallaxSpeed_Default"/>
        </actionGroup>
        <!-- Note that Advanced section is a shared form and is covered in AdvancedConfigurationEditPanelVisual test -->
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings"/>
    </test>
    <test name="RowDuplicate">
        <annotations>
            <features value="Pagebuilder: Row"/>
            <stories value="MAGETWO-90461: Add Missing Tests For Row"/>
            <title value="Row - Duplicate Row"/>
            <description value="A user should be able to duplicate a row content block. Verify on Stage amd Storefront."/>
            <severity value="AVERAGE"/>
            <testCaseId value="MAGETWO-90598"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-row"/>
            <group value="pagebuilder-rowGeneral"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <!-- Fill All Fields -->
        <comment userInput="Fill All Fields" stepKey="commentEdit"/>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterBackgroundColor">
            <argument name="property" value="PageBuilderRowBackgroundColor_CCCCCC"/>
        </actionGroup>
        <actionGroup ref="attachFileSlideOutProperty" stepKey="attachBackgroundImage">
            <argument name="property" value="PageBuilderRowBackgroundImage_MagentoJpg"/>
        </actionGroup>
        <actionGroup ref="selectSlideOutPanelField" stepKey="enterBackgroundPosition">
            <argument name="property" value="PageBuilderRowBackgroundPosition_Centered"/>
        </actionGroup>
        <actionGroup ref="selectSlideOutPanelField" stepKey="enterBackgroundSize">
            <argument name="property" value="PageBuilderRowBackgroundSize_Contain"/>
        </actionGroup>
        <actionGroup ref="clickSlideOutPanelFieldGeneral" stepKey="enableBackgroundRepeat">
            <argument name="property" value="PageBuilderRowBackgroundRepeat_Enabled"/>
        </actionGroup>
        <actionGroup ref="selectSlideOutPanelField" stepKey="enterBackgroundAttachment">
            <argument name="property" value="PageBuilderRowBackgroundAttachment_Fixed"/>
        </actionGroup>
        <actionGroup ref="expandConfigurationSection" stepKey="expandParallaxBackgroundSection">
            <argument name="section" value="ParallaxBackgroundForm"/>
        </actionGroup>
        <actionGroup ref="clickSlideOutPanelFieldGeneral" stepKey="enableParallaxBackground">
            <argument name="property" value="PageBuilderRowParallax_Enabled"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterParallaxBackgroundSpeed">
            <argument name="property" value="PageBuilderRowParallaxSpeed_2"/>
        </actionGroup>
        <actionGroup ref="expandConfigurationSection" stepKey="expandAdvancedSection"/>
        <actionGroup ref="chooseVisualSelectOption" stepKey="enterAlignment">
            <argument name="property" value="PageBuilderAdvancedAlignmentPropertyCenter"/>
        </actionGroup>
        <actionGroup ref="selectSlideOutPanelField" stepKey="enterBorder">
            <argument name="property" value="PageBuilderAdvancedBorderPropertyDouble"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterBorderColor">
            <argument name="property" value="PageBuilderAdvancedBorderColorProperty_green"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterBorderWidth">
            <argument name="property" value="PageBuilderAdvancedBorderWidthProperty10"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterBorderRadius">
            <argument name="property" value="PageBuilderAdvancedBorderRadiusProperty12"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterCssClasses">
            <argument name="property" value="PageBuilderAdvancedCssClassesPropertyThreeClasses"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldMargins" stepKey="enterMargins">
            <argument name="property" value="PageBuilderMarginsPropertyUnique"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldPadding" stepKey="enterPadding">
            <argument name="property" value="PageBuilderPaddingPropertyUnique"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings"/>
        <!-- Duplicate and Validate Stage -->
        <comment userInput="Duplicate" stepKey="commentDuplicate"/>
        <actionGroup ref="duplicateContentBlock" stepKey="duplicateContentBlock">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <comment userInput="Validate Stage" stepKey="commentValidateStage"/>
        <actionGroup ref="validateRowBackgroundAttributesWithAllUpdatedAndParallaxEnabled" stepKey="validateDuplicateBackgroundOnStage">
            <argument name="page" value="RowOnStage"/>
            <argument name="index" value="2"/>
            <argument name="backgroundColor" value="PageBuilderRowBackgroundColor_CCCCCC"/>
            <argument name="backgroundImage" value="PageBuilderRowBackgroundImage_MagentoJpg"/>
            <argument name="backgroundPosition" value="PageBuilderRowBackgroundPosition_Centered"/>
            <argument name="backgroundSize" value="PageBuilderRowBackgroundSize_Contain"/>
            <argument name="backgroundRepeat" value="PageBuilderRowBackgroundRepeat_Enabled"/>
            <argument name="backgroundAttachment" value="PageBuilderRowBackgroundAttachment_Fixed"/>
        </actionGroup>
        <actionGroup ref="validateRowParallaxBackgroundAttributes" stepKey="validateDuplicateParallaxBackgroundOnStage">
            <argument name="page" value="RowOnStage"/>
            <argument name="index" value="2"/>
            <argument name="parallaxStateValue" value="PageBuilderRowParallax_Enabled"/>
            <argument name="parallaxSpeedValue" value="PageBuilderRowParallaxSpeed_2"/>
        </actionGroup>
        <actionGroup ref="validateAdvancedStyleWithAllUpdated" stepKey="validateAllAdvancedStage">
            <argument name="page" value="RowOnStage"/>
            <argument name="alignment" value="PageBuilderAdvancedAlignmentPropertyCenter"/>
            <argument name="border" value="PageBuilderAdvancedBorderPropertyDouble"/>
            <argument name="borderColor" value="PageBuilderAdvancedBorderColorProperty_green"/>
            <argument name="borderWidth" value="PageBuilderAdvancedBorderWidthProperty10"/>
            <argument name="borderRadius" value="PageBuilderAdvancedBorderRadiusProperty12"/>
            <argument name="cssClasses" value="PageBuilderAdvancedCssClassesPropertyThreeClasses"/>
            <argument name="margin" value="PageBuilderMarginsPropertyUnique"/>
            <argument name="padding" value="PageBuilderPaddingPropertyUnique"/>
            <argument name="index" value="2"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanelByIndex" stepKey="openEditMenuOnStage2">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
            <argument name="contentBlockIndex" value="2"/>
        </actionGroup>
        <!-- Validate Edit Panel For Duplicate -->
        <comment userInput="Validate Edit Panel For Duplicate" stepKey="commentValidateEdit"/>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="validateBackgroundColor">
            <argument name="property" value="PageBuilderRowBackgroundColor_CCCCCC"/>
        </actionGroup>
        <actionGroup ref="seeImageUploadedOnSlideOut" stepKey="validateBackgroundImage">
            <argument name="property" value="PageBuilderRowBackgroundImage_MagentoJpg"/>
        </actionGroup>
        <actionGroup ref="seeOptionIsSelectedSlideOutProperty" stepKey="validateBackgroundPosition">
            <argument name="property" value="PageBuilderRowBackgroundPosition_Centered"/>
        </actionGroup>
        <actionGroup ref="seeOptionIsSelectedSlideOutProperty" stepKey="validateBackgroundSize">
            <argument name="property" value="PageBuilderRowBackgroundSize_Contain"/>
        </actionGroup>
        <actionGroup ref="seeOptionIsCheckedSlideOutProperty" stepKey="validateBackgroundRepeat">
            <argument name="property" value="PageBuilderRowBackgroundRepeat_Enabled"/>
        </actionGroup>
        <actionGroup ref="seeOptionIsSelectedSlideOutProperty" stepKey="validateBackgroundAttachment">
            <argument name="property" value="PageBuilderRowBackgroundAttachment_Fixed"/>
        </actionGroup>
        <actionGroup ref="expandConfigurationSection" stepKey="expandParallaxBackgroundSection2">
            <argument name="section" value="ParallaxBackgroundForm"/>
        </actionGroup>
        <actionGroup ref="seeOptionIsCheckedSlideOutProperty" stepKey="validateParallaxBackgroundEnabled">
            <argument name="property" value="PageBuilderRowParallax_Enabled"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="validateParallaxBackgroundSpeed">
            <argument name="property" value="PageBuilderRowParallaxSpeed_2"/>
        </actionGroup>
        <actionGroup ref="expandConfigurationSection" stepKey="expandAdvancedSection2"/>
        <actionGroup ref="seeOptionIsSelectedSlideOutProperty" stepKey="validateAlignment">
            <argument name="property" value="PageBuilderAdvancedAlignmentPropertyCenter"/>
        </actionGroup>
        <actionGroup ref="seeOptionIsSelectedSlideOutProperty" stepKey="validateBorder">
            <argument name="property" value="PageBuilderAdvancedBorderPropertyDouble"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="validateBorderColor">
            <argument name="property" value="PageBuilderAdvancedBorderColorProperty_green"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="validateBorderWidth">
            <argument name="property" value="PageBuilderAdvancedBorderWidthProperty10"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="validateBorderRadius">
            <argument name="property" value="PageBuilderAdvancedBorderRadiusProperty12"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="validateCssClasses">
            <argument name="property" value="PageBuilderAdvancedCssClassesPropertyThreeClasses"/>
        </actionGroup>
        <actionGroup ref="seeInMarginFieldsSlideOutPanel" stepKey="validateMargins">
            <argument name="property" value="PageBuilderMarginsPropertyUnique"/>
        </actionGroup>
        <actionGroup ref="seeInPaddingFieldsSlideOutPanel" stepKey="validatePadding">
            <argument name="property" value="PageBuilderPaddingPropertyUnique"/>
        </actionGroup>
        <actionGroup ref="closeEditPanelSettings" stepKey="closeEditPanel"/>
        <actionGroup ref="saveAndContinueEditCmsPage" stepKey="saveAndContinueEditCmsPage"/>
        <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        <!-- Validate Stage After Save -->
        <comment userInput="Validate Stage After Save" stepKey="commentValidateStage2"/>
        <actionGroup ref="validateRowBackgroundAttributesWithAllUpdatedAndParallaxEnabled" stepKey="validateDuplicateBackgroundOnStage2">
            <argument name="page" value="RowOnStage"/>
            <argument name="index" value="2"/>
            <argument name="backgroundColor" value="PageBuilderRowBackgroundColor_CCCCCC"/>
            <argument name="backgroundImage" value="PageBuilderRowBackgroundImage_MagentoJpg"/>
            <argument name="backgroundPosition" value="PageBuilderRowBackgroundPosition_Centered"/>
            <argument name="backgroundSize" value="PageBuilderRowBackgroundSize_Contain"/>
            <argument name="backgroundRepeat" value="PageBuilderRowBackgroundRepeat_Enabled"/>
            <argument name="backgroundAttachment" value="PageBuilderRowBackgroundAttachment_Fixed"/>
        </actionGroup>
        <actionGroup ref="validateRowParallaxBackgroundAttributes" stepKey="validateDuplicateParallaxBackgroundOnStage2">
            <argument name="page" value="RowOnStage"/>
            <argument name="index" value="2"/>
            <argument name="parallaxStateValue" value="PageBuilderRowParallax_Enabled"/>
            <argument name="parallaxSpeedValue" value="PageBuilderRowParallaxSpeed_2"/>
        </actionGroup>
        <actionGroup ref="validateAdvancedStyleWithAllUpdated" stepKey="validateAllAdvancedStage2">
            <argument name="page" value="RowOnStage"/>
            <argument name="alignment" value="PageBuilderAdvancedAlignmentPropertyCenter"/>
            <argument name="border" value="PageBuilderAdvancedBorderPropertyDouble"/>
            <argument name="borderColor" value="PageBuilderAdvancedBorderColorProperty_green"/>
            <argument name="borderWidth" value="PageBuilderAdvancedBorderWidthProperty10"/>
            <argument name="borderRadius" value="PageBuilderAdvancedBorderRadiusProperty12"/>
            <argument name="cssClasses" value="PageBuilderAdvancedCssClassesPropertyThreeClasses"/>
            <argument name="margin" value="PageBuilderMarginsPropertyUnique"/>
            <argument name="padding" value="PageBuilderPaddingPropertyUnique"/>
            <argument name="index" value="2"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanelByIndex" stepKey="openEditMenuOnStage3">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
            <argument name="contentBlockIndex" value="2"/>
        </actionGroup>
        <!-- Validate Edit Panel For Duplicate After Save -->
        <comment userInput="Validate Edit Panel For Duplicate After Save" stepKey="commentValidateEdit2"/>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="validateBackgroundColor2">
            <argument name="property" value="PageBuilderRowBackgroundColor_CCCCCC"/>
        </actionGroup>
        <actionGroup ref="seeImageUploadedOnSlideOut" stepKey="validateBackgroundImage2">
            <argument name="property" value="PageBuilderRowBackgroundImage_MagentoJpg"/>
        </actionGroup>
        <actionGroup ref="seeOptionIsSelectedSlideOutProperty" stepKey="validateBackgroundPosition2">
            <argument name="property" value="PageBuilderRowBackgroundPosition_Centered"/>
        </actionGroup>
        <actionGroup ref="seeOptionIsSelectedSlideOutProperty" stepKey="validateBackgroundSize2">
            <argument name="property" value="PageBuilderRowBackgroundSize_Contain"/>
        </actionGroup>
        <actionGroup ref="seeOptionIsCheckedSlideOutProperty" stepKey="validateBackgroundRepeat2">
            <argument name="property" value="PageBuilderRowBackgroundRepeat_Enabled"/>
        </actionGroup>
        <actionGroup ref="seeOptionIsSelectedSlideOutProperty" stepKey="validateBackgroundAttachment2">
            <argument name="property" value="PageBuilderRowBackgroundAttachment_Fixed"/>
        </actionGroup>
        <actionGroup ref="expandConfigurationSection" stepKey="expandParallaxBackgroundSection3">
            <argument name="section" value="ParallaxBackgroundForm"/>
        </actionGroup>
        <actionGroup ref="seeOptionIsCheckedSlideOutProperty" stepKey="validateParallaxBackgroundEnabled2">
            <argument name="property" value="PageBuilderRowParallax_Enabled"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="validateParallaxBackgroundSpeed2">
            <argument name="property" value="PageBuilderRowParallaxSpeed_2"/>
        </actionGroup>
        <actionGroup ref="expandConfigurationSection" stepKey="expandAdvancedSection3"/>
        <actionGroup ref="seeOptionIsSelectedSlideOutProperty" stepKey="validateAlignment2">
            <argument name="property" value="PageBuilderAdvancedAlignmentPropertyCenter"/>
        </actionGroup>
        <actionGroup ref="seeOptionIsSelectedSlideOutProperty" stepKey="validateBorder2">
            <argument name="property" value="PageBuilderAdvancedBorderPropertyDouble"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="validateBorderColor2">
            <argument name="property" value="PageBuilderAdvancedBorderColorProperty_green"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="validateBorderWidth2">
            <argument name="property" value="PageBuilderAdvancedBorderWidthProperty10"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="validateBorderRadius2">
            <argument name="property" value="PageBuilderAdvancedBorderRadiusProperty12"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="validateCssClasses2">
            <argument name="property" value="PageBuilderAdvancedCssClassesPropertyThreeClasses"/>
        </actionGroup>
        <actionGroup ref="seeInMarginFieldsSlideOutPanel" stepKey="validateMargins2">
            <argument name="property" value="PageBuilderMarginsPropertyUnique"/>
        </actionGroup>
        <actionGroup ref="seeInPaddingFieldsSlideOutPanel" stepKey="validatePadding2">
            <argument name="property" value="PageBuilderPaddingPropertyUnique"/>
        </actionGroup>
        <actionGroup ref="navigateToStoreFront" stepKey="navigateToStoreFront">
            <argument name="contentBlockType" value="PageBuilderRowContentBlock"/>
        </actionGroup>
        <!-- Validate Storefront -->
        <comment userInput="Validate Storefront" stepKey="commentValidateStorefront"/>
        <actionGroup ref="validateRowBackgroundAttributesWithAllUpdatedAndParallaxEnabled" stepKey="validateDuplicateOnStorefront">
            <argument name="page" value="RowOnStorefront"/>
            <argument name="index" value="2"/>
            <argument name="backgroundColor" value="PageBuilderRowBackgroundColor_CCCCCC"/>
            <argument name="backgroundImage" value="PageBuilderRowBackgroundImage_MagentoJpg"/>
            <argument name="backgroundPosition" value="PageBuilderRowBackgroundPosition_Centered"/>
            <argument name="backgroundSize" value="PageBuilderRowBackgroundSize_Contain"/>
            <argument name="backgroundRepeat" value="PageBuilderRowBackgroundRepeat_Enabled"/>
            <argument name="backgroundAttachment" value="PageBuilderRowBackgroundAttachment_Fixed"/>
        </actionGroup>
        <actionGroup ref="validateRowParallaxBackgroundAttributes" stepKey="validateDuplicateParallaxBackgroundOnStorefront">
            <argument name="page" value="RowOnStorefront"/>
            <argument name="index" value="2"/>
            <argument name="parallaxStateValue" value="PageBuilderRowParallax_Enabled"/>
            <argument name="parallaxSpeedValue" value="PageBuilderRowParallaxSpeed_2"/>
        </actionGroup>
        <actionGroup ref="validateAdvancedStyleWithAllUpdated" stepKey="validateAllAdvancedStorefront">
            <argument name="page" value="RowOnStorefront"/>
            <argument name="alignment" value="PageBuilderAdvancedAlignmentPropertyCenter"/>
            <argument name="border" value="PageBuilderAdvancedBorderPropertyDouble"/>
            <argument name="borderColor" value="PageBuilderAdvancedBorderColorProperty_green"/>
            <argument name="borderWidth" value="PageBuilderAdvancedBorderWidthProperty10"/>
            <argument name="borderRadius" value="PageBuilderAdvancedBorderRadiusProperty12"/>
            <argument name="cssClasses" value="PageBuilderAdvancedCssClassesPropertyThreeClasses"/>
            <argument name="margin" value="PageBuilderMarginsPropertyUnique"/>
            <argument name="padding" value="PageBuilderPaddingPropertyUnique"/>
            <argument name="index" value="2"/>
        </actionGroup>
    </test>
</tests>
