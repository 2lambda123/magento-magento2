<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="PageBuilderCMSPageCreateAndApplyTemplate">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="CMS Page"/>
            <title value="Create and Apply Page Builder Template to CMS Page"/>
            <description value="Verify that user can create and apply a Page Builder template to a CMS Page's content"/>
            <severity value="CRITICAL"/>
            <useCaseId value="PB-341"/>
            <testCaseId value="MC-30501"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-templates"/>
            <group value="pagebuilder-cms-page"/>
        </annotations>
        <before>
            <createData entity="_emptyCmsPage" stepKey="createCMSPage"/>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="NavigateToCreatedCMSPageActionGroup" stepKey="navigateToCreatedCMSPage">
                <argument name="CMSPage" value="$$createCMSPage$$"/>
            </actionGroup>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
            <actionGroup ref="expandPageBuilderPanelMenuSection" stepKey="expandPageBuilderPanelMenuSection">
                <argument name="contentType" value="PageBuilderButtonsContentType"/>
            </actionGroup>
            <actionGroup ref="dragContentTypeToStage" stepKey="dragContentTypeToStage">
                <argument name="contentType" value="PageBuilderButtonsContentType"/>
            </actionGroup>
            <seeElement selector="{{ButtonItemOnStage.emptyButtonItemElement('1')}}" stepKey="seeEmptyButton"/>
        </before>
        <after>
            <deleteData createDataKey="createCMSPage" stepKey="deleteCMSPage"/>
            <actionGroup ref="navigateToPageBuilderTemplatesGridPage" stepKey="navigateToPageBuilderTemplatesGridPage"/>
            <actionGroup ref="filterPageBuilderTemplateGrid" stepKey="filterPageBuilderTemplateGrid"/>
            <actionGroup ref="deletePageBuilderTemplate" stepKey="deletePageBuilderTemplate"/>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <!-- Save Template -->
        <actionGroup ref="openPageBuilderSaveTemplateModal" stepKey="openPageBuilderSaveTemplateModal"/>
        <actionGroup ref="fillPageBuilderSaveTemplateForm" stepKey="fillPageBuilderSaveTemplateForm"/>
        <actionGroup ref="savePageBuilderTemplate" stepKey="savePageBuilderTemplate"/>
        <!-- Go to CMS Page -->
        <actionGroup ref="NavigateToCreatedCMSPageActionGroup" stepKey="navigateToCreatedCMSPage">
            <argument name="CMSPage" value="$$createCMSPage$$"/>
        </actionGroup>
        <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        <!-- Validate Stage Empty -->
        <actionGroup ref="verifyEmptyStage" stepKey="verifyEmptyStage"/>
        <!-- Apply Template -->
        <actionGroup ref="openPageBuilderApplyTemplateSlideOut" stepKey="openPageBuilderApplyTemplateSlideOut"/>
        <actionGroup ref="filterPageBuilderTemplateGrid" stepKey="filterPageBuilderTemplateGrid"/>
        <actionGroup ref="clickApplyFromPageBuilderApplyTemplateSlideOut" stepKey="clickApplyFromPageBuilderApplyTemplateSlideOut"/>
        <actionGroup ref="confirmApplyFromPageBuilderApplyTemplateSlideOut" stepKey="confirmApplyFromPageBuilderApplyTemplateSlideOut"/>
        <!-- Validate Stage -->
        <seeElement selector="{{ButtonItemOnStage.emptyButtonItemElement('1')}}" stepKey="seeEmptyButton"/>
    </test>
    <test name="PageBuilderCreateTemplateAndValidateTemplateGridData">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Templates"/>
            <title value="Create Page Builder Template and Validate Grid Data"/>
            <description value="Verify that when a user saves a template, all of the entered data is shown correctly on the template grid"/>
            <severity value="CRITICAL"/>
            <useCaseId value="PB-341"/>
            <testCaseId value="MC-30592"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-templates"/>
        </annotations>
        <before>
            <createData entity="_emptyCmsPage" stepKey="createCMSPage"/>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="NavigateToCreatedCMSPageActionGroup" stepKey="navigateToCreatedCMSPage">
                <argument name="CMSPage" value="$$createCMSPage$$"/>
            </actionGroup>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <deleteData createDataKey="createCMSPage" stepKey="deleteCMSPage"/>
            <actionGroup ref="navigateToPageBuilderTemplatesGridPage" stepKey="navigateToPageBuilderTemplatesGridPage"/>
            <actionGroup ref="filterPageBuilderTemplateGrid" stepKey="filterPageBuilderTemplateGrid"/>
            <actionGroup ref="deletePageBuilderTemplate" stepKey="deletePageBuilderTemplate"/>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <!-- Save Template -->
        <actionGroup ref="openPageBuilderSaveTemplateModal" stepKey="openPageBuilderSaveTemplateModal"/>
        <actionGroup ref="fillPageBuilderSaveTemplateForm" stepKey="fillPageBuilderSaveTemplateForm"/>
        <generateDate date="now" format="M d, Y g:i A" stepKey="today"/>
        <actionGroup ref="savePageBuilderTemplate" stepKey="savePageBuilderTemplate"/>
        <!-- Verify Info on Apply Template Slide Out -->
        <actionGroup ref="openPageBuilderApplyTemplateSlideOut" stepKey="openPageBuilderApplyTemplateSlideOut"/>
        <actionGroup ref="filterPageBuilderTemplateGrid" stepKey="filterPageBuilderTemplateGrid1"/>
        <actionGroup ref="validatePageBuilderTemplateDataInGrid" stepKey="validatePageBuilderTemplateDataInGrid1">
            <argument name="section" value="PageBuilderApplyTemplateGrid"/>
            <argument name="templateName" value="{{PageBuilderTemplateNameRandom.name}}"/>
            <argument name="createdFor" value="{{PageBuilderTemplateCreatedFor.any}}"/>
            <argument name="createdDate" value="{$today}"/>
        </actionGroup>
        <!-- Verify Info on Template Grid Page -->
        <actionGroup ref="navigateToPageBuilderTemplatesGridPage" stepKey="navigateToPageBuilderTemplatesGridPage"/>
        <actionGroup ref="filterPageBuilderTemplateGrid" stepKey="filterPageBuilderTemplateGrid2"/>
        <actionGroup ref="validatePageBuilderTemplateDataInGrid" stepKey="validatePageBuilderTemplateDataInGrid2">
            <argument name="section" value="PageBuilderTemplatePageGrid"/>
            <argument name="templateName" value="{{PageBuilderTemplateNameRandom.name}}"/>
            <argument name="createdFor" value="{{PageBuilderTemplateCreatedFor.any}}"/>
            <argument name="createdDate" value="{$today}"/>
        </actionGroup>
    </test>
    <test name="PageBuilderDeleteTemplate">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Templates"/>
            <title value="Delete Page Builder Template and Validate Grid Data"/>
            <description value="Verify that when a user deletes a template, the template is removed from the template grids."/>
            <severity value="CRITICAL"/>
            <useCaseId value="PB-341"/>
            <testCaseId value="MC-30593"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-templates"/>
        </annotations>
        <before>
            <createData entity="_emptyCmsPage" stepKey="createCMSPage"/>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="NavigateToCreatedCMSPageActionGroup" stepKey="navigateToCreatedCMSPage">
                <argument name="CMSPage" value="$$createCMSPage$$"/>
            </actionGroup>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
            <actionGroup ref="openPageBuilderSaveTemplateModal" stepKey="openPageBuilderSaveTemplateModal"/>
            <actionGroup ref="fillPageBuilderSaveTemplateForm" stepKey="fillPageBuilderSaveTemplateForm"/>
            <actionGroup ref="savePageBuilderTemplate" stepKey="savePageBuilderTemplate"/>
        </before>
        <after>
            <deleteData createDataKey="createCMSPage" stepKey="deleteCMSPage"/>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <!-- Delete Template -->
        <actionGroup ref="navigateToPageBuilderTemplatesGridPage" stepKey="navigateToPageBuilderTemplatesGridPage"/>
        <actionGroup ref="filterPageBuilderTemplateGrid" stepKey="filterPageBuilderTemplateGrid"/>
        <actionGroup ref="deletePageBuilderTemplate" stepKey="deletePageBuilderTemplate"/>
        <!-- Verify Delete on Template Grid Page -->
        <actionGroup ref="filterPageBuilderTemplateGrid" stepKey="filterPageBuilderTemplateGrid2"/>
        <actionGroup ref="validatePageBuilderTemplateEmptyGrid" stepKey="validatePageBuilderTemplateEmptyGrid">
            <argument name="section" value="PageBuilderTemplatePageGrid"/>
        </actionGroup>
        <!-- Verify Delete on Apply Template Grid -->
        <actionGroup ref="NavigateToCreatedCMSPageActionGroup" stepKey="navigateToCreatedCMSPage">
            <argument name="CMSPage" value="$$createCMSPage$$"/>
        </actionGroup>
        <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        <actionGroup ref="openPageBuilderApplyTemplateSlideOut" stepKey="openPageBuilderApplyTemplateSlideOut"/>
        <actionGroup ref="filterPageBuilderTemplateGrid" stepKey="filterPageBuilderTemplateGrid3"/>
        <actionGroup ref="validatePageBuilderTemplateEmptyGrid" stepKey="validatePageBuilderTemplateEmptyGrid2">
            <argument name="section" value="PageBuilderApplyTemplateGrid"/>
        </actionGroup>
    </test>
    <test name="PageBuilderTemplatesPermission">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Templates"/>
            <title value="Templates Permission Functionality"/>
            <description value="Verify that a user can access the templates grid page with only the template permission and cannot access this page without the permission."/>
            <severity value="CRITICAL"/>
            <useCaseId value="PB-341"/>
            <testCaseId value="MC-30594"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-templates"/>
            <group value="pagebuilder-templates-permissions"/>
        </annotations>
        <before>
            <createData entity="rolePageBuilderTemplates" stepKey="role1"/>
            <createData entity="roleNoPageBuilderTemplates" stepKey="role2"/>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="AdminCreateUserWithApiRoleActionGroup" stepKey="adminCreateUser">
                <argument name="user" value="NewAdminUser"/>
                <argument name="role" value="rolePageBuilderTemplates"/>
            </actionGroup>
            <actionGroup ref="logout" stepKey="logout"/>
        </before>
        <after>
            <actionGroup ref="logout" stepKey="logout"/>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="AdminDeleteRoleByRoleNameActionGroup" stepKey="deleteRole">
                <argument name="role" value="rolePageBuilderTemplates"/>
            </actionGroup>
            <actionGroup ref="AdminDeleteRoleByRoleNameActionGroup" stepKey="deleteRole2">
                <argument name="role" value="roleNoPageBuilderTemplates"/>
            </actionGroup>
            <actionGroup ref="AdminDeleteCustomUserActionGroup" stepKey="deleteUser">
                <argument name="user" value="NewAdminUser"/>
            </actionGroup>
            <actionGroup ref="logout" stepKey="logout2"/>
        </after>
        <!-- Verify Successful Navigation to Templates Page -->
        <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin">
            <argument name="adminUser" value="NewAdminUser"/>
        </actionGroup>
        <actionGroup ref="navigateToPageBuilderTemplatesGridPage" stepKey="navigateToPageBuilderTemplatesGridPage"/>
        <actionGroup ref="logout" stepKey="logout"/>
        <!-- Change User Role -->
        <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin2"/>
        <actionGroup ref="AdminOpenUserEditPageActionGroup" stepKey="AdminOpenUserEditPageActionGroup">
            <argument name="user" value="NewAdminUser"/>
        </actionGroup>
        <actionGroup ref="AdminUpdateUserRoleActionGroup" stepKey="AdminUpdateUserRoleActionGroup">
            <argument name="role" value="roleNoPageBuilderTemplates"/>
        </actionGroup>
        <actionGroup ref="AdminClickSaveButtonOnUserFormActionGroup" stepKey="AdminClickSaveButtonOnUserFormActionGroup"/>
        <actionGroup ref="AssertAdminUserSaveMessageActionGroup" stepKey="AssertAdminUserSaveMessageActionGroup"/>
        <actionGroup ref="logout" stepKey="logout2"/>
        <!-- Verify Unsuccessful Navigation to Templates Page -->
        <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin3">
            <argument name="adminUser" value="NewAdminUser"/>
        </actionGroup>
        <actionGroup ref="verifyCannotNavigateToPageBuilderTemplatesGridPage" stepKey="verifyCannotNavigateToPageBuilderTemplatesGridPage"/>
    </test>
    <test name="PageBuilderSaveTemplatesPermission">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Templates"/>
            <title value="Save Templates Permission Functionality"/>
            <description value="Verify that a user can save a template with only the save template permission and cannot save without the permission."/>
            <severity value="CRITICAL"/>
            <useCaseId value="PB-341"/>
            <testCaseId value="MC-30595"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-templates"/>
            <group value="pagebuilder-templates-permissions"/>
        </annotations>
        <before>
            <createData entity="_emptyCmsPage" stepKey="createCMSPage"/>
            <createData entity="rolePageBuilderSaveTemplates" stepKey="role1"/>
            <createData entity="rolePageBuilderTemplates" stepKey="role2"/>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="AdminCreateUserWithApiRoleActionGroup" stepKey="adminCreateUser">
                <argument name="user" value="NewAdminUser"/>
                <argument name="role" value="rolePageBuilderSaveTemplates"/>
            </actionGroup>
            <actionGroup ref="logout" stepKey="logout"/>
        </before>
        <after>
            <deleteData createDataKey="createCMSPage" stepKey="deleteCMSPage"/>
            <actionGroup ref="logout" stepKey="logout"/>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="AdminDeleteRoleByRoleNameActionGroup" stepKey="deleteRole">
                <argument name="role" value="rolePageBuilderSaveTemplates"/>
            </actionGroup>
            <actionGroup ref="AdminDeleteRoleByRoleNameActionGroup" stepKey="deleteRole2">
                <argument name="role" value="rolePageBuilderTemplates"/>
            </actionGroup>
            <actionGroup ref="AdminDeleteCustomUserActionGroup" stepKey="deleteUser">
                <argument name="user" value="NewAdminUser"/>
            </actionGroup>
            <actionGroup ref="navigateToPageBuilderTemplatesGridPage" stepKey="navigateToPageBuilderTemplatesGridPage"/>
            <actionGroup ref="filterPageBuilderTemplateGrid" stepKey="filterPageBuilderTemplateGrid"/>
            <actionGroup ref="deletePageBuilderTemplate" stepKey="deletePageBuilderTemplate"/>
            <actionGroup ref="logout" stepKey="logout2"/>
        </after>
        <!-- Verify Can Save Template -->
        <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin">
            <argument name="adminUser" value="NewAdminUser"/>
        </actionGroup>
        <actionGroup ref="NavigateToCreatedCMSPageActionGroup" stepKey="navigateToCreatedCMSPage">
            <argument name="CMSPage" value="$$createCMSPage$$"/>
        </actionGroup>
        <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        <actionGroup ref="openPageBuilderSaveTemplateModal" stepKey="openPageBuilderSaveTemplateModal"/>
        <actionGroup ref="fillPageBuilderSaveTemplateForm" stepKey="fillPageBuilderSaveTemplateForm"/>
        <generateDate date="now" format="M d, Y g:i A" stepKey="today"/>
        <actionGroup ref="savePageBuilderTemplate" stepKey="savePageBuilderTemplate"/>
        <!-- Verify Info on Template Grid Page -->
        <actionGroup ref="navigateToPageBuilderTemplatesGridPage" stepKey="navigateToPageBuilderTemplatesGridPage"/>
        <actionGroup ref="filterPageBuilderTemplateGrid" stepKey="filterPageBuilderTemplateGrid2"/>
        <actionGroup ref="validatePageBuilderTemplateDataInGrid" stepKey="validatePageBuilderTemplateDataInGrid2">
            <argument name="section" value="PageBuilderTemplatePageGrid"/>
            <argument name="templateName" value="{{PageBuilderTemplateNameRandom.name}}"/>
            <argument name="createdFor" value="{{PageBuilderTemplateCreatedFor.any}}"/>
            <argument name="createdDate" value="{$today}"/>
        </actionGroup>
        <actionGroup ref="logout" stepKey="logout"/>
        <!-- Change User Role -->
        <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin2"/>
        <actionGroup ref="AdminOpenUserEditPageActionGroup" stepKey="AdminOpenUserEditPageActionGroup">
            <argument name="user" value="NewAdminUser"/>
        </actionGroup>
        <actionGroup ref="AdminUpdateUserRoleActionGroup" stepKey="AdminUpdateUserRoleActionGroup">
            <argument name="role" value="rolePageBuilderTemplates"/>
        </actionGroup>
        <actionGroup ref="AdminClickSaveButtonOnUserFormActionGroup" stepKey="AdminClickSaveButtonOnUserFormActionGroup"/>
        <actionGroup ref="AssertAdminUserSaveMessageActionGroup" stepKey="AssertAdminUserSaveMessageActionGroup"/>
        <actionGroup ref="logout" stepKey="logout2"/>
        <!-- Verify Cannot Save Template -->
        <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin3">
            <argument name="adminUser" value="NewAdminUser"/>
        </actionGroup>
        <actionGroup ref="NavigateToCreatedCMSPageActionGroup" stepKey="navigateToCreatedCMSPage2">
            <argument name="CMSPage" value="$$createCMSPage$$"/>
        </actionGroup>
        <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage2"/>
        <actionGroup ref="verifyNoPageBuilderSaveOrApplyTemplateButtons" stepKey="verifyNoPageBuilderSaveOrApplyTemplateButtons"/>
    </test>
    <test name="PageBuilderApplyTemplatesPermission">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Templates"/>
            <title value="Apply Templates Permission Functionality"/>
            <description value="Verify that a user can apply a template with only the apply template permission and cannot apply without the permission."/>
            <severity value="CRITICAL"/>
            <useCaseId value="PB-341"/>
            <testCaseId value="MC-30597"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-templates"/>
            <group value="pagebuilder-templates-permissions"/>
        </annotations>
        <before>
            <createData entity="_emptyCmsPage" stepKey="createCMSPage"/>
            <createData entity="rolePageBuilderApplyTemplates" stepKey="role1"/>
            <createData entity="rolePageBuilderTemplates" stepKey="role2"/>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="AdminCreateUserWithApiRoleActionGroup" stepKey="adminCreateUser">
                <argument name="user" value="NewAdminUser"/>
                <argument name="role" value="rolePageBuilderApplyTemplates"/>
            </actionGroup>
            <actionGroup ref="NavigateToCreatedCMSPageActionGroup" stepKey="navigateToCreatedCMSPage">
                <argument name="CMSPage" value="$$createCMSPage$$"/>
            </actionGroup>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
            <actionGroup ref="expandPageBuilderPanelMenuSection" stepKey="expandPageBuilderPanelMenuSection">
                <argument name="contentType" value="PageBuilderButtonsContentType"/>
            </actionGroup>
            <actionGroup ref="dragContentTypeToStage" stepKey="dragContentTypeToStage">
                <argument name="contentType" value="PageBuilderButtonsContentType"/>
            </actionGroup>
            <seeElement selector="{{ButtonItemOnStage.emptyButtonItemElement('1')}}" stepKey="seeEmptyButton"/>
            <actionGroup ref="openPageBuilderSaveTemplateModal" stepKey="openPageBuilderSaveTemplateModal"/>
            <actionGroup ref="fillPageBuilderSaveTemplateForm" stepKey="fillPageBuilderSaveTemplateForm"/>
            <actionGroup ref="savePageBuilderTemplate" stepKey="savePageBuilderTemplate"/>
            <actionGroup ref="logout" stepKey="logout"/>
        </before>
        <after>
            <deleteData createDataKey="createCMSPage" stepKey="deleteCMSPage"/>
            <actionGroup ref="logout" stepKey="logout"/>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="AdminDeleteRoleByRoleNameActionGroup" stepKey="deleteRole">
                <argument name="role" value="rolePageBuilderApplyTemplates"/>
            </actionGroup>
            <actionGroup ref="AdminDeleteRoleByRoleNameActionGroup" stepKey="deleteRole2">
                <argument name="role" value="rolePageBuilderTemplates"/>
            </actionGroup>
            <actionGroup ref="AdminDeleteCustomUserActionGroup" stepKey="deleteUser">
                <argument name="user" value="NewAdminUser"/>
            </actionGroup>
            <actionGroup ref="navigateToPageBuilderTemplatesGridPage" stepKey="navigateToPageBuilderTemplatesGridPage"/>
            <actionGroup ref="filterPageBuilderTemplateGrid" stepKey="filterPageBuilderTemplateGrid"/>
            <actionGroup ref="deletePageBuilderTemplate" stepKey="deletePageBuilderTemplate"/>
            <actionGroup ref="logout" stepKey="logout2"/>
        </after>
        <!-- Verify Can Apply Template -->
        <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin">
            <argument name="adminUser" value="NewAdminUser"/>
        </actionGroup>
        <actionGroup ref="NavigateToCreatedCMSPageActionGroup" stepKey="navigateToCreatedCMSPage">
            <argument name="CMSPage" value="$$createCMSPage$$"/>
        </actionGroup>
        <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        <actionGroup ref="verifyEmptyStage" stepKey="verifyEmptyStage"/>
        <actionGroup ref="openPageBuilderApplyTemplateSlideOut" stepKey="openPageBuilderApplyTemplateSlideOut"/>
        <actionGroup ref="filterPageBuilderTemplateGrid" stepKey="filterPageBuilderTemplateGrid"/>
        <actionGroup ref="clickApplyFromPageBuilderApplyTemplateSlideOut" stepKey="clickApplyFromPageBuilderApplyTemplateSlideOut"/>
        <actionGroup ref="confirmApplyFromPageBuilderApplyTemplateSlideOut" stepKey="confirmApplyFromPageBuilderApplyTemplateSlideOut"/>
        <seeElement selector="{{ButtonItemOnStage.emptyButtonItemElement('1')}}" stepKey="seeEmptyButton"/>
        <actionGroup ref="logout" stepKey="logout"/>
        <!-- Change User Role -->
        <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin2"/>
        <actionGroup ref="AdminOpenUserEditPageActionGroup" stepKey="AdminOpenUserEditPageActionGroup">
            <argument name="user" value="NewAdminUser"/>
        </actionGroup>
        <actionGroup ref="AdminUpdateUserRoleActionGroup" stepKey="AdminUpdateUserRoleActionGroup">
            <argument name="role" value="rolePageBuilderTemplates"/>
        </actionGroup>
        <actionGroup ref="AdminClickSaveButtonOnUserFormActionGroup" stepKey="AdminClickSaveButtonOnUserFormActionGroup"/>
        <actionGroup ref="AssertAdminUserSaveMessageActionGroup" stepKey="AssertAdminUserSaveMessageActionGroup"/>
        <actionGroup ref="logout" stepKey="logout2"/>
        <!-- Verify Cannot Apply Template -->
        <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin3">
            <argument name="adminUser" value="NewAdminUser"/>
        </actionGroup>
        <actionGroup ref="NavigateToCreatedCMSPageActionGroup" stepKey="navigateToCreatedCMSPage2">
            <argument name="CMSPage" value="$$createCMSPage$$"/>
        </actionGroup>
        <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage2"/>
        <actionGroup ref="verifyNoPageBuilderSaveOrApplyTemplateButtons" stepKey="verifyNoPageBuilderSaveOrApplyTemplateButtons"/>
    </test>
    <test name="PageBuilderDeleteTemplatesPermission">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Templates"/>
            <title value="Delete Templates Permission Functionality"/>
            <description value="Verify that a user can delete a template with only the delete template permission and cannot delete without the permission."/>
            <severity value="CRITICAL"/>
            <useCaseId value="PB-341"/>
            <testCaseId value="MC-30598"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-templates"/>
            <group value="pagebuilder-templates-permissions"/>
        </annotations>
        <before>
            <createData entity="_emptyCmsPage" stepKey="createCMSPage"/>
            <createData entity="rolePageBuilderDeleteTemplates" stepKey="role1"/>
            <createData entity="rolePageBuilderTemplates" stepKey="role2"/>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="AdminCreateUserWithApiRoleActionGroup" stepKey="adminCreateUser">
                <argument name="user" value="NewAdminUser"/>
                <argument name="role" value="rolePageBuilderDeleteTemplates"/>
            </actionGroup>
            <actionGroup ref="NavigateToCreatedCMSPageActionGroup" stepKey="navigateToCreatedCMSPage">
                <argument name="CMSPage" value="$$createCMSPage$$"/>
            </actionGroup>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
            <actionGroup ref="openPageBuilderSaveTemplateModal" stepKey="openPageBuilderSaveTemplateModal"/>
            <actionGroup ref="fillPageBuilderSaveTemplateForm" stepKey="fillPageBuilderSaveTemplateForm"/>
            <actionGroup ref="savePageBuilderTemplate" stepKey="savePageBuilderTemplate"/>
            <actionGroup ref="openPageBuilderSaveTemplateModal" stepKey="openPageBuilderSaveTemplateModal2"/>
            <actionGroup ref="fillPageBuilderSaveTemplateForm" stepKey="fillPageBuilderSaveTemplateForm2">
                <argument name="templateName" value="{{PageBuilderTemplateNameRandom2.name}}"/>
            </actionGroup>
            <actionGroup ref="savePageBuilderTemplate" stepKey="savePageBuilderTemplate2"/>
            <actionGroup ref="logout" stepKey="logout"/>
        </before>
        <after>
            <deleteData createDataKey="createCMSPage" stepKey="deleteCMSPage"/>
            <actionGroup ref="logout" stepKey="logout"/>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="AdminDeleteRoleByRoleNameActionGroup" stepKey="deleteRole">
                <argument name="role" value="rolePageBuilderDeleteTemplates"/>
            </actionGroup>
            <actionGroup ref="AdminDeleteRoleByRoleNameActionGroup" stepKey="deleteRole2">
                <argument name="role" value="rolePageBuilderTemplates"/>
            </actionGroup>
            <actionGroup ref="AdminDeleteCustomUserActionGroup" stepKey="deleteUser">
                <argument name="user" value="NewAdminUser"/>
            </actionGroup>
            <actionGroup ref="navigateToPageBuilderTemplatesGridPage" stepKey="navigateToPageBuilderTemplatesGridPage"/>
            <actionGroup ref="filterPageBuilderTemplateGrid" stepKey="filterPageBuilderTemplateGrid">
                <argument name="templateName" value="{{PageBuilderTemplateNameRandom2.name}}"/>
            </actionGroup>
            <actionGroup ref="deletePageBuilderTemplate" stepKey="deletePageBuilderTemplate">
                <argument name="templateIdentifier" value="{{PageBuilderTemplateNameRandom2.name}}"/>
            </actionGroup>
            <actionGroup ref="logout" stepKey="logout2"/>
        </after>
        <!-- Verify Can Delete Template -->
        <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin">
            <argument name="adminUser" value="NewAdminUser"/>
        </actionGroup>
        <actionGroup ref="navigateToPageBuilderTemplatesGridPage" stepKey="navigateToPageBuilderTemplatesGridPage"/>
        <actionGroup ref="filterPageBuilderTemplateGrid" stepKey="filterPageBuilderTemplateGrid"/>
        <actionGroup ref="deletePageBuilderTemplate" stepKey="deletePageBuilderTemplate"/>
        <!-- Verify Delete on Template Grid Page -->
        <actionGroup ref="filterPageBuilderTemplateGrid" stepKey="filterPageBuilderTemplateGrid2"/>
        <actionGroup ref="validatePageBuilderTemplateEmptyGrid" stepKey="validatePageBuilderTemplateEmptyGrid">
            <argument name="section" value="PageBuilderTemplatePageGrid"/>
        </actionGroup>
        <actionGroup ref="logout" stepKey="logout"/>
        <!-- Change User Role -->
        <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin2"/>
        <actionGroup ref="AdminOpenUserEditPageActionGroup" stepKey="AdminOpenUserEditPageActionGroup">
            <argument name="user" value="NewAdminUser"/>
        </actionGroup>
        <actionGroup ref="AdminUpdateUserRoleActionGroup" stepKey="AdminUpdateUserRoleActionGroup">
            <argument name="role" value="rolePageBuilderTemplates"/>
        </actionGroup>
        <actionGroup ref="AdminClickSaveButtonOnUserFormActionGroup" stepKey="AdminClickSaveButtonOnUserFormActionGroup"/>
        <actionGroup ref="AssertAdminUserSaveMessageActionGroup" stepKey="AssertAdminUserSaveMessageActionGroup"/>
        <actionGroup ref="logout" stepKey="logout2"/>
        <!-- Verify Cannot Delete Template -->
        <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin3">
            <argument name="adminUser" value="NewAdminUser"/>
        </actionGroup>
        <actionGroup ref="navigateToPageBuilderTemplatesGridPage" stepKey="navigateToPageBuilderTemplatesGridPage2"/>
        <actionGroup ref="filterPageBuilderTemplateGrid" stepKey="filterPageBuilderTemplateGrid3">
            <argument name="templateName" value="{{PageBuilderTemplateNameRandom2.name}}"/>
        </actionGroup>
        <actionGroup ref="verifyNoPageBuilderDeleteTemplateButton" stepKey="verifyNoPageBuilderDeleteTemplateButton">
            <argument name="templateIdentifier" value="{{PageBuilderTemplateNameRandom2.name}}"/>
        </actionGroup>
    </test>
</tests>
