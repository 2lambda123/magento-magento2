<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="SlidePosterButtonNeverShow">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Slider"/>
            <title value="Poster - Check poster button never show state works"/>
            <description value="Check poster button never show state works"/>
            <severity value="CRITICAL"/>
            <useCaseId value="MAGETWO-75774"/>
            <testCaseId value="MAGETWO-89525"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-slider"/>
            <group value="pagebuilder-sliderPoster"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle">
            <argument name="contentType" value="PageBuilderSliderContentType"/>
        </actionGroup>
        <actionGroup ref="expandPageBuilderPanelGroup" stepKey="expandPageBuilderPanelGroup">
            <argument name="group" value="PageBuilderSliderContentType"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToStageAndExpectEditPanel" stepKey="dragSliderIntoStage">
            <argument name="contentType" value="PageBuilderSliderContentType"/>
        </actionGroup>
        <!-- Fill Out Edit Panel -->
        <comment userInput="Fill Out Edit Panel" stepKey="commentFillEditPanel"/>
        <actionGroup ref="attachFileSlideOutProperty" stepKey="attachPageBuilderFile">
            <argument name="property" value="PageBuilderBackgroundImage_JPG"/>
        </actionGroup>
        <actionGroup ref="attachFileSlideOutProperty" stepKey="attachPageBuilderMobileFile">
            <argument name="property" value="PageBuilderBackgroundImage_GIF"/>
        </actionGroup>
        <!-- fill button fields -->
        <actionGroup ref="selectSlideOutPanelField" stepKey="selectShowButtonAlwaysProperty">
            <argument name="property" value="PageBuilderSlideShowButtonAlwaysProperty"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterSlideButtonText">
            <argument name="property" value="PageBuilderSlideButtonTextProperty"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelLinkUrlField" stepKey="enterSlideLinkUrl">
            <argument name="property" value="PageBuilderSlideLinkExternalUrlProperty"/>
            <argument name="selection" value="{{ExternalLink.url}}"/>
            <argument name="newTab" value="PageBuilderSlideNewTabProperty"/>
        </actionGroup>
        <actionGroup ref="selectSlideOutPanelField" stepKey="selectButtonTypeSecondaryProperty">
            <argument name="property" value="PageBuilderSlideButtonTypeSecondaryProperty"/>
        </actionGroup>
        <!-- disable button fields and check values -->
        <actionGroup ref="selectSlideOutPanelField" stepKey="selectShowButtonDefaultProperty">
            <argument name="property" value="PageBuilderSlideShowButtonDefaultProperty"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="seeButtonTextOnForm">
            <argument name="property" value="PageBuilderSlideButtonTextProperty"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="seeButtonLinkOnForm">
            <argument name="property" value="PageBuilderSlideLinkExternalUrlPropertyValidate"/>
        </actionGroup>
        <actionGroup ref="seeSlideOutPanelFieldOpenInNewTab" stepKey="seeNewTabOnForm">
            <argument name="property" value="PageBuilderSlideNewTabProperty"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="seeSlideButtonTypeProperty">
            <argument name="property" value="PageBuilderSlideButtonTypeSecondaryProperty"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings"/>
        <actionGroup ref="saveAndContinueEditCmsPage" stepKey="saveAndContinueEditCmsPage"/>
        <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        <!-- Validate Stage -->
        <comment userInput="Validate Stage" stepKey="commentValidateStage"/>
        <waitForElementVisible time="2" selector="{{SlideOnBackend.poster}}" stepKey="waitForPosterInAdmin" />
        <seeElement selector="{{SlideOnBackend.poster}}" stepKey="verifyPosterInAdmin"/>
        <dontSeeElement selector="{{SlideOnBackend.buttonText(PageBuilderSlideButtonTextProperty.value)}}" stepKey="verifyDontSeeButtonTextBackend"/>
        <moveMouseOver selector="{{SlideOnBackend.poster}}" stepKey="moveMouseOverBackendSlide"/>
        <dontSeeElement selector="{{SlideOnBackend.buttonText(PageBuilderSlideButtonTextProperty.value)}}" stepKey="verifyDontSeeOnHoverButtonTextBackend"/>
        <actionGroup ref="openPageBuilderEditPanelSmallByIndex" stepKey="openEditPanel">
            <argument name="section" value="SlideOnBackend"/>
        </actionGroup>
        <!-- Validate Edit Panel -->
        <comment userInput="Validate Edit Panel" stepKey="commentValidateEditPanel"/>
        <dontSeeInField selector="{{EditPanelForm.panelFieldControl(PageBuilderSlideButtonTextProperty.section, PageBuilderSlideButtonTextProperty.fieldName)}}" userInput="{{PageBuilderSlideButtonTextProperty.value}}" stepKey="dontSeeInFieldProperty"/>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="seeButtonLinkOnForm2">
            <argument name="property" value="PageBuilderSlideLinkExternalUrlPropertyValidate"/>
        </actionGroup>
        <actionGroup ref="seeSlideOutPanelFieldOpenInNewTab" stepKey="seeNewTabOnForm2">
            <argument name="property" value="PageBuilderSlideNewTabProperty"/>
        </actionGroup>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="seeSlideButtonTypeProperty2">
            <argument name="property" value="PageBuilderSlideButtonTypePrimaryProperty"/>
        </actionGroup>
        <actionGroup ref="navigateToStoreFront" stepKey="navigateToStoreFront">
            <argument name="contentType" value="PageBuilderSliderContentType"/>
        </actionGroup>
        <!-- Validate Storefront -->
        <comment userInput="Validate Storefront" stepKey="commentValidateStorefront"/>
        <seeElement selector="{{SlideOnFrontend.slide}}" stepKey="verifySlideInFrontend"/>
        <waitForElementVisible time="3" selector="{{SlideOnFrontend.poster}}" stepKey="waitForPosterInFrontend"/>
        <seeElement selector="{{SlideOnFrontend.poster}}" stepKey="verifyPosterInFrontend"/>
        <dontSeeElement selector="{{SlideOnFrontend.posterMobileWithMobileImage}}" stepKey="dontSeePosterInFrontendMobileWithMobileImage"/>
        <dontSeeElement selector="{{SlideOnFrontend.buttonText(PageBuilderSlideButtonTextProperty.value)}}" stepKey="verifyDontSeeOnHoverOverlayOnFrontend"/>
        <moveMouseOver selector="{{SlideOnFrontend.slide}}" stepKey="moveMouseOverFrontendSlide"/>
        <dontSeeElement selector="{{SlideOnFrontend.buttonText(PageBuilderSlideButtonTextProperty.value)}}" stepKey="verifyStillDontSeeOnHoverOverlayOnFrontend"/>
        <!-- Validate settings on frontend mobile -->
        <resizeWindow width="767" height="1000" stepKey="resizeWindowToMobile"/>
        <waitForElementVisible time="3" selector="{{SlideOnFrontend.posterMobileWithMobileImage}}" stepKey="waitForPosterInFrontendMobileWithMobileImage"/>
        <seeElement selector="{{SlideOnFrontend.posterMobileWithMobileImage}}" stepKey="verifyPosterInFrontendMobileWithMobileImage"/>
        <dontSeeElement selector="{{SlideOnFrontend.poster}}" stepKey="dontSeePosterInFrontend"/>
        <reloadPage stepKey="reloadPage"/>
        <dontSeeElement selector="{{SlideOnFrontend.buttonText(PageBuilderSlideButtonTextProperty.value)}}" stepKey="verifyDontSeeOnHoverOverlayOnFrontendMobile"/>
        <moveMouseOver selector="{{SlideOnFrontend.slide}}" stepKey="moveMouseOverFrontendSlideMobile"/>
        <dontSeeElement selector="{{SlideOnFrontend.buttonText(PageBuilderSlideButtonTextProperty.value)}}" stepKey="verifyStillDontSeeOnHoverOverlayOnFrontendMobile"/>
        <resizeWindow width="1000" height="1000" stepKey="resizeWindowToDesktop"/>
        <waitForElementVisible time="3" selector="{{SlideOnFrontend.poster}}" stepKey="waitForPosterInFrontend2"/>
        <seeElement selector="{{SlideOnFrontend.poster}}" stepKey="verifyPosterInFrontend2"/>
        <dontSeeElement selector="{{SlideOnFrontend.posterMobileWithMobileImage}}" stepKey="dontSeePosterInFrontendMobileWithMobileImage2"/>
    </test>
    <test name="SlidePosterButtonOnHover">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Slider"/>
            <title value="Poster - Check poster button on hover state works"/>
            <description value="Check poster button on hover state works"/>
            <severity value="CRITICAL"/>
            <useCaseId value="MAGETWO-75774"/>
            <testCaseId value="MAGETWO-88745"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-slider"/>
            <group value="pagebuilder-sliderPoster"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle">
            <argument name="contentType" value="PageBuilderSliderContentType"/>
        </actionGroup>
        <actionGroup ref="expandPageBuilderPanelGroup" stepKey="expandPageBuilderPanelGroup">
            <argument name="group" value="PageBuilderSliderContentType"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToStageAndExpectEditPanel" stepKey="dragSliderIntoStage">
            <argument name="contentType" value="PageBuilderSliderContentType"/>
        </actionGroup>
        <!-- Fill Out Edit Panel -->
        <comment userInput="Fill Out Edit Panel" stepKey="commentFillEditPanel"/>
        <actionGroup ref="attachFileSlideOutProperty" stepKey="attachPageBuilderFile">
            <argument name="property" value="PageBuilderBackgroundImage_JPG"/>
        </actionGroup>
        <actionGroup ref="attachFileSlideOutProperty" stepKey="attachPageBuilderMobileFile">
            <argument name="property" value="PageBuilderBackgroundImage_GIF"/>
        </actionGroup>
        <actionGroup ref="selectSlideOutPanelField" stepKey="selectSlideButtonShowOnHover">
            <argument name="property" value="PageBuilderSlideShowButtonOnHoverProperty"/>
        </actionGroup>
        <actionGroup ref="validateSlideOutPanelFieldIsNotDisabled" stepKey="seeSlideButtonTextPropertyIsDisabled">
            <argument name="property" value="PageBuilderSlideButtonTextProperty"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterSlideButtonText">
            <argument name="property" value="PageBuilderSlideButtonTextProperty"/>
        </actionGroup>
        <actionGroup ref="validateSlideOutPanelFieldIsNotDisabled" stepKey="seeSlideLinkUrlPropertyIsDisabled">
            <argument name="property" value="PageBuilderSlideLinkExternalUrlProperty"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelLinkUrlField" stepKey="enterSlideLinkUrl">
            <argument name="property" value="PageBuilderSlideLinkExternalUrlProperty"/>
            <argument name="selection" value="{{ExternalLink.url}}"/>
            <argument name="newTab" value="PageBuilderSlideNewTabDefaultProperty"/>
        </actionGroup>
        <actionGroup ref="validateSlideOutPanelFieldIsNotDisabled" stepKey="seeSlideNewTabDefaultIsDisabled">
            <argument name="property" value="PageBuilderSlideNewTabDefaultProperty"/>
        </actionGroup>
        <actionGroup ref="validateSlideOutPanelFieldIsNotDisabled" stepKey="seeSlideButtonTypePropertyIsDisabled">
            <argument name="property" value="PageBuilderSlideButtonTypePrimaryProperty"/>
        </actionGroup>
        <actionGroup ref="selectSlideOutPanelField" stepKey="enterSlideShowOverlayAlways">
            <argument name="property" value="PageBuilderSlideShowContentOverlayAlwaysProperty"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterSlideOverlayColor">
            <argument name="property" value="PageBuilderSlideContentOverlayColorProperty"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterSlideOverlayTransparency">
            <argument name="property" value="PageBuilderSlideOverlayTransparencyProperty"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings"/>
        <!-- Validate Stage -->
        <comment userInput="Validate Stage" stepKey="commentValidateStage"/>
        <waitForElementVisible time="2" selector="{{SlideOnBackend.poster}}" stepKey="waitForPosterInAdmin" />
        <seeElement selector="{{SlideOnBackend.poster}}" stepKey="verifyPosterInAdmin"/>
        <dontSeeElement selector="{{SlideOnBackend.buttonText(PageBuilderSlideButtonTextProperty.value)}}" stepKey="verifyDontSeeOnHoverButtonText"/>
        <seeElement selector="{{SlideOnBackend.posterOverlay}}" stepKey="verifySeeOverlayBackend"/>
        <moveMouseOver selector="{{SlideOnBackend.poster}}" stepKey="moveMouseOverBackendSlide"/>
        <waitForElement time="2" selector="{{SlideOnBackend.buttonText(PageBuilderSlideButtonTextProperty.value)}}" stepKey="waitForOnHoverButtonTextBackend" />
        <seeElement selector="{{SlideOnBackend.buttonText(PageBuilderSlideButtonTextProperty.value)}}" stepKey="verifySeeOnHoverButtonTextBackend"/>
        <actionGroup ref="saveAndContinueEditCmsPage" stepKey="saveAndContinueEditCmsPage"/>
        <actionGroup ref="navigateToStoreFront" stepKey="navigateToStoreFront">
            <argument name="contentType" value="PageBuilderSliderContentType"/>
        </actionGroup>
        <!-- Validate Storefront -->
        <comment userInput="Validate Storefront" stepKey="commentValidateStorefront"/>
        <seeElement selector="{{SlideOnFrontend.slide}}" stepKey="verifySlideInFrontend"/>
        <waitForElementVisible time="3" selector="{{SlideOnFrontend.poster}}" stepKey="waitForPosterInFrontend"/>
        <seeElement selector="{{SlideOnFrontend.poster}}" stepKey="verifyPosterInFrontend"/>
        <dontSeeElement selector="{{SlideOnFrontend.posterMobileWithMobileImage}}" stepKey="dontSeePosterInFrontendMobileWithMobileImage"/>
        <dontSeeElement selector="{{SlideOnFrontend.buttonText(PageBuilderSlideButtonTextProperty.value)}}" stepKey="verifyDontSeeOnHoverButtonTextOnFrontend"/>
        <seeElement selector="{{SlideOnFrontend.posterOverlay}}" stepKey="verifySeeOverlayOnFrontend"/>
        <moveMouseOver selector="{{SlideOnFrontend.slide}}" stepKey="moveMouseOverFrontendSlide"/>
        <waitForElement time="2" selector="{{SlideOnFrontend.buttonText(PageBuilderSlideButtonTextProperty.value)}}" stepKey="waitForOnHoverButtonTextFrontend" />
        <seeElement selector="{{SlideOnFrontend.buttonText(PageBuilderSlideButtonTextProperty.value)}}" stepKey="verifySeeOnHoverButtonTextOnFrontend"/>
        <!-- Validate settings on frontend mobile -->
        <resizeWindow width="767" height="1000" stepKey="resizeWindowToMobile"/>
        <waitForElementVisible time="3" selector="{{SlideOnFrontend.posterMobileWithMobileImage}}" stepKey="waitForPosterInFrontendMobileWithMobileImage"/>
        <seeElement selector="{{SlideOnFrontend.posterMobileWithMobileImage}}" stepKey="verifyPosterInFrontendMobileWithMobileImage"/>
        <dontSeeElement selector="{{SlideOnFrontend.poster}}" stepKey="dontSeePosterInFrontend"/>
        <reloadPage stepKey="reloadPage"/>
        <dontSeeElement selector="{{SlideOnFrontend.buttonText(PageBuilderSlideButtonTextProperty.value)}}" stepKey="verifyDontSeeOnHoverButtonTextOnFrontendMobile"/>
        <moveMouseOver selector="{{SlideOnFrontend.slide}}" stepKey="moveMouseOverFrontendSlideMobile"/>
        <waitForElement time="2" selector="{{SlideOnFrontend.buttonText(PageBuilderSlideButtonTextProperty.value)}}" stepKey="waitForOnHoverButtonTextFrontendMobile" />
        <seeElement selector="{{SlideOnFrontend.buttonText(PageBuilderSlideButtonTextProperty.value)}}" stepKey="verifySeeOnHoverButtonTextOnFrontendMobile"/>
        <resizeWindow width="1000" height="1000" stepKey="resizeWindowToDesktop"/>
        <waitForElementVisible time="3" selector="{{SlideOnFrontend.poster}}" stepKey="waitForPosterInFrontend2"/>
        <seeElement selector="{{SlideOnFrontend.poster}}" stepKey="verifyPosterInFrontend2"/>
        <dontSeeElement selector="{{SlideOnFrontend.posterMobileWithMobileImage}}" stepKey="dontSeePosterInFrontendMobileWithMobileImage2"/>
    </test>
    <test name="SlidePosterOverlayNeverShow">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Slider"/>
            <title value="Poster - Check poster overlay never show state works"/>
            <description value="Check poster overlay never show state works"/>
            <severity value="CRITICAL"/>
            <useCaseId value="MAGETWO-75774"/>
            <testCaseId value="MAGETWO-89524"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-slider"/>
            <group value="pagebuilder-sliderPoster"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle">
            <argument name="contentType" value="PageBuilderSliderContentType"/>
        </actionGroup>
        <actionGroup ref="expandPageBuilderPanelGroup" stepKey="expandPageBuilderPanelGroup">
            <argument name="group" value="PageBuilderSliderContentType"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToStageAndExpectEditPanel" stepKey="dragSliderIntoStage">
            <argument name="contentType" value="PageBuilderSliderContentType"/>
        </actionGroup>
        <!-- Fill Out Edit Panel -->
        <comment userInput="Fill Out Edit Panel" stepKey="commentFillEditPanel"/>
        <actionGroup ref="attachFileSlideOutProperty" stepKey="attachPageBuilderFile">
            <argument name="property" value="PageBuilderBackgroundImage_JPG"/>
        </actionGroup>
        <actionGroup ref="attachFileSlideOutProperty" stepKey="attachPageBuilderMobileFile">
            <argument name="property" value="PageBuilderBackgroundImage_GIF"/>
        </actionGroup>
        <actionGroup ref="selectSlideOutPanelField" stepKey="selectShowButtonAlwaysProperty">
            <argument name="property" value="PageBuilderSlideShowButtonAlwaysProperty"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterSlideButtonText">
            <argument name="property" value="PageBuilderSlideButtonTextProperty"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelLinkUrlField" stepKey="enterSlideLinkUrl">
            <argument name="property" value="PageBuilderSlideLinkExternalUrlProperty"/>
            <argument name="selection" value="{{ExternalLink.url}}"/>
            <argument name="newTab" value="PageBuilderSlideNewTabDefaultProperty"/>
        </actionGroup>
        <actionGroup ref="selectSlideOutPanelField" stepKey="enterSlideOverlayNeverShow">
            <argument name="property" value="PageBuilderSlideShowContentOverlayNeverShowProperty"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings"/>
        <!-- Validate Stage -->
        <comment userInput="Validate Stage" stepKey="commentValidateStage"/>
        <waitForElementVisible time="2" selector="{{SlideOnBackend.poster}}" stepKey="waitForPosterInAdmin" />
        <seeElement selector="{{SlideOnBackend.poster}}" stepKey="verifyPosterInAdmin"/>
        <dontSeeElement selector="{{SlideOnBackend.posterOverlay}}" stepKey="verifyDontSeeOverlayBackend"/>
        <moveMouseOver selector="{{SlideOnBackend.poster}}" stepKey="moveMouseOverBackendSlide"/>
        <dontSeeElement selector="{{SlideOnBackend.posterOverlay}}" stepKey="verifyStillDontSeeOverlayBackend"/>
        <actionGroup ref="saveAndContinueEditCmsPage" stepKey="saveAndContinueEditCmsPage"/>
        <actionGroup ref="navigateToStoreFront" stepKey="navigateToStoreFront">
            <argument name="contentType" value="PageBuilderSliderContentType"/>
        </actionGroup>
        <!-- Validate Storefront -->
        <comment userInput="Validate Storefront" stepKey="commentValidateStorefront"/>
        <seeElement selector="{{SlideOnFrontend.slide}}" stepKey="verifySlideInFrontend"/>
        <waitForElementVisible time="3" selector="{{SlideOnFrontend.poster}}" stepKey="waitForPosterInFrontend5"/>
        <seeElement selector="{{SlideOnFrontend.poster}}" stepKey="verifyPosterInFrontend"/>
        <dontSeeElement selector="{{SlideOnFrontend.posterMobileWithMobileImage}}" stepKey="dontSeePosterInFrontendMobileWithMobileImage"/>
        <dontSeeElement selector="{{SlideOnFrontend.posterOverlay}}" stepKey="verifyDontSeeOnHoverOverlayOnFrontend"/>
        <moveMouseOver selector="{{SlideOnFrontend.slide}}" stepKey="moveMouseOverFrontendSlide"/>
        <dontSeeElement selector="{{SlideOnFrontend.posterOverlay}}" stepKey="verifyStillDontSeeOnHoverOverlayOnFrontend"/>
        <!-- Validate settings on frontend mobile -->
        <resizeWindow width="767" height="1000" stepKey="resizeWindowToMobile"/>
        <waitForElementVisible time="3" selector="{{SlideOnFrontend.posterMobileWithMobileImage}}" stepKey="waitForPosterInFrontendMobileWithMobileImage"/>
        <seeElement selector="{{SlideOnFrontend.posterMobileWithMobileImage}}" stepKey="verifyPosterInFrontendMobileWithMobileImage"/>
        <dontSeeElement selector="{{SlideOnFrontend.poster}}" stepKey="dontSeePosterInFrontend"/>
        <reloadPage stepKey="reloadPage"/>
        <dontSeeElement selector="{{SlideOnFrontend.posterOverlay}}" stepKey="verifyDontSeeOnHoverOverlayOnFrontendMobile"/>
        <moveMouseOver selector="{{SlideOnFrontend.slide}}" stepKey="moveMouseOverFrontendSlideMobile"/>
        <dontSeeElement selector="{{SlideOnFrontend.posterOverlay}}" stepKey="verifyStillDontSeeOnHoverOverlayOnFrontendMobile"/>
        <resizeWindow width="1000" height="1000" stepKey="resizeWindowToDesktop"/>
        <waitForElementVisible time="3" selector="{{SlideOnFrontend.poster}}" stepKey="waitForPosterInFrontend6"/>
        <seeElement selector="{{SlideOnFrontend.poster}}" stepKey="verifyPosterInFrontend2"/>
        <dontSeeElement selector="{{SlideOnFrontend.posterMobileWithMobileImage}}" stepKey="dontSeePosterInFrontendMobileWithMobileImage2"/>
    </test>
    <test name="SlidePosterOverlayOnHover">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Slider"/>
            <title value="Poster - Check poster overlay on hover state works"/>
            <description value="Check poster overlay on hover state works"/>
            <severity value="CRITICAL"/>
            <useCaseId value="MAGETWO-75774"/>
            <testCaseId value="MAGETWO-89523"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-slider"/>
            <group value="pagebuilder-sliderPoster"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle">
            <argument name="contentType" value="PageBuilderSliderContentType"/>
        </actionGroup>
        <actionGroup ref="expandPageBuilderPanelGroup" stepKey="expandPageBuilderPanelGroup">
            <argument name="group" value="PageBuilderSliderContentType"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToStageAndExpectEditPanel" stepKey="dragSliderIntoStage">
            <argument name="contentType" value="PageBuilderSliderContentType"/>
        </actionGroup>
        <!-- Fill Out Edit Panel -->
        <comment userInput="Fill Out Edit Panel" stepKey="commentFillEditPanel"/>
        <actionGroup ref="attachFileSlideOutProperty" stepKey="attachPageBuilderFile">
            <argument name="property" value="PageBuilderBackgroundImage_JPG"/>
        </actionGroup>
        <actionGroup ref="attachFileSlideOutProperty" stepKey="attachPageBuilderMobileFile">
            <argument name="property" value="PageBuilderBackgroundImage_GIF"/>
        </actionGroup>
        <actionGroup ref="selectSlideOutPanelField" stepKey="selectShowButtonAlwaysProperty">
            <argument name="property" value="PageBuilderSlideShowButtonAlwaysProperty"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterSlideButtonText">
            <argument name="property" value="PageBuilderSlideButtonTextProperty"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelLinkUrlField" stepKey="enterSlideLinkUrl">
            <argument name="property" value="PageBuilderSlideLinkExternalUrlProperty"/>
            <argument name="selection" value="{{ExternalLink.url}}"/>
            <argument name="newTab" value="PageBuilderSlideNewTabDefaultProperty"/>
        </actionGroup>
        <actionGroup ref="selectSlideOutPanelField" stepKey="enterSlideOverlayShowOnHover">
            <argument name="property" value="PageBuilderSlideShowContentOverlayOnHoverProperty"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterSlideOverlayColor">
            <argument name="property" value="PageBuilderSlideContentOverlayColorProperty"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterSlideOverlayTransparency">
            <argument name="property" value="PageBuilderSlideOverlayTransparencyProperty"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings"/>
        <!-- Validate Stage -->
        <comment userInput="Validate Stage" stepKey="commentValidateStage"/>
        <waitForElementVisible time="2" selector="{{SlideOnBackend.poster}}" stepKey="waitForPosterInAdmin" />
        <seeElement selector="{{SlideOnBackend.poster}}" stepKey="verifyPosterInAdmin"/>
        <dontSeeElement selector="{{SlideOnBackend.posterOverlay}}" stepKey="verifyDontSeeOverlayBackend"/>
        <seeElement selector="{{SlideOnBackend.buttonText(PageBuilderSlideButtonTextProperty.value)}}" stepKey="verifySeeButtonTextBackend"/>
        <moveMouseOver selector="{{SlideOnBackend.poster}}" stepKey="moveMouseOverBackendSlide"/>
        <waitForElement time="2" selector="{{SlideOnBackend.posterOverlay}}" stepKey="waitForOnHoverOverlayBackend" />
        <seeElement selector="{{SlideOnBackend.posterOverlay}}" stepKey="verifySeeOnHoverOverlayBackend"/>
        <actionGroup ref="saveAndContinueEditCmsPage" stepKey="saveAndContinueEditCmsPage"/>
        <actionGroup ref="navigateToStoreFront" stepKey="navigateToStoreFront">
            <argument name="contentType" value="PageBuilderSliderContentType"/>
        </actionGroup>
        <!-- Validate Storefront -->
        <comment userInput="Validate Storefront" stepKey="commentValidateStorefront"/>
        <seeElement selector="{{SlideOnFrontend.slide}}" stepKey="verifySlideInFrontend"/>
        <waitForElementVisible time="3" selector="{{SlideOnFrontend.poster}}" stepKey="waitForPosterInFrontend3"/>
        <seeElement selector="{{SlideOnFrontend.poster}}" stepKey="verifyPosterInFrontend"/>
        <dontSeeElement selector="{{SlideOnFrontend.posterMobileWithMobileImage}}" stepKey="dontSeePosterInFrontendMobileWithMobileImage"/>
        <dontSeeElement selector="{{SlideOnFrontend.posterOverlay}}" stepKey="verifyDontSeeOnHoverOverlayOnFrontend"/>
        <seeElement selector="{{SlideOnFrontend.buttonText(PageBuilderSlideButtonTextProperty.value)}}" stepKey="verifySeeButtonTextFrontend"/>
        <moveMouseOver selector="{{SlideOnFrontend.slide}}" stepKey="moveMouseOverFrontendSlide"/>
        <waitForElement time="2" selector="{{SlideOnFrontend.posterOverlay}}" stepKey="waitForOnHoverOverlayOnFrontend"/>
        <seeElement selector="{{SlideOnFrontend.posterOverlay}}" stepKey="verifyseeOnHoverOverlayOnFrontend7"/>
        <!-- Validate settings on frontend mobile -->
        <resizeWindow width="767" height="1000" stepKey="resizeWindowToMobile"/>
        <waitForElementVisible time="3" selector="{{SlideOnFrontend.posterMobileWithMobileImage}}" stepKey="waitForPosterInFrontendMobileWithMobileImage"/>
        <seeElement selector="{{SlideOnFrontend.posterMobileWithMobileImage}}" stepKey="verifyPosterInFrontendMobileWithMobileImage"/>
        <dontSeeElement selector="{{SlideOnFrontend.poster}}" stepKey="dontSeePosterInFrontend"/>
        <reloadPage stepKey="reloadPage"/>
        <dontSeeElement selector="{{SlideOnFrontend.posterOverlay}}" stepKey="verifyDontSeeOnHoverOverlayOnFrontendMobile"/>
        <moveMouseOver selector="{{SlideOnFrontend.slide}}" stepKey="moveMouseOverFrontendSlideMobile"/>
        <waitForElement time="2" selector="{{SlideOnFrontend.posterOverlay}}" stepKey="waitForOnHoverOverlayOnFrontendMobile"/>
        <seeElement selector="{{SlideOnFrontend.posterOverlay}}" stepKey="verifySeeOnHoverOverlayOnFrontendMobile"/>
        <resizeWindow width="1000" height="1000" stepKey="resizeWindowToDesktop"/>
        <waitForElementVisible time="3" selector="{{SlideOnFrontend.poster}}" stepKey="waitForPosterInFrontend4"/>
        <seeElement selector="{{SlideOnFrontend.poster}}" stepKey="verifyPosterInFrontend2"/>
        <dontSeeElement selector="{{SlideOnFrontend.posterMobileWithMobileImage}}" stepKey="dontSeePosterInFrontendMobileWithMobileImage2"/>
    </test>
    <test name="SlidePosterOverlayAndButtonOnHover">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Slider"/>
            <title value="Poster - Check poster button and overlay on hover state works"/>
            <description value="Check poster button and overlay on hover state works"/>
            <severity value="CRITICAL"/>
            <useCaseId value="MAGETWO-75774"/>
            <testCaseId value="MAGETWO-89526"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-slider"/>
            <group value="pagebuilder-sliderPoster"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle">
            <argument name="contentType" value="PageBuilderSliderContentType"/>
        </actionGroup>
        <actionGroup ref="expandPageBuilderPanelGroup" stepKey="expandPageBuilderPanelGroup">
            <argument name="group" value="PageBuilderSliderContentType"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToStageAndExpectEditPanel" stepKey="dragSliderIntoStage">
            <argument name="contentType" value="PageBuilderSliderContentType"/>
        </actionGroup>
        <!-- Fill Out Edit Panel -->
        <comment userInput="Fill Out Edit Panel" stepKey="commentFillEditPanel"/>
        <actionGroup ref="attachFileSlideOutProperty" stepKey="attachPageBuilderFile">
            <argument name="property" value="PageBuilderBackgroundImage_JPG"/>
        </actionGroup>
        <actionGroup ref="attachFileSlideOutProperty" stepKey="attachPageBuilderMobileFile">
            <argument name="property" value="PageBuilderBackgroundImage_GIF"/>
        </actionGroup>
        <actionGroup ref="selectSlideOutPanelField" stepKey="selectSlideButtonShowOnHover">
            <argument name="property" value="PageBuilderSlideShowButtonOnHoverProperty"/>
        </actionGroup>
        <actionGroup ref="validateSlideOutPanelFieldIsNotDisabled" stepKey="seeSlideButtonTextPropertyIsDisabled">
            <argument name="property" value="PageBuilderSlideButtonTextProperty"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterSlideButtonText">
            <argument name="property" value="PageBuilderSlideButtonTextProperty"/>
        </actionGroup>
        <actionGroup ref="validateSlideOutPanelFieldIsNotDisabled" stepKey="seeSlideLinkUrlPropertyIsDisabled">
            <argument name="property" value="PageBuilderSlideLinkExternalUrlProperty"/>
        </actionGroup>
        <waitForElementVisible selector="{{PageBuilderSection.LinkSelect('link_url')}}" stepKey="waitForLinkSelect"/>
        <seeElement selector="{{PageBuilderSection.LinkSelect('link_url')}}" stepKey="seeLinkSelect"/>
        <seeOptionIsSelected selector="{{PageBuilderSection.LinkSelect('link_url')}}" userInput="URL" stepKey="seeLinkSelectedByDefault" />
        <actionGroup ref="fillSlideOutPanelLinkUrlField" stepKey="enterSlideLinkUrl">
            <argument name="property" value="PageBuilderSlideLinkExternalUrlProperty"/>
            <argument name="selection" value="{{ExternalLink.url}}"/>
            <argument name="newTab" value="PageBuilderSlideNewTabDefaultProperty"/>
        </actionGroup>
        <actionGroup ref="validateSlideOutPanelFieldIsNotDisabled" stepKey="seeSlideNewTabDefaultIsDisabled">
            <argument name="property" value="PageBuilderSlideNewTabDefaultProperty"/>
        </actionGroup>
        <actionGroup ref="validateSlideOutPanelFieldIsNotDisabled" stepKey="seeSlideButtonTypePropertyIsDisabled">
            <argument name="property" value="PageBuilderSlideButtonTypePrimaryProperty"/>
        </actionGroup>
        <actionGroup ref="selectSlideOutPanelField" stepKey="enterSlideOverlayShowOnHover">
            <argument name="property" value="PageBuilderSlideShowContentOverlayOnHoverProperty"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterSlideOverlayColor">
            <argument name="property" value="PageBuilderSlideContentOverlayColorProperty"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterSlideOverlayTransparency">
            <argument name="property" value="PageBuilderSlideOverlayTransparencyProperty"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings"/>
        <!-- Validate Stage -->
        <comment userInput="Validate Stage" stepKey="commentValidateStage"/>
        <waitForElementVisible time="2" selector="{{SlideOnBackend.poster}}" stepKey="waitForPosterInAdmin" />
        <seeElement selector="{{SlideOnBackend.poster}}" stepKey="verifyPosterInAdmin"/>
        <dontSeeElement selector="{{SlideOnBackend.posterOverlay}}" stepKey="verifyDontSeeOverlayBackend"/>
        <dontSeeElement selector="{{SlideOnBackend.buttonText(PageBuilderSlideButtonTextProperty.value)}}" stepKey="verifyDontSeeOnHoverButtonTextBackend"/>
        <moveMouseOver selector="{{SlideOnBackend.poster}}" stepKey="moveMouseOverBackendSlide"/>
        <waitForElement time="2" selector="{{SlideOnBackend.posterOverlay}}" stepKey="waitForOnHoverOverlayBackend" />
        <waitForElement time="2" selector="{{SlideOnBackend.buttonText(PageBuilderSlideButtonTextProperty.value)}}" stepKey="waitForOnHoverButtonTextBackend" />
        <seeElement selector="{{SlideOnBackend.posterOverlay}}" stepKey="verifySeeOnHoverOverlayBackend"/>
        <seeElement selector="{{SlideOnBackend.buttonText(PageBuilderSlideButtonTextProperty.value)}}" stepKey="verifySeeOnHoverButtonTextBackend"/>
        <actionGroup ref="saveAndContinueEditCmsPage" stepKey="saveAndContinueEditCmsPage"/>
        <actionGroup ref="navigateToStoreFront" stepKey="navigateToStoreFront">
            <argument name="contentType" value="PageBuilderSliderContentType"/>
        </actionGroup>
        <!-- Validate Storefront -->
        <comment userInput="Validate Storefront" stepKey="commentValidateStorefront"/>
        <seeElement selector="{{SlideOnFrontend.slide}}" stepKey="verifySlideInFrontend"/>
        <waitForElementVisible time="3" selector="{{SlideOnFrontend.poster}}" stepKey="waitForPosterInFrontend7"/>
        <seeElement selector="{{SlideOnFrontend.poster}}" stepKey="verifyPosterInFrontend"/>
        <dontSeeElement selector="{{SlideOnFrontend.posterMobileWithMobileImage}}" stepKey="dontSeePosterInFrontendMobileWithMobileImage"/>
        <dontSeeElement selector="{{SlideOnFrontend.posterOverlay}}" stepKey="verifyDontSeeOnHoverOverlayOnFrontend"/>
        <dontSeeElement selector="{{SlideOnFrontend.buttonText(PageBuilderSlideButtonTextProperty.value)}}" stepKey="verifyDontSeeOnHoverButtonTextFrontend"/>
        <moveMouseOver selector="{{SlideOnFrontend.slide}}" stepKey="moveMouseOverFrontendSlide"/>
        <waitForElement time="2" selector="{{SlideOnFrontend.posterOverlay}}" stepKey="waitForOnHoverOverlayFrontend" />
        <waitForElement time="2" selector="{{SlideOnFrontend.buttonText(PageBuilderSlideButtonTextProperty.value)}}" stepKey="waitForOnHoverButtonTextFrontend" />
        <seeElement selector="{{SlideOnFrontend.posterOverlay}}" stepKey="verifySeeOnHoverOverlayOnFrontend8"/>
        <seeElement selector="{{SlideOnFrontend.buttonText(PageBuilderSlideButtonTextProperty.value)}}" stepKey="verifySeeOnHoverButtonTextFrontend"/>
        <!-- Validate settings on frontend mobile -->
        <resizeWindow width="767" height="1000" stepKey="resizeWindowToMobile"/>
        <waitForElementVisible time="3" selector="{{SlideOnFrontend.posterMobileWithMobileImage}}" stepKey="waitForPosterInFrontendMobileWithMobileImage"/>
        <seeElement selector="{{SlideOnFrontend.posterMobileWithMobileImage}}" stepKey="verifyPosterInFrontendMobileWithMobileImage"/>
        <dontSeeElement selector="{{SlideOnFrontend.poster}}" stepKey="dontSeePosterInFrontend"/>
        <reloadPage stepKey="reloadPage"/>
        <dontSeeElement selector="{{SlideOnFrontend.posterOverlay}}" stepKey="verifyDontSeeOnHoverOverLayOnFrontendMobile"/>
        <dontSeeElement selector="{{SlideOnFrontend.buttonText(PageBuilderSlideButtonTextProperty.value)}}" stepKey="verifyDontSeeOnHoverButtonTextFrontendMobile"/>
        <moveMouseOver selector="{{SlideOnFrontend.slide}}" stepKey="moveMouseOverFrontendSlideMobile"/>
        <waitForElement time="2" selector="{{SlideOnFrontend.posterOverlay}}" stepKey="waitForOnHoverOverlayFrontendMobile" />
        <waitForElement time="2" selector="{{SlideOnFrontend.buttonText(PageBuilderSlideButtonTextProperty.value)}}" stepKey="waitForOnHoverButtonTextFrontendMobile" />
        <seeElement selector="{{SlideOnFrontend.posterOverlay}}" stepKey="verifySeeOnHoverOverlayOnFrontendMobile"/>
        <seeElement selector="{{SlideOnFrontend.buttonText(PageBuilderSlideButtonTextProperty.value)}}" stepKey="verifySeeOnHoverButtonTextFrontendMobile"/>
        <resizeWindow width="1000" height="1000" stepKey="resizeWindowToDesktop"/>
        <waitForElementVisible time="3" selector="{{SlideOnFrontend.poster}}" stepKey="waitForPosterInFrontend8"/>
        <seeElement selector="{{SlideOnFrontend.poster}}" stepKey="verifyPosterInFrontend2"/>
        <dontSeeElement selector="{{SlideOnFrontend.posterMobileWithMobileImage}}" stepKey="dontSeePosterInFrontendMobileWithMobileImage2"/>
    </test>
    <test name="SliderPosterButtonsCanBeEditedInline">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Slider"/>
            <title value="Poster - Ability to edit a poster slider button inline on the stage"/>
            <description value="A user should be able to edit a poster slider button inline on the stage"/>
            <severity value="CRITICAL"/>
            <useCaseId value="MAGETWO-87988"/>
            <testCaseId value="MAGETWO-89565"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-slider"/>
            <group value="pagebuilder-sliderPoster"/>
        </annotations>
        <before>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="navigateToAPageWithPageBuilder" stepKey="navigateToAPageWithPageBuilder"/>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        </before>
        <after>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <actionGroup ref="addPageBuilderPageTitle" stepKey="enterPageTitle">
            <argument name="contentType" value="PageBuilderSliderContentType"/>
        </actionGroup>
        <actionGroup ref="expandPageBuilderPanelGroup" stepKey="expandPageBuilderPanelGroup">
            <argument name="group" value="PageBuilderSliderContentType"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToStageAndExpectEditPanel" stepKey="dragSliderIntoStage">
            <argument name="contentType" value="PageBuilderSliderContentType"/>
        </actionGroup>
        <!-- Fill Out Edit Panel -->
        <comment userInput="Fill Out Edit Panel" stepKey="commentFillEditPanel"/>
        <actionGroup ref="selectSlideOutPanelField" stepKey="selectShowButtonAlwaysProperty">
            <argument name="property" value="PageBuilderSlideShowButtonAlwaysProperty"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings"/>
        <!-- Validate Stage -->
        <comment userInput="Validate Stage" stepKey="commentValidateStage"/>
        <seeElementInDOM selector="{{SlideOnBackend.editableButtonItemElement(PageBuilderButtonItemType_Primary.value)}}" stepKey="seeButtonIsEditable"/>
        <click selector="{{SlideOnBackend.editableButtonItemElement(PageBuilderButtonItemType_Primary.value)}}" stepKey="clickButtonToEdit"/>
        <pressKey selector="{{SlideOnBackend.editableButtonItemElement(PageBuilderButtonItemType_Primary.value)}}" userInput="{{PageBuilderButtonItemText_Common2.value}}" stepKey="enterButtonText"/>
        <actionGroup ref="openPageBuilderEditPanelSmallByIndex" stepKey="openEditPanel">
            <argument name="section" value="SlideOnBackend"/>
        </actionGroup>
        <!-- Validate Edit Panel -->
        <comment userInput="Validate Edit Panel" stepKey="commentValidateEditPanel"/>
        <actionGroup ref="seeInFieldSlideOutProperty" stepKey="seeButtonTextOnForm1">
            <argument name="property" value="PageBuilderSlideButtonTextProperty2"/>
        </actionGroup>
        <actionGroup ref="closeEditPanelSettings" stepKey="closeEditPanelSettings"/>
        <actionGroup ref="saveAndContinueEditCmsPage" stepKey="saveAndContinueEditCmsPage"/>
        <actionGroup ref="navigateToStoreFront" stepKey="navigateToStoreFront">
            <argument name="contentType" value="PageBuilderSliderContentType"/>
        </actionGroup>
        <!-- Validate Storefront -->
        <comment userInput="Validate Storefront" stepKey="commentValidateStorefront"/>
        <seeElement selector="{{SliderOnFrontend.buttonText(PageBuilderSlideButtonTextProperty2.value)}}" stepKey="seeButtonTextStorefront"/>
    </test>
</tests>
