<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="../../../../../../../dev/tests/acceptance/vendor/magento/magento2-functional-testing-framework/src/Magento/FunctionalTestingFramework/Test/etc/testSchema.xsd">
    <test name="AdminCreateProductWithPageBuilderDescriptionTest">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Full Width Page Layout"/>
            <title value="Product description should display in full width"/>
            <description value="Product description should display in full width"/>
            <severity value="MAJOR"/>
            <testCaseId value="MC-3090"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-fullwidth"/>
        </annotations>
        <before>
            <createData entity="_defaultCategory" stepKey="createPreReqCategory"/>
        </before>
        <after>
            <amOnPage url="admin/admin/auth/logout/" stepKey="amOnLogoutPage"/>
            <deleteData createDataKey="createPreReqCategory" stepKey="deletePreReqCategory"/>
        </after>
        <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
        <actionGroup ref="FillAdminSimpleProductForm" stepKey="fillProductFieldsInAdmin">
            <argument name="category" value="$$createPreReqCategory$$"/>
            <argument name="simpleProduct" value="_defaultProduct"/>
        </actionGroup>
        <!-- Add PageBuilder description -->
        <comment userInput="Add PageBuilder description" stepKey="commentAddDescription"/>
        <click selector="{{AdminProductContentSection.sectionHeader}}" stepKey="openContentSection"/>
        <waitForElementVisible selector="{{PageBuilderCatalog.openPageBuilder}}" stepKey="waitForPageBuilderBtn" />
        <see userInput="Edit with Page Builder" stepKey="seePageBuilderBtn"/>
        <click selector="{{PageBuilderCatalog.openPageBuilder}}" stepKey="clickOnPageBuilderBtn" />
        <waitForElementVisible selector="{{PageBuilderPanel.generalGroup}}" stepKey="waiForPageBuilderVisible" />
        <seeElement selector="{{PageBuilderStage.stageWrapperFullScreen}}" stepKey="seePageBuilderFullSizeScreen" />
        <comment userInput="Set background color of row" stepKey="commentSetRowBackgroundColor"/>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage">
            <argument name="contentType" value="PageBuilderRowContentType"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterBackgroundColor">
            <argument name="property" value="PageBuilderBackgroundColor_HSV_Orange"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettingsFullScreen" stepKey="saveEditPanelSettings"/>
        <actionGroup ref="dragContentTypeToStage" stepKey="dragHeadingOntoStage">
            <argument name="contentType" value="PageBuilderHeadingContentType"/>
        </actionGroup>
        <comment userInput="Add heading to stage" stepKey="commentAddHeadingToStage"/>
        <actionGroup ref="enterHeadingOnStage" stepKey="enterHeadingOnStage">
            <argument name="headingText" value="PageBuilderHeadingTextProperty"/>
        </actionGroup>
        <click selector="{{PageBuilderStage.exitFullScreen}}" stepKey="exitPageBuilderFullScreen" />
        <click selector="{{AdminProductFormActionSection.saveButton}}" stepKey="saveProduct"/>
        <seeElement selector="{{AdminProductMessagesSection.successMessage}}" stepKey="assertSaveMessageSuccess"/>
        <amOnPage url="{{_defaultProduct.urlKey}}.html" stepKey="navigateToProductPage"/>
        <waitForPageLoad stepKey="waitForPageLoad2"/>
        <!-- Check that description is full width -->
        <comment userInput="Check that description is full width" stepKey="commentSeeDescriptionFullWidth"/>
        <executeJS function="return document.querySelector('[data-role=row]').clientWidth" stepKey="rowWidth"/>
        <executeJS function="return document.querySelector('[class=page-wrapper]').clientWidth" stepKey="pageWidth"/>
        <assertEquals expected="pageWidth" expectedType="variable" actual="rowWidth" actualType="variable" stepKey="assertRowWidth100Percent" />
    </test>
</tests>
