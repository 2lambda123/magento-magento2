<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<actionGroups xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/actionGroupSchema.xsd">
    <actionGroup name="validateBannerOverlayAndButtonPoster">
        <arguments>
            <argument name="column"/>
            <argument name="banner"/>
            <argument name="bannerBorderWidth" defaultValue="PageBuilderAdvancedBorderWidthProperty0"/>
            <argument name="diffThreshold" defaultValue="0" type="string"/>
        </arguments>
        <executeJS function="return document.querySelector('{{column.columnX('1')}}').clientWidth" stepKey="columnWidth"/>
        <executeJS function="return parseInt({{banner.bannerJS('1')}}.getBoundingClientRect().width)" stepKey="bannerWidth"/>
        <executeJS function="return parseInt({$columnWidth} - {{PageBuilderPaddingPropertyColumnDefault.paddingLeft}} - {{PageBuilderPaddingPropertyColumnDefault.paddingRight}})" stepKey="expectedBannerWidth"/>
        <executeJS function="return Math.abs({$expectedBannerWidth} - {$bannerWidth})" stepKey="bannerDiff"/>
        <!-- We will allow a 2px offset to account for rounding and any additional threshold that is passed in as an argument -->
        <executeJS function="return parseInt({{diffThreshold}} + 2)" stepKey="acceptableOffset"/>
        <assertLessThanOrEqual stepKey="assertBannerWidthEqualsColumnWidthLessColumnPaddingAndColumnBorderWidth">
            <expectedResult type="variable">acceptableOffset</expectedResult>
            <actualResult type="variable">bannerDiff</actualResult>
        </assertLessThanOrEqual>
        <executeJS function="return parseInt({{banner.overlayJS('1')}}.getBoundingClientRect().width)" stepKey="overlayWidth"/>
        <executeJS function="return parseInt({$bannerWidth} - {{PageBuilderPaddingPropertyDefault.paddingLeft}} - {{PageBuilderPaddingPropertyDefault.paddingRight}} - ({{bannerBorderWidth.value}} * 2))" stepKey="expectedOverlayWidth"/>
        <executeJS function="return Math.abs({$expectedOverlayWidth} - {$overlayWidth})" stepKey="overlayDiff"/>
        <assertLessThanOrEqual stepKey="assertOverlayWidthEqualsBannerWidthLessBannerPaddingAndBannerBorderWidth">
            <expectedResult type="variable">acceptableOffset</expectedResult>
            <actualResult type="variable">overlayDiff</actualResult>
        </assertLessThanOrEqual>
        <executeJS function="return parseInt({{banner.contentJS('1')}}.getBoundingClientRect().width)" stepKey="contentWidth"/>
        <executeJS function="return parseInt({$overlayWidth} - {{PageBuilderAdvancedMarginsAndPaddingPropertyDefaultSlide.paddingLeft}} - {{PageBuilderAdvancedMarginsAndPaddingPropertyDefaultSlide.paddingRight}})" stepKey="expectedContentWidth"/>
        <executeJS function="return Math.abs({$expectedContentWidth} - {$contentWidth})" stepKey="contentDiff"/>
        <assertLessThanOrEqual stepKey="assertContentWidthEqualsOverlayWidthLessPadding">
            <expectedResult type="variable">acceptableOffset</expectedResult>
            <actualResult type="variable">contentDiff</actualResult>
        </assertLessThanOrEqual>
        <executeJS function="return parseInt({{banner.buttonJS('1')}}.getBoundingClientRect().width)" stepKey="buttonWidth"/>
        <!-- wysiwyg content may shrink smaller, but buttons will never be smaller than 36px (17px padding + 1px border) -->
        <executeJS function="return Math.max(36, {$expectedContentWidth})" stepKey="expectedButtonWidth"/>
        <executeJS function="return Math.abs({$expectedButtonWidth} - {$buttonWidth})" stepKey="buttonDiff"/>
        <assertLessThanOrEqual stepKey="assertButtonWidthEqualsOverlayWidthLessPadding">
            <expectedResult type="variable">acceptableOffset</expectedResult>
            <actualResult type="variable">buttonDiff</actualResult>
        </assertLessThanOrEqual>
    </actionGroup>
    <actionGroup name="validateBannerOverlayAndButtonCollage">
        <arguments>
            <argument name="column"/>
            <argument name="banner"/>
            <argument name="bannerBorderWidth" defaultValue="PageBuilderAdvancedBorderWidthProperty0"/>
            <argument name="diffThreshold" defaultValue="0" type="string"/>
        </arguments>
        <executeJS function="return document.querySelector('{{column.columnX('1')}}').clientWidth" stepKey="columnWidth"/>
        <executeJS function="return parseInt({{banner.bannerJS('1')}}.getBoundingClientRect().width)" stepKey="bannerWidth"/>
        <executeJS function="return parseInt({$columnWidth} - {{PageBuilderPaddingPropertyColumnDefault.paddingLeft}} - {{PageBuilderPaddingPropertyColumnDefault.paddingRight}})" stepKey="expectedBannerWidth"/>
        <executeJS function="return Math.abs({$expectedBannerWidth} - {$bannerWidth})" stepKey="bannerDiff"/>
        <!-- We will allow a 2px offset to account for rounding and any additional threshold that is passed in as an argument -->
        <executeJS function="return parseInt({{diffThreshold}} + 2)" stepKey="acceptableOffset"/>
        <assertLessThanOrEqual stepKey="assertBannerWidthEqualsColumnWidthLessColumnPaddingAndColumnBorderWidth">
            <expectedResult type="variable">acceptableOffset</expectedResult>
            <actualResult type="variable">bannerDiff</actualResult>
        </assertLessThanOrEqual>
        <executeJS function="return parseInt({{banner.overlayJS('1')}}.getBoundingClientRect().width)" stepKey="overlayWidth"/>
        <executeJS function="return parseInt({$bannerWidth} - {{PageBuilderAdvancedMarginsAndPaddingPropertyDefaultSlide.paddingLeft}} - {{PageBuilderAdvancedMarginsAndPaddingPropertyDefaultSlide.paddingRight}} - ({{bannerBorderWidth.value}} * 2))" stepKey="expectedOverlayWidth"/>
        <executeJS function="return Math.abs({$expectedOverlayWidth} - {$overlayWidth})" stepKey="overlayDiff"/>
        <assertLessThanOrEqual stepKey="assertOverlayWidthEqualsBannerWidthLessBannerPaddingAndBannerBorderWidth">
            <expectedResult type="variable">acceptableOffset</expectedResult>
            <actualResult type="variable">overlayDiff</actualResult>
        </assertLessThanOrEqual>
        <executeJS function="return parseInt({{banner.contentJS('1')}}.getBoundingClientRect().width)" stepKey="contentWidth"/>
        <executeJS function="return parseInt({$overlayWidth} - {{PageBuilderPaddingPropertyOverlayDefault.paddingLeft}} - {{PageBuilderPaddingPropertyOverlayDefault.paddingRight}})" stepKey="expectedContentWidth"/>
        <executeJS function="return Math.abs({$expectedContentWidth} - {$contentWidth})" stepKey="contentDiff"/>
        <assertLessThanOrEqual stepKey="assertContentWidthEqualsOverlayWidthLessPadding">
            <expectedResult type="variable">acceptableOffset</expectedResult>
            <actualResult type="variable">contentDiff</actualResult>
        </assertLessThanOrEqual>
        <executeJS function="return parseInt({{banner.buttonJS('1')}}.getBoundingClientRect().width)" stepKey="buttonWidth"/>
        <!-- wysiwyg content may shrink smaller, but buttons will never be smaller than 36px (17px padding + 1px border) -->
        <executeJS function="return Math.max(36, {$expectedContentWidth})" stepKey="expectedButtonWidth"/>
        <executeJS function="return Math.abs({$expectedButtonWidth} - {$buttonWidth})" stepKey="buttonDiff"/>
        <assertLessThanOrEqual stepKey="assertButtonWidthEqualsOverlayWidthLessPadding">
            <expectedResult type="variable">acceptableOffset</expectedResult>
            <actualResult type="variable">buttonDiff</actualResult>
        </assertLessThanOrEqual>
    </actionGroup>
</actionGroups>
