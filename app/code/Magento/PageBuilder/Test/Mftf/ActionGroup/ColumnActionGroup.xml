<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<actionGroups xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
              xsi:noNamespaceSchemaLocation="../../../../../../../dev/tests/acceptance/vendor/magento/magento2-functional-testing-framework/src/Magento/FunctionalTestingFramework/Test/etc/actionGroupSchema.xsd">
    <actionGroup name="openPageBuilderEditColumnPanel">
        <moveMouseOver selector="{{PageBuilderColumnSection.columnInStage}}" x="10" y="0" stepKey="onMouseOverColumn"/>
        <waitForElementVisible time="10" selector="{{PageBuilderActionsSection.contentTypeOptionsMenu('column')}}" stepKey="waitForOptions" />
        <click selector="{{PageBuilderColumnSection.editColumn}}" stepKey="clickEditColumn"/>
        <waitForLoadingMaskToDisappear stepKey="waitForLoadingMaskToDisappear"/>
        <waitForElementVisible selector="{{PageBuilderActionsSection.editForm}}" stepKey="waitForEditForm"/>
        <see userInput="Edit Column" selector="{{PageBuilderActionsSection.editFormTitle}}" stepKey="seeContentTypeNameInEditFormTitle"/>
    </actionGroup>
    <actionGroup name="dragPageBuilderColumnIntoStage">
        <dragAndDrop selector1="{{PageBuilderColumnSection.draggableColumnInPanel}}" selector2="{{PageBuilderColumnSection.dropAreaInDefaultStage}}" stepKey="dropColumnIntoStage"/>
        <waitForElementVisible time="1" selector="{{PageBuilderColumnSection.column}}" stepKey="waitForColumn" />
        <seeElement selector="{{PageBuilderColumnSection.column}}" stepKey="seeElementColumn"/>
    </actionGroup>
    <actionGroup name="dragColumnToAnotherColumnGroup">
        <arguments>
            <argument name="contentType" defaultValue="PageBuilderColumnContentType"/>
            <argument name="contentTypeIndex" defaultValue="1" type="string"/>
            <argument name="containerTargetType" defaultValue="PageBuilderColumnContentType"/>
            <argument name="containerTargetIndex" defaultValue="1" type="string"/>
        </arguments>
        <waitForElementVisible time="20" selector="{{PageBuilderActionsSection.contentTypeInStageByIndex(contentType.role, contentTypeIndex)}}" stepKey="waitForContentTypeInStageVisible"/>
        <moveMouseOver selector="{{PageBuilderActionsSection.contentTypeInStageByIndex(contentType.role, contentTypeIndex)}}" x="10" y="0" stepKey="onMouseOverContentTypeStage"/>
        <waitForPageLoad time="30" stepKey="waitForMouseOverAnimation"/>
        <waitForElementVisible time="10" selector="{{PageBuilderActionsSection.contentTypeOptionsMenuByIndex(contentType.role, contentTypeIndex)}}" stepKey="waitForOptions"/>
        <waitForElementVisible selector="{{PageBuilderColumnSection.columnMoveByIndex(contentTypeIndex)}}" stepKey="waitForMoveHandle"/>
        <dragAndDrop selector1="{{PageBuilderColumnSection.columnMoveByIndex(contentTypeIndex)}}" selector2="{{PageBuilderActionsSection.contentTypeContainer(contentType.role, containerTargetIndex)}}" stepKey="moveContentTypeIntoContainer"/>
    </actionGroup>
    <actionGroup name="openGridSizeForm">
        <arguments>
            <argument name="index" defaultValue="1" type="string"/>
        </arguments>
        <waitForElementVisible selector="{{PageBuilderColumnSection.gridSizeButton(index)}}" stepKey="waitForGridSizeButtonVisible" />
        <click selector="{{PageBuilderColumnSection.gridSizeButton(index)}}" stepKey="clickGridSizeButton" />
        <waitForElementVisible selector="{{PageBuilderColumnSection.gridSizeInput(index)}}" stepKey="waitForGridVisible" />
        <waitForPageLoad stepKey="waitForAnimation" />
    </actionGroup>
    <actionGroup name="updateGridSize">
        <arguments>
            <argument name="index" defaultValue="1" type="string"/>
            <argument name="value" defaultValue="12" type="string"/>
        </arguments>
        <waitForElementVisible selector="{{PageBuilderColumnSection.gridSizeButton(index)}}" stepKey="waitForGridSizeButtonVisible" />
        <click selector="{{PageBuilderColumnSection.gridSizeButton(index)}}" stepKey="clickGridSizeButton" />
        <waitForElementVisible selector="{{PageBuilderColumnSection.gridSizeInput(index)}}" stepKey="waitForGridVisible" />
        <waitForPageLoad stepKey="waitForAnimation" />
        <fillField selector="{{PageBuilderColumnSection.gridSizeInput(index)}}" userInput="{{value}}" stepKey="enterGridSize"/>
        <waitForPageLoad stepKey="waitForUpdate" />
        <waitForElementVisible selector="{{PageBuilderColumnSection.displayLabel(index, '/{{value}}')}}" stepKey="validateGridSize" />
    </actionGroup>
</actionGroups>
