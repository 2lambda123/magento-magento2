<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<actionGroups xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:noNamespaceSchemaLocation="../../../../../../../dev/tests/acceptance/vendor/magento/magento2-functional-testing-framework/src/Magento/FunctionalTestingFramework/Test/etc/actionGroupSchema.xsd">
    <actionGroup name="validateBackgroundAttributesWithNoImageOrColor">
        <arguments>
            <argument name="section"/>
            <argument name="backgroundPosition" defaultValue="PageBuilderBackgroundPosition_Default"/>
            <argument name="backgroundSize" defaultValue="PageBuilderBackgroundSize_Default"/>
            <argument name="backgroundRepeat" defaultValue="PageBuilderBackgroundRepeat_Default"/>
            <argument name="backgroundAttachment" defaultValue="PageBuilderBackgroundAttachment_Default"/>
            <argument name="index" defaultValue="1" type="string"/>
        </arguments>
        <comment userInput="validateBackgroundAttributesWithNoImageOrColor" stepKey="comment"/>
        <waitForElementVisible selector="{{section.base(index)}}" stepKey="waitForBaseElement"/>
        <waitForElementVisible selector="{{section.noBackgroundColor(index)}}" stepKey="waitForBackgroundColor"/>
        <waitForElementVisible selector="{{section.noBackgroundImage(index)}}" stepKey="waitForBackgroundImage"/>
        <waitForElementVisible selector="{{section.backgroundPosition(index, backgroundPosition.styleValue)}}" stepKey="waitForBackgroundPosition"/>
        <waitForElementVisible selector="{{section.backgroundSize(index, backgroundSize.value)}}" stepKey="waitForBackgroundSize"/>
        <waitForElementVisible selector="{{section.backgroundRepeat(index, backgroundRepeat.styleValue)}}" stepKey="waitForBackgroundRepeat"/>
        <waitForElementVisible selector="{{section.backgroundAttachment(index, backgroundAttachment.value)}}" stepKey="waitForBackgroundAttachment"/>
    </actionGroup>
    <actionGroup name="validateBackgroundAttributesWithNoColor">
        <arguments>
            <argument name="section"/>
            <argument name="backgroundImage"/>
            <argument name="backgroundPosition" defaultValue="PageBuilderBackgroundPosition_Default"/>
            <argument name="backgroundSize" defaultValue="PageBuilderBackgroundSize_Default"/>
            <argument name="backgroundRepeat" defaultValue="PageBuilderBackgroundRepeat_Default"/>
            <argument name="backgroundAttachment" defaultValue="PageBuilderBackgroundAttachment_Default"/>
            <argument name="index" defaultValue="1" type="string"/>
        </arguments>
        <comment userInput="validateBackgroundAttributesWithNoColor" stepKey="comment"/>
        <waitForElementVisible selector="{{section.base(index)}}" stepKey="waitForBaseElement"/>
        <waitForElementVisible selector="{{section.noBackgroundColor(index)}}" stepKey="waitForBackgroundColor"/>
        <waitForElementVisible selector="{{section.backgroundImage(index, backgroundImage.fileName)}}" stepKey="waitForBackgroundImage"/>
        <waitForElementVisible selector="{{section.backgroundPosition(index, backgroundPosition.styleValue)}}" stepKey="waitForBackgroundPosition"/>
        <waitForElementVisible selector="{{section.backgroundSize(index, backgroundSize.value)}}" stepKey="waitForBackgroundSize"/>
        <waitForElementVisible selector="{{section.backgroundRepeat(index, backgroundRepeat.styleValue)}}" stepKey="waitForBackgroundRepeat"/>
        <waitForElementVisible selector="{{section.backgroundAttachment(index, backgroundAttachment.value)}}" stepKey="waitForBackgroundAttachment"/>
    </actionGroup>
    <actionGroup name="validateBackgroundAttributesWithNoImage">
        <arguments>
            <argument name="section"/>
            <argument name="backgroundColor"/>
            <argument name="backgroundPosition" defaultValue="PageBuilderBackgroundPosition_Default"/>
            <argument name="backgroundSize" defaultValue="PageBuilderBackgroundSize_Default"/>
            <argument name="backgroundRepeat" defaultValue="PageBuilderBackgroundRepeat_Default"/>
            <argument name="backgroundAttachment" defaultValue="PageBuilderBackgroundAttachment_Default"/>
            <argument name="index" defaultValue="1" type="string"/>
        </arguments>
        <comment userInput="validateBackgroundAttributesWithNoImage" stepKey="comment"/>
        <waitForElementVisible selector="{{section.base(index)}}" stepKey="waitForBaseElement"/>
        <waitForElementVisible selector="{{section.backgroundColor(index, backgroundColor.rgb)}}" stepKey="waitForBackgroundColor"/>
        <waitForElementVisible selector="{{section.backgroundPosition(index, backgroundPosition.styleValue)}}" stepKey="waitForBackgroundPosition"/>
        <waitForElementVisible selector="{{section.backgroundSize(index, backgroundSize.value)}}" stepKey="waitForBackgroundSize"/>
        <waitForElementVisible selector="{{section.backgroundRepeat(index, backgroundRepeat.styleValue)}}" stepKey="waitForBackgroundRepeat"/>
        <waitForElementVisible selector="{{section.backgroundAttachment(index, backgroundAttachment.value)}}" stepKey="waitForBackgroundAttachment"/>
    </actionGroup>
    <actionGroup name="validateBackgroundImageInAdmin">
        <arguments>
            <argument name="section"/>
            <argument name="backgroundImage"/>
            <argument name="index" defaultValue="1" type="string"/>
        </arguments>
        <comment userInput="validateBackgroundImageInAdmin" stepKey="comment"/>
        <waitForElementVisible selector="{{section.base(index)}}" stepKey="waitForBaseElement"/>
        <waitForElementVisible selector="{{section.backgroundImage(index, backgroundImage.fileName)}}" stepKey="waitForBackgroundImage"/>
        <grabAttributeFrom selector="{{section.backgroundImage(index, backgroundImage.fileName)}}" userInput="style" stepKey="contentTypeStyle"/>
        <!-- Grab base URL -->
        <grabFromCurrentUrl regex="/(^.+(?=\/admin))/" stepKey="baseURL"/>
        <!-- Return the string value of background-image -->
        <executeJS function="return '$contentTypeStyle'.match(/((?&lt;=(background-image: url\((&quot;|\'))).+(?=(&quot;|\')\);))/)[0]" stepKey="backgroundImageValue"/>
        <!-- Convert all characters in string variables to regex friendly strings  -->
        <executeJS function="return '$baseURL'.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\\\^\\$\|]/g, '\\\\$&amp;')" stepKey="regexBaseURL"/>
        <executeJS function="return '{{backgroundImage.path}}'.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\\\^\\$\|]/g, '\\\\$&amp;')" stepKey="regexFilePath"/>
        <assertRegExp stepKey="assertBackgroundImageContainsFileInformation">
            <expectedResult type="string">/{$regexBaseURL}\/pub\/media.*{$regexFilePath}\/{{backgroundImage.fileName}}(_\d+)?\.{{backgroundImage.extension}}/</expectedResult>
            <actualResult type="variable">$backgroundImageValue</actualResult>
        </assertRegExp>
    </actionGroup>
    <actionGroup name="validateBackgroundImageOnStorefront">
        <arguments>
            <argument name="section"/>
            <argument name="contentType"/>
            <argument name="backgroundImage"/>
            <argument name="index" defaultValue="1" type="string"/>
        </arguments>
        <comment userInput="validateBackgroundImageOnStorefront" stepKey="comment"/>
        <waitForElementVisible selector="{{section.base(index)}}" stepKey="waitForBaseElement"/>
        <waitForElementVisible selector="{{section.backgroundImage(index, backgroundImage.fileName)}}" stepKey="waitForBackgroundImage"/>
        <grabAttributeFrom selector="{{section.backgroundImage(index, backgroundImage.fileName)}}" userInput="style" stepKey="contentTypeStyle"/>
        <!-- Grab base URL -->
        <executeJS function="return '{{contentType.pageNamePrefix}}{{PageBuilderPageTitle.pageName}}'" stepKey="storefrontPage"/>
        <grabFromCurrentUrl regex="/(^.+(?=\/$storefrontPage))/" stepKey="baseURL"/>
        <!-- Return the string value of background-image -->
        <executeJS function="return '$contentTypeStyle'.match(/((?&lt;=(background-image: url\((&quot;|\'))).+(?=(&quot;|\')\);))/)[0]" stepKey="backgroundImageValue"/>
        <!-- Convert all characters in string variables to regex friendly strings  -->
        <executeJS function="return '$baseURL'.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\\\^\\$\|]/g, '\\\\$&amp;')" stepKey="regexBaseURL"/>
        <executeJS function="return '{{backgroundImage.path}}'.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\\\^\\$\|]/g, '\\\\$&amp;')" stepKey="regexFilePath"/>
        <assertRegExp stepKey="assertBackgroundImageContainsFileInformation">
            <expectedResult type="string">/{$regexBaseURL}\/pub\/media.*{$regexFilePath}\/{{backgroundImage.fileName}}(_\d+)?\.{{backgroundImage.extension}}/</expectedResult>
            <actualResult type="variable">$backgroundImageValue</actualResult>
        </assertRegExp>
    </actionGroup>
</actionGroups>
