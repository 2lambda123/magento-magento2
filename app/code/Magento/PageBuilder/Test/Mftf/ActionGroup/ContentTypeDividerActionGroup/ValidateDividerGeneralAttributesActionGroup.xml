<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->
<actionGroups xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/actionGroupSchema.xsd">
    <actionGroup name="validateDividerGeneralAttributesActionGroup">
        <arguments>
            <argument name="page" defaultValue=""/>
            <argument name="index" defaultValue="1" type="string"/>
            <argument name="lineColor" defaultValue="PageBuilderDividerLineColor_Default"/>
            <argument name="lineThickness" defaultValue="PageBuilderDividerLineThickness_Default"/>
            <argument name="lineWidth" defaultValue="PageBuilderDividerLineWidth_Default"/>
        </arguments>
        <waitForElementVisible selector="{{page.base(index)}}" stepKey="waitForElementVisible"/>
        <executeJS function="return window.getComputedStyle(document.evaluate('{{page.innerWrapper(index)}}', document.body).iterateNext()).borderColor" stepKey="grabColorValue"/>
        <assertEquals stepKey="assertColorValue">
            <expectedResult type="string">{{lineColor.rgb}}</expectedResult>
            <actualResult type="variable">grabColorValue</actualResult>
        </assertEquals>
        <executeJS function="return window.getComputedStyle(document.evaluate('{{page.innerWrapper(index)}}', document.body).iterateNext()).borderTopWidth" stepKey="grabBorderWidthValue"/>
        <assertEquals stepKey="assertThicknessValue">
            <expectedResult type="string">{{lineThickness.value}}px</expectedResult>
            <actualResult type="variable">grabBorderWidthValue</actualResult>
        </assertEquals>
        <executeJS function="return document.evaluate('{{page.innerHrStyleId(index)}}', document.body).iterateNext().nodeValue" stepKey="grabDividerStyleId"/>
        <executeJS function="return (document.querySelector(&quot;[data-style-id='{$grabDividerStyleId}'&quot;).innerText.indexOf(&quot;width: {{lineWidth.value}}&quot;) !== -1).toString()" stepKey="grabWidthValue"/>
        <assertEquals stepKey="assertWidthValue">
            <expectedResult type="string">true</expectedResult>
            <actualResult type="variable">grabWidthValue</actualResult>
        </assertEquals>
    </actionGroup>
</actionGroups>
