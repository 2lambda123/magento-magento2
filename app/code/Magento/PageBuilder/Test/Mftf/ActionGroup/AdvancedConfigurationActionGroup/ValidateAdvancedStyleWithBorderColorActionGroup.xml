<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->
<actionGroups xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/actionGroupSchema.xsd">
    <actionGroup name="validateAdvancedStyleWithBorderColor">
        <arguments>
            <argument name="page" defaultValue=""/>
            <argument name="border" defaultValue="PageBuilderAdvancedBorderPropertyNone"/>
            <argument name="borderColor" defaultValue=""/>
            <argument name="borderWidth" defaultValue="PageBuilderAdvancedBorderWidthPropertyDefault"/>
            <argument name="borderRadius" defaultValue="PageBuilderAdvancedBorderRadiusDefaultProperty"/>
            <argument name="margin" defaultValue="PageBuilderMarginsPropertyDefault"/>
            <argument name="padding" defaultValue="PageBuilderPaddingPropertyDefault"/>
            <argument name="index" defaultValue="1" type="string"/>
        </arguments>
        <waitForElementVisible selector="{{page.base(index)}}" stepKey="waitForElementVisible"/>
        <comment userInput="---merging to remove step---" stepKey="waitForAlignmentVisible"/>
        <executeJS function="return window.getComputedStyle(document.evaluate('{{page.border(index)}}', document.body).iterateNext()).borderStyle" stepKey="grabBorderStyleValue"/>
        <assertEquals stepKey="waitForBorderVisible">
            <expectedResult type="string">{{border.value}}</expectedResult>
            <actualResult type="variable">grabBorderStyleValue</actualResult>
        </assertEquals>
        <executeJS function="return window.getComputedStyle(document.evaluate('{{page.borderColor(index)}}', document.body).iterateNext()).borderColor" stepKey="grabBorderColorValue"/>
        <assertEquals stepKey="waitForBorderColorVisible">
            <expectedResult type="string">{{borderColor.rgb}}</expectedResult>
            <actualResult type="variable">grabBorderColorValue</actualResult>
        </assertEquals>
        <executeJS function="return window.getComputedStyle(document.evaluate('{{page.borderWidth(index)}}', document.body).iterateNext()).borderWidth.replace(&quot;px&quot;, &quot;&quot;)" stepKey="grabBorderWidthValue"/>
        <assertEquals stepKey="waitForBorderWidthVisible">
            <expectedResult type="string">{{borderWidth.value}}</expectedResult>
            <actualResult type="variable">grabBorderWidthValue</actualResult>
        </assertEquals>
        <executeJS function="return window.getComputedStyle(document.evaluate('{{page.borderRadius(index)}}', document.body).iterateNext()).borderRadius.replace(&quot;px&quot;, &quot;&quot;)" stepKey="grabBorderRadiusValue"/>
        <assertEquals stepKey="waitForBorderRadiusVisible">
            <expectedResult type="string">{{borderRadius.value}}</expectedResult>
            <actualResult type="variable">grabBorderRadiusValue</actualResult>
        </assertEquals>
        <waitForElementVisible selector="{{page.noCssClasses(index)}}" stepKey="waitForCSSClassesVisible"/>
        <waitForElementVisible selector="{{page.cssClasses(index, cssClasses.value)}}" stepKey="waitForCSSClassesVisible"/>
        <executeJS function="return window.getComputedStyle(document.evaluate('{{page.margins(index)}}', document.body).iterateNext()).margin.replace(&quot;px&quot;, &quot;&quot;)" stepKey="grabMarginValue"/>
        <assertEquals stepKey="waitForMarginVisible">
            <expectedResult type="string">{{margin.value}}</expectedResult>
            <actualResult type="variable">grabMarginValue</actualResult>
        </assertEquals>
        <executeJS function="return window.getComputedStyle(document.evaluate('{{page.padding(index)}}', document.body).iterateNext()).padding.replace(&quot;px&quot;, &quot;&quot;)" stepKey="grabPaddingValue"/>
        <assertEquals stepKey="waitForPaddingVisible">
            <expectedResult type="string">{{padding.value}}</expectedResult>
            <actualResult type="variable">grabPaddingValue</actualResult>
        </assertEquals>
    </actionGroup>
</actionGroups>
