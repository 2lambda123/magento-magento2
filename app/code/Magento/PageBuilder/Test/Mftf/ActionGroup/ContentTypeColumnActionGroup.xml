<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<actionGroups xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
              xsi:noNamespaceSchemaLocation="../../../../../../../dev/tests/acceptance/vendor/magento/magento2-functional-testing-framework/src/Magento/FunctionalTestingFramework/Test/etc/actionGroupSchema.xsd">
    <actionGroup name="dragColumnToAnotherColumnGroup">
        <arguments>
            <argument name="contentType" defaultValue="PageBuilderColumnContentType"/>
            <argument name="contentTypeIndex" defaultValue="1" type="string"/>
            <argument name="containerTargetType" defaultValue="PageBuilderColumnContentType"/>
            <argument name="containerTargetIndex" defaultValue="1" type="string"/>
        </arguments>
        <waitForElementVisible time="20" selector="{{PageBuilderStage.contentTypeInStageByIndex(contentType.role, contentTypeIndex)}}" stepKey="waitForContentTypeInStageVisible"/>
        <moveMouseOver selector="{{PageBuilderStage.contentTypeInStageByIndex(contentType.role, contentTypeIndex)}}" x="10" y="0" stepKey="onMouseOverContentTypeStage"/>
        <waitForPageLoad time="30" stepKey="waitForMouseOverAnimation"/>
        <waitForElementVisible time="10" selector="{{PageBuilderContentTypeOptionsMenu.contentTypeOptionsMenuByIndex(contentType.role, contentTypeIndex)}}" stepKey="waitForOptions"/>
        <waitForElementVisible selector="{{PageBuilderColumnSection.columnMoveByIndex(contentTypeIndex)}}" stepKey="waitForMoveHandle"/>
        <dragAndDrop selector1="{{PageBuilderColumnSection.columnMoveByIndex(contentTypeIndex)}}" selector2="{{PageBuilderStage.contentTypeContainer(contentType.role, containerTargetIndex)}}" stepKey="moveContentTypeIntoContainer"/>
        <waitForPageLoad stepKey="waitForDragOperation" />
    </actionGroup>
    <actionGroup name="openGridSizeForm">
        <arguments>
            <argument name="index" defaultValue="1" type="string"/>
        </arguments>
        <waitForElementVisible selector="{{PageBuilderColumnSection.gridSizeButton(index)}}" stepKey="waitForGridSizeButtonVisible" />
        <click selector="{{PageBuilderColumnSection.gridSizeButton(index)}}" stepKey="clickGridSizeButton" />
        <waitForPageLoad stepKey="waitForAnimation" />
        <waitForElementVisible selector="{{PageBuilderColumnSection.gridSizeInput(index)}}" stepKey="waitForGridVisible" />
    </actionGroup>
    <actionGroup name="closeGridSizeForm">
        <arguments>
            <argument name="index" defaultValue="1" type="string"/>
        </arguments>
        <click selector="{{PageBuilderColumnSection.columnX('1')}}" stepKey="clickColumn" />
        <waitForPageLoad stepKey="waitForAnimation" />
        <waitForElementNotVisible selector="{{PageBuilderColumnSection.gridSizeInput(index)}}" stepKey="waitForGridNotVisible" />
    </actionGroup>
    <actionGroup name="updateGridSize">
        <arguments>
            <argument name="index" defaultValue="1" type="string"/>
            <argument name="gridSize" defaultValue="12" type="string"/>
        </arguments>
        <waitForElementVisible selector="{{PageBuilderColumnSection.gridSizeButton(index)}}" stepKey="waitForGridSizeButtonVisible" />
        <click selector="{{PageBuilderColumnSection.gridSizeButton(index)}}" stepKey="clickGridSizeButton" />
        <waitForPageLoad stepKey="waitForAnimation" />
        <waitForElementVisible selector="{{PageBuilderColumnSection.gridSizeInput(index)}}" stepKey="waitForGridVisible" />
        <fillField selector="{{PageBuilderColumnSection.gridSizeInput(index)}}" userInput="{{gridSize}}" stepKey="enterGridSize"/>
        <pressKey selector="{{PageBuilderColumnSection.gridSizeInput(index)}}" parameterArray="['su',\Facebook\WebDriver\WebDriverKeys::ENTER]" stepKey="pressKeyEnter"/>
        <waitForPageLoad stepKey="waitForUpdate" />
        <waitForElementVisible selector="{{PageBuilderColumnSection.displayLabelGridSize(index, gridSize)}}" stepKey="validateGridSize" />
    </actionGroup>
    <actionGroup name="updateGridSizeInvalid">
        <arguments>
            <argument name="index" defaultValue="1" type="string"/>
            <argument name="gridSize" defaultValue="12" type="string"/>
            <argument name="errorMessage"/>
        </arguments>
        <fillField selector="{{PageBuilderColumnSection.gridSizeInput(index)}}" userInput="{{gridSize}}" stepKey="enterGridSize"/>
        <click selector="{{PageBuilderColumnSection.columnX(index)}}" stepKey="clickColumn" />
        <waitForPageLoad stepKey="waitForAnimation" />
        <waitForElementVisible selector="{{PageBuilderColumnSection.gridSizeError(index, errorMessage)}}" stepKey="verifyError"/>
    </actionGroup>
</actionGroups>
