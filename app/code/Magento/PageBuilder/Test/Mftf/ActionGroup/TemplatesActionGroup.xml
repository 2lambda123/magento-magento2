<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<actionGroups xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/actionGroupSchema.xsd">
    <actionGroup name="openSaveTemplateModal">
        <waitForElementVisible selector="{{PageBuilderStage.saveAsTemplateButton}}" stepKey="waitForSaveAsTemplateButton"/>
        <click selector="{{PageBuilderStage.saveAsTemplateButton}}" stepKey="clickSaveAsTemplateButton"/>
        <waitForPageLoad stepKey="waitForModalLoad"/>
        <waitForElementVisible selector="{{PageBuilderSaveTemplateModal.activeModal}}" stepKey="waitForModalVisible"/>
        <see userInput="Save Content as Template" selector="{{PageBuilderSaveTemplateModal.title}}" stepKey="seeTitle"/>
        <waitForPageLoad stepKey="waitForPreviewLoad"/>
    </actionGroup>
    <actionGroup name="fillSaveTemplateForm">
        <arguments>
            <argument name="templateName" defaultValue="{{PageBuilderTemplateNameRandom.name}}" type="string"/>
            <argument name="createdFor" defaultValue="{{PageBuilderTemplateCreatedFor.any}}" type="string"/>
        </arguments>
        <waitForPageLoad stepKey="waitForModalLoad"/>
        <waitForElement selector="{{PageBuilderSaveTemplateModal.templateNameInput}}" stepKey="waitForTemplateName"/>
        <fillField userInput="{{templateName}}" selector="{{PageBuilderSaveTemplateModal.templateNameInput}}" stepKey="enterTemplateName"/>
        <waitForElement selector="{{PageBuilderSaveTemplateModal.createdForSelect}}" stepKey="waitForCreatedFor"/>
        <selectOption userInput="{{createdFor}}" selector="{{PageBuilderSaveTemplateModal.createdForSelect}}" stepKey="selectCreatedFor"/>
    </actionGroup>
    <actionGroup name="validateSaveTemplateModal">
        <waitForPageLoad stepKey="waitForModalLoad"/>
        <see userInput="Save Content as Template" selector="{{PageBuilderSaveTemplateModal.title}}" stepKey="seeTitle"/>
        <seeElement selector="{{PageBuilderSaveTemplateModal.closeButton}}" stepKey="seeCloseButton"/>
        <seeElement selector="{{PageBuilderSaveTemplateModal.previewImage}}" stepKey="seePreview"/>
<!--        todo: validate preview image not error -->
        <seeElement selector="{{PageBuilderSaveTemplateModal.templateNameInput}}" stepKey="seeTemplateNameInput"/>
        <seeElement selector="{{PageBuilderSaveTemplateModal.createdForSelect}}" stepKey="seeCreatedForSelect"/>
        <see userInput="Created For is to help with filtering templates. This does not restrict where this template can be used." selector="{{PageBuilderSaveTemplateModal.createdForHelperText}}" stepKey="seeCreatedForHelperText"/>
        <seeElement selector="{{PageBuilderSaveTemplateModal.saveButton}}" stepKey="seeSaveButton"/>
        <seeElement selector="{{PageBuilderSaveTemplateModal.cancelButton}}" stepKey="seeCancelButton"/>
    </actionGroup>
    <actionGroup name="clickSaveOnSaveTemplateModal">
        <waitForPageLoad stepKey="waitForModalLoad"/>
        <waitForElement selector="{{PageBuilderSaveTemplateModal.saveButton}}" stepKey="waitForSaveButton"/>
        <click selector="{{PageBuilderSaveTemplateModal.saveButton}}" stepKey="clickSaveButton"/>
        <waitForPageLoad stepKey="waitForModalClose"/>
        <waitForElementVisible selector="{{PageBuilderSaveTemplateConfirmationModal.modal}}" stepKey="waitForConfirmationModal"/>
    </actionGroup>
    <actionGroup name="validateSaveTemplateConfirmationModal">
        <waitForPageLoad stepKey="waitForModalLoad"/>
        <seeElement selector="{{PageBuilderSaveTemplateConfirmationModal.title}}" stepKey="seeTitle"/>
        <seeElement selector="{{PageBuilderSaveTemplateConfirmationModal.closeButton}}" stepKey="seeCloseButton"/>
        <seeElement selector="{{PageBuilderSaveTemplateConfirmationModal.message}}" stepKey="seeMessage"/>
        <seeElement selector="{{PageBuilderSaveTemplateConfirmationModal.okButton}}" stepKey="seeOKButton"/>
    </actionGroup>
    <actionGroup name="saveTemplate">
        <arguments>
            <argument name="baseContent" defaultValue="{{CmsNewPagePageActionsSection.saveAndContinueEdit}}" type="string"/>
        </arguments>
        <waitForPageLoad stepKey="waitForModalLoad"/>
        <waitForElement selector="{{PageBuilderSaveTemplateModal.saveButton}}" stepKey="waitForSaveButton"/>
        <click selector="{{PageBuilderSaveTemplateModal.saveButton}}" stepKey="clickSaveButton"/>
        <waitForPageLoad stepKey="waitForModalClose"/>
        <waitForElementVisible selector="{{PageBuilderSaveTemplateConfirmationModal.okButton}}" stepKey="waitForOKButton"/>
        <click selector="{{PageBuilderSaveTemplateConfirmationModal.okButton}}" stepKey="clickOKButton"/>
        <waitForPageLoad stepKey="waitForModalGone"/>
        <waitForElementNotVisible time="5" selector="{{PageBuilderSaveTemplateConfirmationModal.modal}}" stepKey="waitForModalNotVisible"/>
        <waitForElementVisible time="10" selector="{{baseContent}}" stepKey="waitForContentUnderModalVisible"/>
    </actionGroup>
    <actionGroup name="closeSaveTemplateModal">
        <arguments>
            <argument name="baseContent" defaultValue="{{CmsNewPagePageActionsSection.saveAndContinueEdit}}" type="string"/>
        </arguments>
        <waitForPageLoad stepKey="waitForModalLoad"/>
        <waitForElementVisible selector="{{PageBuilderSaveTemplateModal.closeButton}}" stepKey="waitForCloseButton"/>
        <click selector="{{PageBuilderSaveTemplateModal.closeButton}}" stepKey="clickCloseButton"/>
        <waitForPageLoad stepKey="waitForModalClose"/>
        <waitForElementNotVisible time="5" selector="{{PageBuilderSaveTemplateModal.activeModal}}" stepKey="waitForModalNotVisible"/>
        <waitForElementVisible time="10" selector="{{baseContent}}" stepKey="waitForContentUnderModalVisible"/>
    </actionGroup>
    <actionGroup name="openApplyTemplateSlideOut">
        <waitForElementVisible selector="{{PageBuilderStage.applyTemplateButton}}" stepKey="waitForApplyTemplateButton"/>
        <click selector="{{PageBuilderStage.applyTemplateButton}}" stepKey="clickApplyTemplateButton"/>
        <waitForPageLoad stepKey="waitForSlideOutLoad"/>
        <waitForElementVisible selector="{{PageBuilderApplyTemplateSlideOut.activeSlideOut}}" stepKey="waitForSlideOut"/>
        <see userInput="Apply Template" selector="{{PageBuilderApplyTemplateSlideOut.title}}" stepKey="seeTitle"/>
        <waitForPageLoad stepKey="waitForSlideOutForm"/>
    </actionGroup>
    <actionGroup name="clickApplyTemplateFromSlideOut">
        <arguments>
            <argument name="templateIdentifier" defaultValue="{{PageBuilderTemplateNameRandom.name}}" type="string"/>
        </arguments>
        <waitForPageLoad stepKey="waitForSlideOutLoad"/>
        <waitForElementVisible selector="{{PageBuilderApplyTemplateGrid.applyButton(templateIdentifier)}}" stepKey="waitForApplyButton"/>
        <click selector="{{PageBuilderApplyTemplateGrid.applyButton(templateIdentifier)}}" stepKey="clickApplyButton"/>
        <waitForPageLoad stepKey="waitForPageLoad"/>
    </actionGroup>
    <actionGroup name="confirmApplyTemplateFromSlideOut" extends="confirmRemovalModal">
        <arguments>
            <argument name="baseContent" defaultValue="{{CmsNewPagePageActionsSection.saveAndContinueEdit}}" type="string"/>
        </arguments>
        <waitForElementNotVisible time="5" selector="{{PageBuilderApplyTemplateSlideOut.slideOut}}" stepKey="waitForSlideOutNotVisible" after="waitForPageLoad2"/>
        <waitForElementVisible time="10" selector="{{baseContent}}" stepKey="waitForContentUnderSlideOutVisible" after="waitForSlideOutNotVisible"/>
    </actionGroup>
    <actionGroup name="closeApplyTemplateSlideOut">
        <arguments>
            <argument name="baseContent" defaultValue="{{CmsNewPagePageActionsSection.saveAndContinueEdit}}" type="string"/>
        </arguments>
        <waitForPageLoad stepKey="waitForSlideOutLoad"/>
        <waitForElementVisible selector="{{PageBuilderApplyTemplateSlideOut.closeButton}}" stepKey="waitForCloseButton"/>
        <click selector="{{PageBuilderApplyTemplateSlideOut.closeButton}}" stepKey="clickCloseButton"/>
        <waitForPageLoad stepKey="waitForSlideOutClose"/>
        <waitForElementNotVisible time="5" selector="{{PageBuilderApplyTemplateSlideOut.slideOut}}" stepKey="waitForSlideOutNotVisible"/>
        <waitForElementVisible time="10" selector="{{baseContent}}" stepKey="waitForContentUnderSlideOutVisible"/>
    </actionGroup>
</actionGroups>
